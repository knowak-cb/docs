{"openapi": "3.0.0", "info": {"title": "Deribit API", "description": "Deribit API v2.1.1 - REST API for cryptocurrency derivatives trading", "version": "2.1.1"}, "servers": [{"url": "http://localhost:8082/api/v2", "description": "local test server"}, {"url": "https://test.deribit.com/api/v2"}], "tags": [{"name": "websocket_only", "description": "Can only be used over websockets."}, {"name": "public", "description": "Public methods can be used without authentication."}, {"name": "private", "description": "Private methods require authentication. All requests must include a valid OAuth2 token. A token can be requested using the /public/auth method. When using the websockets protocol, the token must be included as a parameter `access_token` in the message. When using REST (HTTP GET), the token may also be passed in the `Authorization` header."}, {"name": "internal", "description": "Not intended for public use; do not include in publicly available documentation."}, {"name": "authentication"}, {"name": "session_management"}, {"name": "subscription_management", "description": "Subscription works as notifications, so users will automatically (after subscribing) receive messages from the server. Overview for each channel response format is described in subscriptions section."}, {"name": "account_management"}, {"name": "trading"}, {"name": "market_data"}, {"name": "wallet"}, {"name": "chat"}], "paths": {"/private/toggle_deposit_address_creation": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/OkResponse"}}, "description": "Enable or disable deposit address creation", "tags": ["wallet", "private", "internal"]}}, "/private/get_withdrawal_policy_mode": {"get": {"responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Returns Global Withdrawal Policy for a currency", "tags": ["wallet", "private", "internal"]}}, "/private/set_withdrawal_policy_mode": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/OkResponse"}}, "description": "Sets Global Withdrawal Policy for a currency", "tags": ["wallet", "private", "internal"]}}, "/private/get_withdrawal_policy_limits": {"get": {"responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Returns Withdrawal Policy Limits", "tags": ["wallet", "private", "internal"]}}, "/private/set_withdrawal_policy_limits": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/OkResponse"}}, "description": "Sets Global Withdrawal Policy Limits", "tags": ["wallet", "private", "internal"]}}, "/public/get_order_book": {"get": {"parameters": [{"description": "The instrument name for which to retrieve the order book, see `public/get_instruments` to obtain instrument names.", "in": "query", "name": "instrument_name", "required": true, "schema": {"type": "string"}}, {"description": "The number of entries to return for bids and asks, maximum - `10000`.", "in": "query", "name": "depth", "required": false, "schema": {"type": "integer", "enum": [1, 5, 10, 20, 50, 100, 1000, 10000]}}], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Retrieves the order book, along with other market values for a given instrument.", "tags": ["market_data", "public"]}}, "/public/get_order_book_by_instrument_id": {"get": {"parameters": [{"description": "The instrument ID for which to retrieve the order book, see `public/get_instruments` to obtain instrument IDs.", "in": "query", "name": "instrument_id", "required": true, "schema": {"type": "integer"}}, {"description": "The number of entries to return for bids and asks, maximum - `10000`.", "in": "query", "name": "depth", "required": false, "schema": {"type": "integer", "enum": [1, 5, 10, 20, 50, 100, 1000, 10000]}}], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Retrieves the order book, along with other market values for a given instrument ID.", "tags": ["market_data", "public"]}}, "/public/get_last_settlements_by_currency": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Retrieves historical settlement, delivery and bankruptcy events coming from all instruments within a given currency.", "tags": ["market_data", "public"]}}, "/public/get_book_summary_by_currency": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/BookSummaryResponse"}}, "description": "Retrieves the summary information such as open interest, 24h volume, etc. for all instruments for the currency (optionally filtered by kind). **Note** - For real-time updates, we recommend using the WebSocket subscription to `ticker.{instrument_name}.{interval}` instead of polling this endpoint.", "tags": ["market_data", "public"]}}, "/public/get_book_summary_by_instrument": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/BookSummaryResponse"}}, "description": "Retrieves the summary information such as open interest, 24h volume, etc. for a specific instrument.", "tags": ["market_data", "public"]}}, "/public/get_last_settlements_by_instrument": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Retrieves historical public settlement, delivery and bankruptcy events filtered by instrument name.", "tags": ["market_data", "public"]}}, "/public/get_contract_size": {"get": {"description": "Retrieves contract size of provided instrument.", "tags": ["public", "market_data"], "parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}}}, "/private/get_settlement_history_by_currency": {"x-order": 10200, "get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Retrieves settlement, delivery and bankruptcy events that have affected your account.", "tags": ["trading", "private"]}}, "/private/get_settlement_history_by_instrument": {"x-order": 10100, "get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Retrieves public settlement, delivery and bankruptcy events filtered by instrument name", "tags": ["trading", "private"]}}, "/public/get_trade_volumes": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Retrieves aggregated 24h trade volumes for different instrument types and currencies.", "tags": ["market_data", "public"]}}, "/public/get_index": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Retrieves the current index price for the instruments, for the selected currency.", "tags": ["market_data", "public", "deprecated"]}}, "/public/get_index_price": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Retrieves the current index price value for given index name.", "tags": ["market_data", "public"]}}, "/public/get_index_price_names": {"get": {"description": "Retrieves the identifiers of all supported Price Indexes", "tags": ["market_data", "public"], "parameters": [{"name": "extended", "description": "When set to `true`, returns additional information including `future_combo_creation_enabled` and `option_combo_creation_enabled` for each index", "in": "query", "required": false, "schema": {"type": "boolean", "default": false}}], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}}}, "/public/get_supported_index_names": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Retrieves the identifiers of all supported Price Indexes", "tags": ["market_data", "public"]}}, "/public/get_instruments": {"get": {"description": "Retrieves available trading instruments. This method can be used to see which instruments are available for trading, or which instruments have recently expired. **Note - This endpoint has distinct API rate limiting requirements:** 1 request per 10 seconds, with a burst of 5. To avoid rate limits, we recommend using either the REST requests for server-cached data or the WebSocket subscription to [instrument_state.{kind}.{currency}](https://docs.deribit.com/#instrument-state-kind-currency) for real-time updates. For more information, see [Rate Limits](https://support.deribit.com/hc/en-us/articles/25944617523357-Rate-Limits).", "tags": ["public", "market_data"], "parameters": [{"name": "expired", "description": "Set to true to show recently expired instruments instead of active ones.", "in": "query", "schema": {"type": "boolean", "default": false}}], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}}}, "/public/get_instrument": {"get": {"description": "Retrieves information about instrument", "tags": ["public", "market_data"], "parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}}}, "/public/get_historical_volatility": {"get": {"description": "Provides information about historical volatility for given cryptocurrency.", "parameters": [], "tags": ["public", "market_data"], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}}}, "/public/get_funding_rate_history": {"get": {"description": "Retrieves hourly historical interest rate for requested PERPETUAL instrument.", "tags": ["public", "market_data"], "parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}}}, "/public/get_funding_rate_value": {"get": {"description": "Retrieves interest rate value for requested period. Applicable only for PERPETUAL instruments.", "tags": ["public", "market_data"], "parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}}}, "/public/get_index_chart_data": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Price index chart data.", "tags": ["public", "market_data", "internal"]}}, "/public/get_insurance_chart_data": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Insurance balance chart data.", "tags": ["public", "market_data", "internal"]}}, "/public/get_insurance_data": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Insurance balance and bankruptcies data.", "tags": ["public", "market_data", "internal"]}}, "/public/get_mark_price_history": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Public request for 5min history of markprice values for the instrument. For now the markprice history is available only for a subset of options which take part in the volatility index calculations. All other instruments, futures and perpetuals will return an empty list.", "tags": ["public", "market_data", "markprice"]}}, "/public/get_combos": {"get": {"description": "Retrieves information about active combos", "tags": ["combo_books", "public"], "parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}}}, "/public/get_combo_ids": {"get": {"description": "Retrieves available combos. This method can be used to get the list of all combos, or only the list of combos in the given state.", "tags": ["combo_books", "public"], "parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}}}, "/public/get_combo_details": {"get": {"description": "Retrieves information about a combo", "tags": ["combo_books", "public"], "parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}}}, "/public/get_expirations": {"get": {"description": "Retrieves expirations for instruments. This method can be used to see instruments's expirations.", "tags": ["public", "market_data"], "parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}}}, "/public/get_apr_history": {"get": {"description": "Retrieves historical APR data for specified currency. Only applicable to yield-generating tokens (`USDE`, `STETH`, `USDC`, `BUILD`). **📖 Related Support Article:** [Yield reward-bearing coins](https://support.deribit.com/hc/en-us/articles/26525792475677-Yield-reward-bearing-coins)", "tags": ["public", "market_data"], "parameters": [{"name": "currency", "in": "query", "required": true, "schema": {"type": "string", "enum": ["usde", "steth", "usdc", "build"]}, "description": "Currency for which to retrieve APR history"}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer"}, "description": "Number of days to retrieve (default `365`, maximum `365`)"}, {"name": "before", "in": "query", "required": false, "schema": {"type": "integer"}, "description": "Used to receive APR history before given epoch day"}], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}}}, "/private/get_order_history_by_instrument": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Retrieves history of orders that have been partially or fully filled.", "tags": ["trading", "private"]}}, "/private/get_order_history_by_currency": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Retrieves history of orders that have been partially or fully filled.", "tags": ["trading", "private"]}}, "/private/get_order_state": {"get": {"description": "Retrieve the current state of an order. **Important Note for Mass Quotes:** Quote orders are order-like structures that don't fully translate to normal orders. When checking order state for quotes, the `amount` field represents the remaining amount, not the original order amount.", "tags": ["private", "trading"], "parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}, "400": {"$ref": "#/components/responses/ErrorResponse"}}}}, "/private/get_order_state_by_label": {"get": {"description": "Retrieve the state of recent orders with a given label.", "tags": ["private", "trading"], "parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}, "400": {"$ref": "#/components/responses/ErrorResponse"}}}}, "/private/get_open_orders": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Retrieves list of user's open orders across many currencies.", "tags": ["trading", "private"]}}, "/private/get_open_orders_by_instrument": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Retrieves list of user's open orders within a given Instrument.", "tags": ["trading", "private"]}}, "/private/get_open_orders_by_currency": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Retrieves list of user's open orders.", "tags": ["trading", "private"]}}, "/private/get_open_orders_by_label": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Retrieves list of user's open orders for given currency and label.", "tags": ["trading", "private"]}}, "/private/get_order_margin_by_ids": {"get": {"parameters": [{"name": "ids", "description": "Ids of orders", "in": "query", "required": true, "schema": {"type": "array", "items": {"type": "string", "example": "123456"}}}], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Retrieves initial margins of given orders", "tags": ["trading", "private"]}}, "/private/get_trigger_order_history": {"get": {"parameters": [{"name": "instrument_name", "description": "Instrument name", "required": false, "in": "query", "schema": {}}], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Retrieves detailed log of the user's trigger orders.", "tags": ["trading", "private"]}}, "/public/get_last_trades_by_instrument": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Retrieve the latest trades that have occurred for a specific instrument.", "tags": ["market_data", "public"]}}, "/public/get_last_trades_by_instrument_and_time": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Retrieve the latest trades that have occurred for a specific instrument and within a given time range.", "tags": ["market_data", "public"]}}, "/public/get_last_trades_by_currency": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Retrieve the latest trades that have occurred for instruments in a specific currency symbol.", "tags": ["market_data", "public"]}}, "/public/get_last_trades_by_currency_and_time": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Retrieve the latest trades that have occurred for instruments in a specific currency symbol and within a given time range.", "tags": ["market_data", "public"]}}, "/private/get_user_trades_by_instrument": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Retrieve the latest user trades that have occurred for a specific instrument.", "tags": ["trading", "private"]}}, "/private/get_user_trades_by_instrument_and_time": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Retrieve the latest user trades that have occurred for a specific instrument and within a given time range.", "tags": ["trading", "private"]}}, "/private/get_user_trades_by_currency": {"get": {"parameters": [{"name": "subaccount_id", "description": "The user id for the subaccount", "in": "query", "schema": {"type": "integer"}, "required": false}], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Retrieve the latest user trades that have occurred for instruments in a specific currency symbol. To read subaccount trades, use `subaccount_id` parameter.", "tags": ["trading", "private"]}}, "/private/get_user_trades_by_currency_and_time": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Retrieve the latest user trades that have occurred for instruments in a specific currency symbol and within a given time range.", "tags": ["trading", "private"]}}, "/private/get_user_trades_by_order": {"get": {"parameters": [], "description": "Retrieve the list of user trades that was created for given order", "tags": ["trading", "private"], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}}}, "/private/cancel_all": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "This method cancels all users orders and trigger orders within all currencies and instrument kinds.", "tags": ["trading", "private", "matching_engine"]}}, "/private/cancel_all_by_instrument": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Cancels all orders by instrument, optionally filtered by order type.", "tags": ["trading", "private", "matching_engine"]}}, "/private/cancel_all_by_currency": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Cancels all orders by currency, optionally filtered by instrument kind and/or order type.", "tags": ["trading", "private", "matching_engine"]}}, "/private/cancel_all_by_currency_pair": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Cancels all orders by currency pair, optionally filtered by instrument kind and/or order type.", "tags": ["trading", "private", "matching_engine"]}}, "/private/cancel_all_by_kind_or_type": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Cancels all orders in currency(currencies), optionally filtered by instrument kind and/or order type.", "tags": ["trading", "private", "matching_engine"]}}, "/private/cancel_by_label": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Cancels orders by label. All user's orders (trigger orders too), with a given label are cancelled in all currencies or in one given currency (in this case currency queue is used). **Rate Limits:** When called without the `currency` parameter, this method is subject to `cancel_all` rate limits. Different rate limit values may apply for per-currency cancels versus calls without providing the currency parameter.", "tags": ["trading", "private", "matching_engine"]}}, "/private/cancel_quotes": {"get": {"parameters": [{"name": "cancel_type", "description": "Type of cancel criteria.", "in": "query", "schema": {"enum": ["delta", "quote_set_id", "instrument", "instrument_kind", "currency", "currency_pair", "all"], "type": "string"}, "required": true}, {"name": "min_delta", "description": "Min delta to cancel by delta (for `cancel_type`: `delta`).", "in": "query", "schema": {"type": "number"}, "required": false}, {"name": "max_delta", "description": "Max delta to cancel by delta (for `cancel_type`: `delta`).", "in": "query", "schema": {"type": "number"}, "required": false}, {"name": "quote_set_id", "description": "Unique identifier for the Quote set.", "in": "query", "schema": {"type": "string"}, "required": false}, {"name": "instrument_name", "description": "Instrument name.", "in": "query", "schema": {"type": "string"}, "required": false}], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Cancels quotes based on the provided type. `delta` cancels quotes within a Delta range defined by `min_delta` and `max_delta`. `quote_set_id` cancels quotes by a specific Quote Set identifier. `instrument` cancels all quotes associated with a particular instrument. `kind` cancels all quotes for a certain instrument kind. `currency` cancels all quotes in a specified currency. `currency_pair` cancels all quotes in a specified currency pair. `all` cancels all quotes.", "tags": ["trading", "private", "matching_engine"]}}, "/private/cancel": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Cancel an order, specified by order id", "tags": ["trading", "private", "matching_engine"]}}, "/private/buy": {"x-order": 100, "get": {"description": "Places a buy order for an instrument. **📖 Related Support Article:** [Order Management Best Practices](https://support.deribit.com/hc/en-us/articles/29514039279773-Order-Management-Best-Practices)", "tags": ["private", "trading", "matching_engine"], "parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}}}, "/private/sell": {"x-order": 200, "get": {"description": "Places a sell order for an instrument. **📖 Related Support Article:** [Order Management Best Practices](https://support.deribit.com/hc/en-us/articles/29514039279773-Order-Management-Best-Practices)", "tags": ["private", "trading", "matching_engine"], "parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}}}, "/private/edit": {"x-order": 300, "get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Change price, amount and/or other properties of an order. **📖 Related Support Article:** [Order Management Best Practices](https://support.deribit.com/hc/en-us/articles/29514039279773-Order-Management-Best-Practices)", "tags": ["trading", "private", "matching_engine"]}}, "/private/edit_by_label": {"x-order": 300, "get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Change price, amount and/or other properties of an order with a given label. It works only when there is one open order with this label", "tags": ["trading", "private", "matching_engine"]}}, "/private/close_position": {"get": {"description": "Makes closing position reduce only order .", "tags": ["private", "trading", "matching_engine"], "parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}}}, "/private/create_combo": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Verifies and creates a combo book or returns an existing combo matching given trades", "tags": ["combo_books", "private", "matching_engine"]}}, "/private/get_leg_prices": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "This method returns individual leg prices for a given combo structure based on an aggregated price of the strategy and the mark prices of the individual legs. Please note that leg prices change dynamically with mark price fluctuations, and the algorithm is calibrated only for conventional option structures and future spreads. This method supports both inverse strategies and known linear structures within a single currency pair.", "tags": ["private", "combo_books"]}}, "/public/get_currencies": {"get": {"description": "Retrieves all cryptocurrencies supported by the API.", "tags": ["public", "market_data"], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}}}, "/private/get_deposits": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Retrieve the latest users deposits **📖 Related Support Article:** Deposits", "tags": ["wallet", "private"]}}, "/private/create_deposit_address": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Creates deposit address in currency", "tags": ["wallet", "private"]}}, "/private/get_current_deposit_address": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Retrieve deposit address for currency", "tags": ["wallet", "private"]}}, "/private/withdraw": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Creates a new withdrawal request **📖 Related Support Article:** Withdrawals", "tags": ["wallet", "private"]}}, "/private/cancel_withdrawal": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Cancels withdrawal request", "tags": ["wallet", "private"]}}, "/private/get_withdrawals": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Retrieve the latest users withdrawals", "tags": ["wallet", "private"]}}, "/private/get_address_book": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Retrieves address book of given type", "tags": ["wallet", "private"]}}, "/private/add_to_address_book": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Adds new entry to address book of given type", "tags": ["wallet", "private"]}}, "/private/remove_from_address_book": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Removes address book entry", "tags": ["wallet", "private"]}}, "/private/update_in_address_book": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Allows to provide beneficiary information for the address", "tags": ["wallet", "private"]}}, "/private/save_address_beneficiary": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Saves address beneficiary information", "tags": ["wallet", "private"]}}, "/private/get_address_beneficiary": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Retrieves address beneficiary information", "tags": ["wallet", "private"]}}, "/private/delete_address_beneficiary": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Deletes address beneficiary information", "tags": ["wallet", "private"]}}, "/private/list_address_beneficiaries": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Lists address beneficiaries with optional filtering and pagination", "tags": ["wallet", "private"]}}, "/private/submit_transfer_to_subaccount": {"get": {"description": "Transfer funds to subaccount.", "tags": ["private", "wallet"], "parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}}}, "/private/submit_transfer_between_subaccounts": {"get": {"description": "Transfer funds between two (sub)accounts.", "tags": ["private", "wallet"], "parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}}}, "/private/submit_transfer_to_user": {"get": {"description": "Transfer funds to another user.", "tags": ["private", "wallet"], "parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}}}, "/private/get_transfers": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Retrieve the user's transfers list", "tags": ["wallet", "private"]}}, "/private/cancel_transfer_by_id": {"get": {"description": "Cancel transfer", "tags": ["private", "wallet"], "parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}}}, "/private/get_reward_eligibility": {"get": {"description": "Returns reward eligibility status and APR data for all supported currencies. **📖 Related Support Article:** [Yield reward-bearing coins](https://support.deribit.com/hc/en-us/articles/26525792475677-Yield-reward-bearing-coins)", "tags": ["private", "wallet"], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}}}, "/private/address_ownership": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Get the ownership information about a customer blockchain address via Notabene.", "tags": ["private", "internal"]}}, "/private/vasps": {"get": {"responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Returns a list of VASPs. Each VASP in our directory has a Decentralized Identifier (DID), which is used to identify them within the Notabene ecosystem. These DIDs are used when sending a travel rule transaction so that it arrives at the correct destination.", "tags": ["private", "internal"]}}, "/private/set_clearance_originator": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/deposit"}}, "description": "Sets originator of the deposit", "tags": ["wallet", "private"]}}, "/private/get_margins": {"get": {"parameters": [{"description": "Price", "in": "query", "name": "price", "required": true, "schema": {"type": "number"}}], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Get margins for a given instrument, amount and price.", "tags": ["trading", "private"]}}, "/private/get_positions": {"get": {"description": "Retrieve user positions. To retrieve subaccount positions, use `subaccount_id` parameter.", "tags": ["private", "account_management"], "parameters": [{"name": "currency", "in": "query", "schema": {}, "required": false}, {"name": "kind", "description": "Kind filter on positions", "in": "query", "schema": {}}, {"name": "subaccount_id", "description": "The user id for the subaccount", "in": "query", "schema": {"type": "integer"}, "required": false}], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}, "400": {"$ref": "#/components/responses/ErrorResponse"}}}}, "/private/get_position": {"get": {"description": "Retrieve user position.", "tags": ["private", "account_management"], "parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}, "400": {"$ref": "#/components/responses/ErrorResponse"}}}}, "/private/get_account_summary": {"get": {"parameters": [{"name": "subaccount_id", "description": "The user id for the subaccount", "in": "query", "schema": {"type": "integer"}, "required": false}, {"description": "Include additional fields", "in": "query", "name": "extended", "required": false, "schema": {"example": false, "type": "boolean"}}], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Retrieves user account summary. To read subaccount summary use `subaccount_id` parameter.", "tags": ["account_management", "private"]}}, "/private/get_account_summaries": {"get": {"parameters": [{"name": "subaccount_id", "description": "The user id for the subaccount", "in": "query", "schema": {"type": "integer"}, "required": false}, {"description": "Include additional fields", "in": "query", "name": "extended", "required": false, "schema": {"example": false, "type": "boolean"}}], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Retrieves a per-currency list of user account summaries. To read subaccount summary use `subaccount_id` parameter.", "tags": ["account_management", "private"]}}, "/private/get_pme_params": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Retrieves restrictions for open orders for PM users.", "tags": ["account_management", "private", "internal"]}}, "/private/pme/simulate": {"get": {"parameters": [{"name": "currency", "description": "The currency for which the Extended Risk Matrix will be calculated. Use `CROSS` for Cross Collateral simulation.", "required": true, "in": "query", "schema": {}}], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Calculates the Extended Risk Matrix and margin information for the selected currency or against the entire Cross-Collateral portfolio.", "tags": ["account_management", "private"]}}, "/private/simulate_portfolio": {"get": {"parameters": [{"name": "currency", "description": "The currency symbol", "required": true, "in": "query", "schema": {}}], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Calculates portfolio margin info for simulated position or current position of the user. This request has a special restricted rate limit (not more than once per a second).", "tags": ["account_management", "private"]}}, "/private/get_stats": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Retrieves user volume and commissions statistics.", "tags": ["account_management", "private", "internal"]}}, "/private/get_access_log": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Lists access logs for the user", "tags": ["private", "account_management"]}}, "/private/get_affiliate_program_info": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Retrieves user`s affiliates count, payouts and link.", "tags": ["account_management", "private"]}}, "/private/enable_affiliate_program": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/OkResponse"}}, "description": "Enables affiliate program for user **📖 Related Support Article:** [Affiliate Program](https://support.deribit.com/hc/en-us/articles/25944777728797-Affiliate-Program)", "tags": ["account_management", "private"]}}, "/private/get_mmp_config": {"get": {"description": "Get MMP configuration for an index, if the parameter is not provided, a list of all MMP configurations is returned. Empty list means no MMP configuration.", "tags": ["private", "trading", "matching_engine"], "parameters": [{"name": "mmp_group", "description": "Specifies the MMP group for which the configuration is being retrieved. MMP groups are used for Mass Quotes. If MMP group is not provided, the method returns the configuration for the MMP settings for regular orders. The `index_name` must be specified before using this parameter. **📖 Related Support Article:** Mass Quotes Specifications", "required": false, "in": "query", "schema": {"type": "string"}}, {"name": "block_rfq", "description": "If true, retrieves MMP configuration for Block RFQ. When set, requires `block_rfq` scope instead of `trade` scope. Block RFQ MMP settings are completely separate from normal order/quote MMP settings.", "required": false, "in": "query", "schema": {"type": "boolean", "default": false}}], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}}}, "/private/get_mmp_status": {"get": {"description": "Get MMP status for triggered index (or group). If the parameter is not provided, a list of all triggered MMP statuses is returned.", "tags": ["private", "trading", "matching_engine"], "parameters": [{"name": "mmp_group", "description": "Specifies the MMP group for which the status is being retrieved. The `index_name` must be specified before using this parameter. **📖 Related Support Article:** Mass Quotes Specifications", "required": false, "in": "query", "schema": {"type": "string"}}, {"name": "block_rfq", "description": "If true, retrieves MMP status for Block RFQ. When set, requires `block_rfq` scope instead of `trade` scope. Block RFQ MMP status is completely separate from normal order/quote MMP status.", "required": false, "in": "query", "schema": {"type": "boolean", "default": false}}], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}}}, "/private/set_mmp_config": {"get": {"description": "Set config for MMP - triggers MMP reset **📖 Related Support Article:** Market Maker Protection API Configuration", "tags": ["private", "trading", "matching_engine"], "parameters": [{"name": "interval", "description": "MMP Interval in seconds, if set to 0 MMP is removed", "required": true, "in": "query", "schema": {"type": "integer"}}, {"name": "frozen_time", "description": "MMP frozen time in seconds, if set to 0 manual reset is required", "required": true, "in": "query", "schema": {"type": "integer"}}, {"name": "mmp_group", "description": "Designates the MMP group for which the configuration is being set. If the specified group is already associated with a different `index_name`, an error is returned. This parameter enables distinct configurations for each MMP group, linked to particular `index_name`. Maximum 64 characters. Case sensitive. Cannot be empty string. **📖 Related Support Article:** Mass Quotes Specifications", "required": false, "in": "query", "schema": {"type": "string"}}, {"name": "quantity_limit", "description": "Quantity limit, positive value", "required": false, "in": "query", "schema": {"type": "number"}}, {"name": "delta_limit", "description": "Delta limit, positive value", "required": false, "in": "query", "schema": {"type": "number"}}, {"name": "vega_limit", "description": "Vega limit, positive value", "required": false, "in": "query", "schema": {"type": "number"}}, {"name": "block_rfq", "description": "If true, configures MMP for Block RFQ. When set, requires block_rfq scope instead of trade scope. Block RFQ MMP settings are completely separate from normal order/quote MMP settings.", "required": false, "in": "query", "schema": {"type": "boolean", "default": false}}, {"name": "trade_count_limit", "description": "For Block RFQ only (`block_rfq` = `true`). Sets the maximum number of Block RFQ trades allowed in the lookback window. Each RFQ trade counts as `+1` towards the limit (not individual legs). Works across all currency pairs. When using this parameter, `index_name` must be set to `\"all\"`. Maximum - `1000`.", "required": false, "in": "query", "schema": {"type": "integer", "maximum": 1000, "minimum": 1}}], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}}}, "/private/reset_mmp": {"get": {"description": "Reset Market Maker Protection (MMP) limits for the specified currency pair or group. **📖 Related Support Article:** Market Maker Protection API Configuration", "tags": ["private", "trading", "matching_engine"], "parameters": [{"name": "index_name", "description": "Currency pair for which to reset MMP limits. **For regular MMP (`block_rfq = false`):** Must be a specific currency pair (e.g., \"btc_usd\", \"eth_usd\"). The value `\"all\"` is not allowed. **For Block RFQ MMP (`block_rfq = true`):** Can be either a specific currency pair or `\"all\"` to reset MMP limits across all currency pairs.", "required": true, "in": "query", "schema": {"type": "string", "example": "btc_usd"}}, {"name": "mmp_group", "description": "Specifies the MMP group for which limits are being reset. If this parameter is omitted, the method resets the traditional (no group) MMP limits. **📖 Related Support Article:** Mass Quotes Specifications", "required": false, "in": "query", "schema": {"type": "string"}}, {"name": "block_rfq", "description": "If true, resets MMP for Block RFQ. When set, requires `block_rfq` scope instead of `trade` scope. Block RFQ MMP settings are completely separate from normal order/quote MMP settings. When `block_rfq = true`, the `index_name` parameter can be set to `\"all\"` to reset limits across all currency pairs.", "required": false, "in": "query", "schema": {"type": "boolean", "default": false}}], "responses": {"200": {"$ref": "#/components/responses/OkResponse"}}}}, "/private/mass_quote": {"get": {"parameters": [{"name": "wait_for_response", "description": "If false, the response is sent immediately after the risk check. If true, the response is sent after the orders all go through the matching engine. Default - `true`.", "in": "query", "schema": {"type": "boolean"}, "required": false}, {"name": "detailed", "description": "Flag to receive a list of all order changes and a list of errors, or to only receive a list of errors. Default - `false`.", "in": "query", "schema": {"type": "boolean"}, "required": false}, {"name": "quote_id", "description": "Identifier of a mass quote message. Can be used to match trades to requests. We recommend using an incrementing counter.", "in": "query", "schema": {"type": "string"}, "required": true}, {"name": "mmp_group", "description": "Name of the MMP group. An MMP group has to be used and only one quote can exist per instrument per side per MMP group.", "in": "query", "schema": {"type": "string"}, "required": true}, {"name": "quotes", "in": "query", "description": "List of quotes.", "required": true, "schema": {"type": "array", "items": {"type": "object", "properties": {"instrument_name": {"description": "The name of the instrument."}, "quote_set_id": {"description": "User-defined label that can be used for targeted cancels using private/cancel_quotes."}, "ask": {"description": "Order details for the ask. If not provided, `bid` must be present."}, "bid": {"description": "Order details for the bid. If not provided, `ask` must be present."}}}}}], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Place buy and/or sell orders on one or more instruments. Cancel-on-Disconnect must be enabled (see private/enable_cancel_on_disconnect), otherwise the request will return an error. This endpoint can only be used after approval from the administrators. **📖 Related Support Article:** Mass Quotes Specifications", "tags": ["trading", "private", "matching_engine"]}}, "/private/change_margin_model": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Change margin model", "tags": ["private", "account_management"]}}, "/private/get_user_locks": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Retrieves information about locks on user account", "tags": ["account_management", "private"]}}, "/private/set_self_trading_config": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/OkResponse"}}, "description": "Configure self trading behavior **📖 Related Support Article:** Account settings page", "tags": ["private", "account_management"]}}, "/private/set_disabled_trading_products": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/OkResponse"}}, "description": "Configure disabled trading products for subaccounts. Only main accounts can modify this for subaccounts. <br>**[TFA required](#security-keys)**", "tags": ["private", "account_management"]}}, "/private/disable_api_key": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Disables api key with given id. [Important notes](#creating-editing-removing-api-keys).", "tags": ["private", "account_management"]}}, "/private/enable_api_key": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Enables api key with given id. [Important notes](#creating-editing-removing-api-keys).", "tags": ["private", "account_management"]}}, "/private/create_api_key": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Creates a new api key with a given scope. Important notes **TFA required** **Note:** You can display the created API key using the private/list_api_keys method. **📖 Related Support Article:** Creating new API key on Deribit", "tags": ["private", "account_management"]}}, "/private/change_scope_in_api_key": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Changes scope for key with given id. [Important notes](#creating-editing-removing-api-keys). <br>**[TFA required](#security-keys)**", "tags": ["private", "account_management"]}}, "/private/change_api_key_name": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Changes name for key with given id. [Important notes](#creating-editing-removing-api-keys).", "tags": ["private", "account_management"]}}, "/private/list_api_keys": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Retrieves list of api keys. [Important notes](#creating-editing-removing-api-keys). <br> **[TFA required](#security-keys)**", "tags": ["account_management", "private"]}}, "/private/reset_api_key": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Resets secret in api key. [Important notes](#creating-editing-removing-api-keys).", "tags": ["private", "account_management"]}}, "/private/remove_api_key": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/OkResponse"}}, "description": "Removes api key. [Important notes](#creating-editing-removing-api-keys).", "tags": ["private", "account_management"]}}, "/private/edit_api_key": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Edits existing API key. At least one parameter is required. [Important notes](#creating-editing-removing-api-keys) <br>**[TFA required](#security-keys)**", "tags": ["private", "account_management"]}}, "/private/simulate_block_trade": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Checks if a block trade can be executed", "tags": ["private", "block_trade", "matching_engine"]}}, "/private/verify_block_trade": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Verifies and creates block trade signature<br><br><strong>Note:</strong> In the API, the `direction` field is always expressed from the maker's perspective. This means that when you accept a block trade as a taker, the direction shown in the API represents the opposite side of your trade. For example, if you are buying puts as a taker, the API will show the operation as a \"sell put\" (maker's perspective), and you will be verifying and accepting a \"sell put\" block trade.<br><br>**📖 Related Support Article:** [Block Trading](https://support.deribit.com/hc/en-us/articles/25944688627229-Block-Trading)", "tags": ["private", "block_trade", "matching_engine"]}}, "/private/execute_block_trade": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Creates block trade<br><br>The whole request have to be exact the same as in `private/verify_block_trade`, only `role` field should be set appropriately - it basically means that both sides have to agree on the same `timestamp`, `nonce`, `trades` fields and server will assure that `role` field is different between sides (each party accepted own role).<br><br>Using the same `timestamp` and `nonce` by both sides in `private/verify_block_trade` assures that even if unintentionally both sides execute given block trade with valid `counterparty_signature`, the given block trade will be executed only once.<br><br><strong>Note:</strong> In the API, the `direction` field is always expressed from the maker's perspective. This means that when you accept a block trade as a taker, the direction shown in the API represents the opposite side of your trade. For example, if you are buying puts as a taker, the API will show the operation as a \"sell put\" (maker's perspective), and you will be verifying and accepting a \"sell put\" block trade.<br><br>**📖 Related Support Article:** [Block Trading](https://support.deribit.com/hc/en-us/articles/25944688627229-Block-Trading)", "tags": ["private", "block_trade", "matching_engine"]}}, "/private/invalidate_block_trade_signature": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/OkResponse"}}, "description": "User at any time (before the private/execute_block_trade is called) can invalidate its own signature effectively cancelling block trade", "tags": ["private", "block_trade"]}}, "/private/get_block_trade": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Returns information about the users block trade", "tags": ["private", "block_trade"]}}, "/private/get_block_trades": {"get": {"parameters": [{"name": "broker_code", "in": "query", "description": "Broker code to filter block trades. Only broker clients can use `broker_code` to filter broker block trades. Use `any` for all block trades.", "required": false, "schema": {"type": "string", "example": "2krM7sJsx"}}], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Returns list of users block trades. If currency is not provided, returns block trades for all currencies. `block_rfq_id` can be provided to receive block trades related to that particular Block RFQ.", "tags": ["private", "block_trade"]}}, "/private/move_positions": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Moves positions from source subaccount to target subaccount <p><b>Note:</b><br>In rare cases, the request may return an `internal_server_error`. This does not necessarily mean the operation failed entirely. Part or all of the position transfer might have still been processed successfully.</p>", "tags": ["private", "trading", "matching_engine"]}}, "/private/get_pending_block_trades": {"get": {"responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "**DEPRECATED**: This method is deprecated. Please use `private/get_block_trade_requests` instead.<br><br>Provides a list of pending block trade approvals. `timestamp` and `nonce` received in response can be used to approve or reject the pending block trade.<br><br> To use a block trade approval feature the additional API key setting feature called: `enabled_features: block_trade_approval` is required. This key has to be given to broker/registered partner who performs the trades on behalf of the user for the feature to be active. If the user wants to approve the trade, he has to approve it from different API key with doesn't have this feature enabled.", "tags": ["private", "block_trade"]}}, "/private/get_block_trade_requests": {"get": {"parameters": [{"name": "broker_code", "in": "query", "description": "Broker code to filter block trade requests. Only broker clients can use `broker_code` to query for their executed broker block trades.", "required": false, "schema": {"type": "string", "example": "jpqYKgg1"}}], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Provides a list of block trade requests including pending approvals, declined trades, and expired trades. `timestamp` and `nonce` received in response can be used to approve or reject the pending block trade.<br><br> To use a block trade approval feature the additional API key setting feature called: `enabled_features: block_trade_approval` is required. This key has to be given to broker/registered partner who performs the trades on behalf of the user for the feature to be active. If the user wants to approve the trade, he has to approve it from different API key with doesn't have this feature enabled.<br><br> Only broker clients can use `broker_code` to query for their broker block trade requests.", "tags": ["private", "block_trade"]}}, "/private/approve_block_trade": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/OkResponse"}}, "description": "Used to approve a pending block trade. `nonce` and `timestamp` are used to identify the block trade while `role` should be opposite to the trading counterparty.<br><br> To use a block trade approval feature the additional API key setting feature called: `enabled_features: block_trade_approval` is required. This key has to be given to broker/registered partner who performs the trades on behalf of the user for the feature to be active. If the user wants to approve the trade, he has to approve it from different API key with doesn't have this feature enabled.", "tags": ["private", "block_trade"]}}, "/private/reject_block_trade": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/OkResponse"}}, "description": "Used to reject a pending block trade. `nonce` and `timestamp` are used to identify the block trade while `role` should be opposite to the trading counterparty.<br><br> To use a block trade approval feature the additional API key setting feature called: `enabled_features: block_trade_approval` is required. This key has to be given to broker/registered partner who performs the trades on behalf of the user for the feature to be active. If the user wants to approve the trade, he has to approve it from different API key with doesn't have this feature enabled.", "tags": ["private", "block_trade"]}}, "/private/get_broker_trades": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "**Broker Method** Returns list of broker block trades. If currency is not provided, returns broker block trades for all currencies.", "tags": ["private", "block_trade"]}}, "/private/get_block_rfqs": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "This method returns a list of Block RFQs that were either created by the user or assigned to them as a maker, sorted in descending order. `trades` and `mark_price` are only visible for the filled Block RFQ. When a `block_rfq_id` is specified, only that particular Block RFQ will be returned. If called by a `taker`, response will additionally include `makers` list and `label` if previously provided. If called by the `maker`, the `trades` will include the maker's alias, but only for trades in which this maker participated. Can be optionally filtered by currency.", "tags": ["private", "block_rfq"]}}, "/private/create_block_rfq": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "**Taker method** This method creates a new Block RFQ. Block RFQ pre-allocation: The taker can split the total amount between different (sub)accounts using the `trade_allocations` parameter. The taker can also allocate to himself. Each allocation must specify either `user_id` (for direct allocation) or `client_info` object (for broker allocation), and `amount`. **📖 Related Support Article:** Deribit Block RFQ API walkthrough", "tags": ["private", "block_rfq"]}}, "/private/cancel_block_rfq": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "<b>Taker method</b> <p>This method cancels a Block RFQ using the specified `block_rfq_id`.</p>", "tags": ["private", "block_rfq"]}}, "/private/accept_block_rfq": {"get": {"parameters": [{"name": "time_in_force", "in": "query", "required": true, "schema": {"type": "string", "enum": ["fill_or_kill", "good_til_cancelled"]}, "description": "Specifies how long the order should remain active"}], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "<b>Taker method</b> <p>This method allows Block RFQ taker to accept the response by sending a single crossing price. The order can be either filled immediately (`fill_or_kill`) or remain active until cancelled (`good_til_cancelled`). Please note that after Block RFQ creation, a grace period of 5 seconds begins, during which the taker cannot see quotes or trade the Block RFQ.</p>", "tags": ["private", "block_rfq"]}}, "/private/cancel_block_rfq_trigger": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "<b>Taker method</b> <p>This method allows Block RFQ taker to cancel an active trigger for a Block RFQ. The response includes the full Block RFQ object with the trade trigger state set to cancelled.</p>", "tags": ["private", "block_rfq"]}}, "/private/get_block_rfq_quotes": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "<b>Maker method</b> <p>This method retrieves all open quotes for Block RFQs. When a `block_rfq_id` is specified, only the open quotes for that particular Block RFQ will be returned. When a `label` is specified, all quotes with this label are returned. `block_rfq_quote_id` returns one specific quote.</p>", "tags": ["private", "block_rfq"]}}, "/private/add_block_rfq_quote": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "<b>Maker method</b> <p>This method adds quote to the existing Block RFQ. To calculate individual leg prices, the `private/get_leg_prices` endpoint can be utilized.</p>", "tags": ["private", "block_rfq"]}}, "/private/edit_block_rfq_quote": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "<b>Maker method</b> <p>This method edits a Block RFQ quote using the specified `block_rfq_quote_id`. Alternatively, user can use a combination of `block_rfq_id` and `label` to edit the quote.</p>", "tags": ["private", "block_rfq"]}}, "/private/cancel_block_rfq_quote": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "<b>Maker method</b> <p>This method cancels a single Block RFQ quote. You can identify the quote to cancel using either:</p> <ul> <li><code>block_rfq_quote_id</code> - the unique ID of the quote</li> <li><code>block_rfq_id</code> + <code>label</code> - the Block RFQ ID and the quote label</li> </ul> <p><b>Note:</b> Mass cancellation by label is not supported. This method cancels only one quote at a time.</p>", "tags": ["private", "block_rfq"]}}, "/private/cancel_all_block_rfq_quotes": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "<b>Maker method</b> <p>This method cancels all user quotes in all Block RFQs. Optionally cancels all quotes in a specific RFQ if the `block_rfq_id` is provided.</p> <p><b>Note:</b> Mass cancellation by label is not supported. This method will cancel all quotes regardless of their labels.</p>", "tags": ["private", "block_rfq"]}}, "/private/get_block_rfq_makers": {"get": {"responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "This method returns a list of all available Block RFQ makers.", "tags": ["private", "block_rfq"]}}, "/public/get_block_rfq_trades": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "This method returns a list of recent Block RFQs trades. Can be optionally filtered by currency.", "tags": ["public", "block_rfq"]}}, "/private/get_block_rfq_user_info": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Returns identity and rating information for the requesting account and its subaccounts. Includes both group-level and individual user-level alias data, if available.", "tags": ["private", "block_rfq"]}}, "/private/get_security_key_activation_data": {"get": {"parameters": [{"name": "type", "description": "Type of new security key", "required": true, "in": "query", "schema": {"type": "string", "enum": ["u2f", "tfa"]}}, {"name": "generate_new_secret", "description": "When `true` new secret for TFA or new U2F activation data is generated, when `false` only new `activation_challenge` is returned. Default: `true`", "required": false, "in": "query", "schema": {"type": "boolean"}}], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Returns data that is needed to activate security key, required `read_write' 'account' scope", "tags": ["internal", "private"]}}, "/private/activate_security_key": {"get": {"parameters": [{"name": "activation_challenge", "description": "Activation challenge as received from `private/get_security_activation_data`", "required": true, "in": "query", "schema": {"type": "string"}}, {"name": "forLogin", "description": "`true` if new security key should be assigned to signing in", "required": true, "in": "query", "schema": {"type": "boolean"}}, {"name": "forWallet", "description": "`true` if new security key should be assigned to wallet management in", "required": true, "in": "query", "schema": {"type": "boolean"}}, {"name": "forAccount", "description": "`true` if new security key should be assigned to account management in", "required": true, "in": "query", "schema": {"type": "boolean"}}, {"name": "forAdmin", "description": "`true` if new security key should be assigned to admin management in, it should be included only for users with backend access", "required": false, "in": "query", "schema": {"type": "boolean"}}, {"name": "tfa_confirmation", "description": "TFA code for given secret, required only for type `tfa`", "in": "query", "schema": {"type": "string"}, "required": false}, {"name": "attestationObject", "description": "attestation data received after webauthn registration, required only for type `u2f`", "in": "query", "schema": {"type": "string"}, "required": false}, {"name": "clientDataJSON", "description": "client data received after webauthn registration, required only for type `u2f`", "in": "query", "schema": {"type": "string"}, "required": false}, {"name": "credentialId", "description": "credential id data received after webauthn registration, required only for type `u2f`", "in": "query", "schema": {"type": "string"}, "required": false}], "responses": {"200": {"$ref": "#/components/responses/OkResponse"}}, "description": "Activates Security Key for current account, required `read_write' 'account' scope", "tags": ["internal", "private"]}}, "/private/deactivate_security_key": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/OkResponse"}}, "description": "Removes Security Key; Key can be removed when it is last key or when there are more keys than one and given one has not got account assignment; required `read_write' 'account' scope", "tags": ["internal", "private"]}}, "/private/list_security_keys": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Retrieves list of Security Keys", "tags": ["private", "internal"]}}, "/private/get_security_keys_status": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Returns informations about Security Keys configuration", "tags": ["internal", "private"]}}, "/private/change_security_key_assignment": {"get": {"parameters": [{"name": "assignments", "description": "Security Key assignments, list of `login`, `account`, `wallet`, `admin`", "required": true, "in": "query", "schema": {"type": "array", "items": {"type": "string", "enum": ["login", "account", "wallet", "admin"]}}}, {"name": "action", "description": "Action, what server should do with given assignments: `set` - they will be added to Security Key, or `unset` - they will be removed from Security Key", "required": true, "in": "query", "schema": {"type": "string", "enum": ["set", "unset"]}}], "responses": {"200": {"$ref": "#/components/responses/OkResponse"}}, "description": "Changes assignments of given security key", "tags": ["internal", "private"]}}, "/public/confirm_security_keys_reset": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/OkResponse"}}, "description": "Used to get confirm Security Key reset request", "tags": ["internal", "private"]}}, "/public/cancel_security_keys_reset": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/OkResponse"}}, "description": "Used to cancel Security Key reset request", "tags": ["internal", "private"]}}, "/public/get_security_keys_reset_data": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Used to get information about Security Key reset request that is about to be confirmed", "tags": ["internal", "private"]}}, "/private/disable_security_keys_for_subaccount": {"get": {"description": "Disable Security Keys for a subaccount.", "tags": ["private", "account_management", "internal"], "parameters": [{"name": "sid", "description": "The user id for the subaccount", "in": "query", "schema": {"type": "integer"}, "required": true}], "responses": {"200": {"$ref": "#/components/responses/OkResponse"}}}}, "/private/get_jwt": {"get": {"description": "Generate a JSON web token.", "tags": ["private"], "parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}, "400": {"$ref": "#/components/responses/ErrorResponse"}}}}, "/public/auth": {"get": {"description": "Retrieve an Oauth access token, to be used for authentication of 'private' requests. Three methods of authentication are supported: - `client_credentials` - using the client id and client secret that can be found on the API page on the website - `client_signature` - using the client id that can be found on the API page on the website and user generated signature. The signature is calculated using some fields provided in the request, using formula described here Deribit signature credentials - `refresh_token` - using a refresh token that was received from an earlier invocation The response will contain an access token, expiration period (number of seconds that the token is valid) and a refresh token that can be used to get a new set of tokens. **📖 Related Support Article:** API Authentication Guide", "tags": ["public", "authentication"], "parameters": [{"name": "grant_type", "description": "Method of authentication", "in": "query", "schema": {"type": "string", "enum": ["client_credentials", "client_signature", "refresh_token"]}, "required": true}, {"name": "client_id", "description": "Required for grant type `client_credentials` and `client_signature`", "in": "query", "schema": {"type": "string"}, "required": true}, {"name": "client_secret", "description": "Required for grant type `client_credentials`", "in": "query", "schema": {"type": "string"}, "required": true}, {"name": "refresh_token", "description": "Required for grant type `refresh_token`", "in": "query", "schema": {"type": "string"}, "required": true}, {"name": "timestamp", "description": "Required for grant type `client_signature`, provides time when request has been generated (milliseconds since the UNIX epoch)", "in": "query", "schema": {"type": "integer"}, "required": true}, {"name": "signature", "description": "Required for grant type `client_signature`; it's a cryptographic signature calculated over provided fields using user **secret key**. The signature should be calculated as an HMAC (Hash-based Message Authentication Code) with `SHA256` hash algorithm", "in": "query", "schema": {"type": "string"}, "required": true}, {"name": "nonce", "description": "Optional for grant type `client_signature`; delivers user generated initialization vector for the server token", "in": "query", "schema": {"type": "string"}}, {"name": "data", "description": "Optional for grant type `client_signature`; contains any user specific value", "in": "query", "schema": {"type": "string"}}, {"name": "state", "description": "Will be passed back in the response", "in": "query", "schema": {"type": "string"}}, {"name": "scope", "description": "Describes type of the access for assigned token, possible values: `connection`, `session:name`, `trade:[read, read_write, none]`, `wallet:[read, read_write, none]`, `account:[read, read_write, none]`, `expires:NUMBER`, `ip:ADDR`. Details are elucidated in Access scope", "in": "query", "schema": {"type": "string", "example": "connection"}}], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}, "429": {"$ref": "#/components/responses/ErrorResponse"}}}}, "/public/exchange_token": {"get": {"description": "Generates a token for a new subject id. This method can be used to switch between subaccounts.", "tags": ["public", "authentication"], "parameters": [{"name": "refresh_token", "description": "Refresh token", "in": "query", "schema": {"type": "string"}, "required": true}, {"name": "subject_id", "description": "New subject id", "in": "query", "schema": {"type": "integer"}, "required": true}, {"name": "scope", "description": "Optional scope override for the new session. Cannot exceed caller's permissions. Supports `session` scope for direct session creation during token exchange.", "in": "query", "schema": {"type": "string"}, "required": false}], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}}}, "/public/fork_token": {"get": {"description": "Generates a token for a new named session. This method can be used only with session scoped tokens.", "tags": ["public", "authentication"], "parameters": [{"name": "refresh_token", "description": "Refresh token", "in": "query", "schema": {"type": "string"}, "required": true}, {"name": "session_name", "description": "New session name", "in": "query", "schema": {"type": "string"}, "required": true}], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}}}, "/public/get_funding_chart_data": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Retrieve the list of the latest PERPETUAL funding chart points within a given time period.", "tags": ["public", "market_data"]}}, "/public/get_tradingview_chart_data": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Publicly available market data used to generate a TradingView candle chart.", "tags": ["public", "market_data"]}}, "/public/get_volatility_index_data": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Public market data request for volatility index candles.", "tags": ["public", "market_data"]}}, "/public/set_heartbeat": {"x-order": 100, "get": {"parameters": [{"description": "The heartbeat interval in seconds, but not less than 10", "in": "query", "name": "interval", "required": true, "schema": {"example": 60, "type": "number"}}], "responses": {"200": {"$ref": "#/components/responses/OkResponse"}}, "description": "Signals the Websocket connection to send and request heartbeats. Heartbeats can be used to detect stale connections. When heartbeats have been set up, the API server will send `heartbeat` messages and `test_request` messages. Your software should respond to `test_request` messages by sending a `/api/v2/public/test` request. If your software fails to do so, the API server will immediately close the connection. If your account is configured to cancel on disconnect, any orders opened over the connection will be cancelled.", "tags": ["public", "session_management", "websocket_only"]}}, "/public/disable_heartbeat": {"get": {"description": "Stop sending heartbeat messages.", "tags": ["websocket_only", "session_management", "public"], "responses": {"200": {"$ref": "#/components/responses/OkResponse"}, "400": {"$ref": "#/components/responses/ErrorResponse"}}}}, "/public/subscribe": {"get": {"tags": ["public", "subscription_management", "websocket_only"], "description": "Subscribe to one or more channels. This is the same method as /private/subscribe, but it can only be used for 'public' channels. **📖 Related Support Article:** Market Data Collection Best Practices", "parameters": [{"name": "channels", "description": "A list of channels to subscribe to.", "in": "query", "schema": {"type": "array", "items": {"type": "string", "x-deribit-type": "channel", "example": "deribit_price_index.btc_usd"}}, "required": true}], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}, "401": {"$ref": "#/components/responses/ErrorResponse"}}}}, "/public/unsubscribe": {"get": {"description": "Unsubscribe from one or more channels. The response contains only the channels that were successfully unsubscribed in this request.<br> </br>**Note:** The `result` field in the response contains only the channels that were successfully processed and unsubscribed from this specific request. It does not include all previously subscribed topics. If a channel in the request is invalid, not subscribed, or fails validation, it will not appear in the result.", "tags": ["public", "websocket_only", "subscription_management"], "parameters": [{"name": "channels", "description": "A list of channels to unsubscribe from. Only successfully unsubscribed channels will be returned in the result.", "in": "query", "schema": {"type": "array", "items": {"type": "string", "x-deribit-type": "channel", "example": "deribit_price_index.btc_usd"}}, "required": true}], "responses": {"200": {"$ref": "#/components/responses/get_public_unsubscribe_200"}, "401": {"$ref": "#/components/responses/ErrorResponse"}}}}, "/public/unsubscribe_all": {"get": {"description": "Unsubscribe from all the channels subscribed so far.", "tags": ["websocket_only", "subscription_management", "public"], "responses": {"200": {"$ref": "#/components/responses/OkResponse"}}}}, "/public/get_announcements": {"get": {"parameters": [{"name": "start_timestamp", "description": "The most recent timestamp to return the results for (milliseconds since the UNIX epoch)", "in": "query", "schema": {"default": "Current time"}}, {"name": "count", "description": "Maximum count of returned announcements, default - `5`, maximum - `50`", "in": "query", "schema": {"type": "integer", "default": 5, "example": 10, "maximum": 50, "minimum": 1}}], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Retrieves announcements. Default \"start_timestamp\" parameter value is current timestamp, \"count\" parameter value must be between 1 and 50, default is 5.", "tags": ["account_management", "public"]}}, "/public/ticker": {"get": {"tags": ["public", "market_data"], "description": "Get ticker for an instrument.", "parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}}}, "/public/tickers_by_expiration": {"get": {"tags": ["internal", "public", "market_data"], "description": "Get tickers for instruments that expires at given time.", "parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}}}, "/public/hello": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Method used to introduce the client software connected to Deribit platform over websocket. Provided data may have an impact on the maintained connection and will be collected for internal statistical purposes. In response, Deribit will also introduce itself.", "tags": ["public", "supporting", "websocket_only"]}}, "/public/status": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Method used to get information about locked currencies", "tags": ["public", "supporting"]}}, "/public/test": {"get": {"parameters": [{"description": "The value \"exception\" will trigger an error response. This may be useful for testing wrapper libraries.", "in": "query", "name": "expected_result", "required": false, "schema": {"type": "string", "enum": ["exception"]}}], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Tests the connection to the API server, and returns its version. You can use this to make sure the API is reachable, and matches the expected version.", "tags": ["public", "supporting"]}}, "/public/get_time": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Retrieves the current time (in milliseconds). This API endpoint can be used to check the clock skew between your software and Deribit's systems.", "tags": ["supporting", "public"]}}, "/public/get_delivery_prices": {"get": {"parameters": [], "description": "Retrieves delivery prices for then given index", "tags": ["market_data"], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}}}, "/private/get_new_announcements": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Retrieves announcements that have not been marked read by the user.", "tags": ["account_management", "private"]}}, "/private/set_announcement_as_read": {"get": {"parameters": [{"description": "the ID of the announcement", "in": "query", "name": "announcement_id", "required": true, "schema": {"type": "number"}}], "responses": {"200": {"$ref": "#/components/responses/OkResponse"}}, "description": "Marks an announcement as read, so it will not be shown in `get_new_announcements`.", "tags": ["account_management", "private"]}}, "/private/get_email_language": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Retrieves the language to be used for emails.", "tags": ["account_management", "private"]}}, "/private/create_subaccount": {"get": {"description": "Create a new subaccount **📖 Related Support Article:** Subaccounts", "tags": ["private", "account_management"], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}}}, "/private/change_subaccount_name": {"get": {"description": "Change the user name for a subaccount", "tags": ["private", "account_management"], "parameters": [{"name": "sid", "description": "The user id for the subaccount", "in": "query", "schema": {"type": "integer"}, "required": true}, {"name": "name", "description": "The new user name", "in": "query", "schema": {"type": "string", "example": "newUserName"}, "required": true}], "responses": {"200": {"$ref": "#/components/responses/OkResponse"}}}}, "/private/set_email_language": {"get": {"parameters": [{"description": "The abbreviated language name. Valid values include `\"en\"`, `\"ko\"`, `\"zh\"`, `\"ja\"`, `\"ru\"`", "in": "query", "name": "language", "required": true, "schema": {"type": "string", "example": "en"}}], "responses": {"200": {"$ref": "#/components/responses/OkResponse"}}, "description": "Changes the language to be used for emails.", "tags": ["account_management", "private"]}}, "/private/set_email_for_subaccount": {"get": {"description": "Assign an email address to a subaccount. User will receive an email with a confirmation link. <br>**[TFA required](#security-keys)**", "tags": ["private", "account_management"], "parameters": [{"name": "sid", "description": "The user id for the subaccount", "in": "query", "schema": {"type": "integer"}, "required": true}, {"name": "email", "description": "The email address for the subaccount", "in": "query", "schema": {"type": "string", "example": "subaccount_1@email.com"}, "required": true}], "responses": {"200": {"$ref": "#/components/responses/OkResponse"}}}}, "/private/set_password_for_subaccount": {"get": {"description": "Set the password for the subaccount", "tags": ["private", "account_management", "internal"], "parameters": [{"name": "sid", "description": "The user id for the subaccount", "in": "query", "schema": {"type": "integer"}, "required": true}, {"name": "password", "description": "The password for the subaccount", "in": "query", "schema": {"type": "string"}, "required": true}], "responses": {"200": {"$ref": "#/components/responses/OkResponse"}}}}, "/private/toggle_subaccount_login": {"get": {"description": "Enable or disable login for a subaccount. If login is disabled and a session for the subaccount exists, this session will be terminated. <br>**[TFA required](#security-keys)**", "tags": ["private", "account_management"], "parameters": [{"name": "sid", "description": "The user id for the subaccount", "in": "query", "schema": {"type": "integer"}, "required": true}, {"name": "state", "description": "enable or disable login.", "in": "query", "schema": {"type": "string", "enum": ["enable", "disable"]}, "required": true}], "responses": {"200": {"$ref": "#/components/responses/OkResponse"}}}}, "/private/toggle_notifications_from_subaccount": {"get": {"description": "Enable or disable sending of notifications for the subaccount. <br>**[TFA required](#security-keys)**", "tags": ["private", "account_management"], "parameters": [{"name": "sid", "description": "The user id for the subaccount", "in": "query", "schema": {"type": "integer"}, "required": true}, {"name": "state", "description": "enable (`true`) or disable (`false`) notifications", "in": "query", "schema": {"type": "boolean"}, "required": true}], "responses": {"200": {"$ref": "#/components/responses/OkResponse"}}}}, "/private/get_subaccounts": {"get": {"description": "Get information about subaccounts. When called from subaccount, the response will include limited details for the main account and details for the subaccount initiating the request. The portfolio information will be included in the response only if the `with_portfolio` parameter is set to `true`.", "tags": ["private", "account_management"], "parameters": [{"name": "with_portfolio", "description": "Portfolio flag: `true` for portfolio information, `false` for subaccount information only. `false` by default", "in": "query", "schema": {"type": "boolean"}}], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}, "401": {"$ref": "#/components/responses/ErrorResponse"}}}}, "/private/get_subaccounts_details": {"get": {"description": "Get subaccounts positions", "tags": ["private", "account_management"], "parameters": [{"name": "with_open_orders", "description": "Optional parameter to ask for open orders list, default: `false`", "in": "query", "schema": {"type": "boolean"}}], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}, "401": {"$ref": "#/components/responses/ErrorResponse"}}}}, "/private/remove_subaccount": {"get": {"description": "Remove empty subaccount. <br>**[TFA required](#security-keys)**", "tags": ["private", "account_management"], "parameters": [{"name": "subaccount_id", "description": "The user id for the subaccount", "in": "query", "schema": {"type": "integer"}, "required": true}], "responses": {"200": {"$ref": "#/components/responses/OkResponse"}}}}, "/private/subscribe": {"get": {"description": "Subscribe to one or more channels. The name of the channel determines what information will be provided, and in what form. **📖 Related Support Article:** Market Data Collection Best Practices", "tags": ["private", "websocket_only", "subscription_management"], "parameters": [{"name": "channels", "description": "A list of channels to subscribe to.", "in": "query", "schema": {"type": "array", "items": {"type": "string", "x-deribit-type": "channel", "example": "deribit_price_index.btc_usd"}}, "required": true}, {"name": "label", "description": "Optional label which will be added to notifications of private channels (max 16 characters).", "in": "query", "required": false, "schema": {"type": "string", "example": "TestLabel1"}}], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}, "401": {"$ref": "#/components/responses/ErrorResponse"}}}}, "/private/unsubscribe": {"get": {"description": "Unsubscribe from one or more channels.", "tags": ["private", "websocket_only", "subscription_management"], "parameters": [{"name": "channels", "description": "A list of channels to unsubscribe from.", "in": "query", "schema": {"type": "array", "items": {"type": "string", "x-deribit-type": "channel", "example": "deribit_price_index.btc_usd"}}, "required": true}], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}, "401": {"$ref": "#/components/responses/ErrorResponse"}}}}, "/private/unsubscribe_all": {"get": {"description": "Unsubscribe from all the channels subscribed so far.", "tags": ["websocket_only", "subscription_management", "private"], "responses": {"200": {"$ref": "#/components/responses/OkResponse"}}}}, "/private/enable_cancel_on_disconnect": {"x-order": 100, "get": {"description": "Enable Cancel On Disconnect for the connection. After enabling, all orders created via this connection will be automatically cancelled when the connection is closed. <br></br>Cancel is triggered in the following cases: when the TCP connection is properly terminated, when the connection is closed due to 10 minutes of inactivity, or when a heartbeat detects a disconnection. To reduce the inactivity timeout, consider using [public/set_heartbeat](https://docs.deribit.com/#public-set_heartbeat).<br></br> **Note**: If the connection is gracefully closed using [private/logout](https://docs.deribit.com/#private-logout), cancel-on-disconnect will **not** be triggered.<br></br> **Notice**: Cancel-on-Disconnect does not affect orders created by other connections - they will remain active! When change is applied on the `account` scope, then every newly opened connection will start with **active** Cancel on Disconnect.", "tags": ["session_management", "private"], "parameters": [], "responses": {"200": {"$ref": "#/components/responses/OkResponse"}, "400": {"$ref": "#/components/responses/ErrorResponse"}}}}, "/private/disable_cancel_on_disconnect": {"get": {"description": "Disable Cancel On Disconnect for the connection.</br></br> When change is applied for the account, then every newly opened connection will start with **inactive** Cancel on Disconnect.", "tags": ["session_management", "private"], "parameters": [], "responses": {"200": {"$ref": "#/components/responses/OkResponse"}, "400": {"$ref": "#/components/responses/ErrorResponse"}}}}, "/private/get_cancel_on_disconnect": {"get": {"description": "Read current Cancel On Disconnect configuration for the account.", "tags": ["session_management", "private"], "parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}, "400": {"$ref": "#/components/responses/ErrorResponse"}}}}, "/private/get_transaction_log": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Retrieve the latest user trades that have occurred for a specific instrument and within a given time range. **📖 Related Support Article:** Transaction log", "tags": ["account_management", "private"]}}, "/private/logout": {"get": {"parameters": [], "description": "Gracefully close websocket connection, when COD (Cancel On Disconnect) is enabled orders are not cancelled", "tags": ["websocket_only", "authentication", "private"], "responses": {"200": {"description": "closes WS connection"}, "400": {"$ref": "#/components/responses/ErrorResponse"}}}}, "/private/change_password": {"get": {"description": "Change the password for current account. New tokens are returned and other sessions are closed on success.", "tags": ["private", "account_management", "internal"], "parameters": [{"name": "new_password", "description": "New password", "in": "query", "schema": {"type": "string"}, "required": true}, {"name": "old_password", "description": "Current password", "in": "query", "schema": {"type": "string"}, "required": true}], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}}}, "/public/ask_for_password_reset": {"get": {"description": "Start process of password reset. Email with link to reset password is sent.", "tags": ["account_management", "internal"], "parameters": [], "responses": {"200": {"$ref": "#/components/responses/OkResponse"}}}}, "/public/reset_password": {"get": {"description": "Resets users password. User is determined by the `code` value given in password reset link", "tags": ["account_management", "internal"], "parameters": [{"name": "password", "description": "New password", "in": "query", "schema": {"type": "string"}, "required": true}, {"name": "code", "in": "query", "schema": {"type": "string"}, "required": true, "description": "code from password reset link"}], "responses": {"200": {"$ref": "#/components/responses/OkResponse"}}}}, "/private/chat_get_account_summary": {"get": {"description": "get chat account summary", "tags": ["private", "chat", "internal"], "parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}}}, "/private/chat_set_nick": {"get": {"description": "set chat nick", "tags": ["private", "chat", "internal"], "parameters": [{"name": "nick", "description": "nick for the chat", "in": "query", "schema": {"type": "string"}, "required": true}], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}}}, "/private/list_custody_accounts": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/get_private_list_custody_accounts_200"}}, "description": "Retrieves user custody accounts list. **📖 Related Support Article:** [Custody Options](https://support.deribit.com/hc/en-us/articles/26533163120413-Custody-Options)", "tags": ["account_management", "private"]}}, "/private/set_custody_auto_deposit": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/OkResponse"}}, "description": "Set custody 'auto_deposit' flag.", "tags": ["account_management", "private", "internal"]}}, "/private/set_custody_client_id": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/OkResponse"}}, "description": "Set custody 'client_id'.", "tags": ["account_management", "private", "internal"]}}, "/private/custody_deposit": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/get_private_custody_deposit_200"}}, "description": "Transfer funds from custody balance to trading balance", "tags": ["wallet", "private", "internal"]}}, "/private/custody_withdraw": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/get_private_custody_withdraw_200"}}, "description": "Transfer funds from trading balance to custody balance", "tags": ["wallet", "private", "internal"]}}, "/private/cancel_pending_custody_withdrawals": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/get_private_cancel_pending_custody_withdrawals_200"}}, "description": "Cancels pending custody withdrawals and transfers funds back to trading balance", "tags": ["wallet", "private", "internal"]}}, "/private/list_custody_logs": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/get_private_list_custody_logs_200"}}, "description": "Retrieves user custody logs list.", "tags": ["account_management", "private", "internal"]}}, "/private/generate_custody_deposit_address": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/get_private_generate_custody_deposit_address_200"}}, "description": "Creates deposit address to transfer funds from custody platform to Deribit - it can be called only once for each currency", "tags": ["wallet", "private", "internal"]}}, "/private/set_custody_withdrawal_address": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/get_private_set_custody_withdrawal_address_200"}}, "description": "Allows setting address for custody withdrawals, first address is set immediately, changing this might be delayed if withdrawal delay is set for account", "tags": ["wallet", "private", "internal"]}}, "/private/cancel_custody_withdrawal_address_change": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/get_private_cancel_custody_withdrawal_address_change_200"}}, "description": "Allows setting address for custody withdrawals, first address is set immediately, changing this might be delayed if withdrawal delay is set for account", "tags": ["wallet", "private", "internal"]}}, "/private/custody/get_balance": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Get \"in exchange\" balance of the user", "tags": ["private", "custody"]}}, "/private/custody/get_balance_snapshot": {"get": {"parameters": [{"name": "sign_response", "description": "If `true`, the response will be signed with the private key", "in": "query", "schema": {"type": "boolean"}, "required": false}], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Get a snapshot of the \"in exchange\" user balance", "tags": ["private", "custody"]}}, "/private/custody/get_all_balances_snapshot": {"get": {"parameters": [{"name": "currencies", "description": "A list of currencies for which the balance snapshot will be retrieved. If no currencies are specified, the handler returns the result for all available currencies.", "in": "query", "schema": {"type": "array"}, "required": false}, {"name": "sign_response", "description": "If `true`, the response will be signed with the private key", "in": "query", "schema": {"type": "boolean"}, "required": false}], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Get a snapshot of the \"in exchange\" user balance for multiple currencies", "tags": ["private", "custody"]}}, "/private/custody/put_balance": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Update \"in custody\" balance of the user", "tags": ["private", "custody"]}}, "/private/custody/deposit_funds": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/get_private_custody_deposit_funds_200"}}, "description": "Notify Deribit about increase of user \"in custody\" balance", "tags": ["private", "custody"]}}, "/private/custody/withdraw_funds": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/get_private_custody_withdraw_funds_200"}}, "description": "Verifies if the \"in exchange\" balance of the user, is sufficient for withdrawal. If the withdrawal is feasible, it deducts the requested amount from that balance", "tags": ["private", "custody"]}}, "/private/custody/bind_corporate_account": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/get_private_custody_bind_corporate_account_200"}}, "description": "Verifies the `business_registration_number`, then binds the corporate account to the custodian with the given `external_id`.", "tags": ["private", "custody"]}}, "/private/custody/unbind_account": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/get_private_custody_unbind_account_200"}}, "description": "Verifies the `external_id`, then unbinds the account from the custodian and removes the `external_id`. Unbinding can only be performed after the account offboarding process is complete and if the custodian supports it.", "tags": ["private", "custody"]}}, "/private/custody/get_settlement": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Retrieve details about a specific settlement", "tags": ["private", "custody"]}}, "/private/custody/review_settlement": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Custodian reviewed the settlement and provides the review result. For each currency custodian can either confirm, ignore or reject the settlement instruction and provide a reason.", "tags": ["private", "custody"]}}, "/private/custody/execute_settlement_instruction": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Custodian has executed the settlement for the given currencies and exchange updates the client's `custody_balance`` accordingly.", "tags": ["private", "custody"]}}, "/private/custody/initiate_settlement": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Custodian requests to initiate settlement for the given currencies. For each currency exchange verifies the `custody_balance` then initiates a settlement with the given `id`.", "tags": ["private", "custody"]}}, "/multicast/get_packet": {"get": {"parameters": [{"name": "channel_id", "description": "Multicast channel ID", "required": true, "in": "query", "schema": {"type": "integer"}}, {"name": "seq", "description": "Sequence number of the packet in the multicast channel", "required": true, "in": "query", "schema": {"type": "integer"}}], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Retrieves a packet from the multicast channel packet history", "tags": ["internal", "multicast"]}}, "/multicast/get_packets": {"get": {"parameters": [{"name": "channel_id", "description": "Multicast channel ID", "required": true, "in": "query", "schema": {"type": "integer"}}, {"name": "start", "description": "Starting sequence number of the packet in the multicast channel", "required": true, "in": "query", "schema": {"type": "integer"}}, {"name": "end", "description": "End sequence number of the packet in the multicast channel", "required": true, "in": "query", "schema": {"type": "integer"}}], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Retrieves a range of packet from the multicast channel packet history", "tags": ["internal", "multicast"]}}, "/multicast/get_instrument_dictionary": {"get": {"parameters": [], "responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "Retrieves a dictionary mapping instrument names to their corresponding instument ids.", "tags": ["internal", "multicast"]}}, "/private/get_broker_trade_requests": {"get": {"responses": {"200": {"$ref": "#/components/responses/ErrorResponse"}}, "description": "**Broker Method** Provides a list of broker block trade requests including pending approvals, declined trades, and expired trades. `timestamp` and `nonce` received in response can be used to approve or reject the pending broker block trade.", "tags": ["private", "block_trade"]}}}, "components": {"x-sections": {"subscriptions": {"introduction": "#Subscriptions The [subscribe](#private-subscribe) method can be used to subscribe to one or more *channels*. This section provides an overview of the channels and the notifications that the subscriber will receive for each of those channels. In most cases the channel name is constructed from a couple of elements. This makes it possible to specify exactly which information is required, and/or the frequency or aggregation level. These elements are considered parameters for the subscription. For example, when subscribing to the channel <code>book.BTC-27JUL18.10.20.100ms</code>, the element <code>BTC-27JUL18</code> specifies that the name of the instrument (see [naming](#naming)), <code>10</code> means that the results should be grouped to that precision, etc. As described in [notifications](#notifications), response data includes fields required by JSON-RPC and part dedicated for subscription data. <p> <table> <thead> <tr> <th>Name</th> <th>Type</th> <th>Description</th> </tr> </thead> <tbody> <tr> <td>jsonrpc</td> <td>string</td> <td>The JSON-RPC version (2.0)</td> </tr> <tr> <td>method</td> <td>string</td> <td>Here it's always <code>subscription</code></td> </tr> <tr> <td>params</td> <td><em>object</em></td> <td></td> </tr> <tr> <td>&nbsp;&nbsp;›&nbsp;&nbsp;channel</td> <td>string</td> <td>The same channel as given when subscribing to notifications</td> </tr> <tr> <td>&nbsp;&nbsp;›&nbsp;&nbsp;label</td> <td>string</td> <td>The same label as given when subscribing to notifications (present only when provided in <code>private/subscribe</code>; only for private channels)</td> </tr> <tr> <td>&nbsp;&nbsp;›&nbsp;&nbsp;data</td> <td><em>object</em></td> <td>Data specific for the channel</td> </tr> </tbody> </table> </p> For all the following channel types only specific <code>data</code> part will be described."}}, "parameters": {"continuation": {"name": "continuation", "description": "Continuation token for pagination", "in": "query", "required": false, "schema": {"type": "string", "example": "xY7T6cutS3t2B9YtaDkE6TS379oKnkzTvmEDUnEUP2Msa9xKWNNaT"}}, "continuation_as_integer": {"name": "continuation", "description": "Continuation token for pagination", "in": "query", "required": false, "schema": {"type": "integer", "example": 429946}}, "instrument_name": {"name": "instrument_name", "description": "Instrument name", "required": true, "in": "query", "schema": {"$ref": "#/components/schemas/instrument_name"}}, "combo_id": {"name": "combo_id", "description": "Combo ID", "required": true, "in": "query", "schema": {"$ref": "#/components/schemas/combo_id"}}, "combo_trades": {"description": "List of trades used to create a combo", "in": "query", "name": "trades", "required": true, "schema": {"type": "array", "items": {"type": "object", "description": "Array item with 3 properties"}}}, "index_name": {"name": "index_name", "required": true, "in": "query", "description": "Index identifier, matches (base) cryptocurrency with quote currency", "schema": {"$ref": "#/components/schemas/index_name"}}, "index_name_for_dvol": {"name": "index_name", "description": "Index identifier supported for DVOL", "required": true, "in": "query", "schema": {"$ref": "#/components/schemas/index_name_for_dvol"}}, "index_name_derivative": {"name": "index_name", "required": true, "in": "query", "description": "Index identifier of derivative instrument on the platform", "schema": {"$ref": "#/components/schemas/index_name_derivative"}}, "index_name_derivative_optional": {"name": "index_name", "required": false, "in": "query", "description": "Index identifier of derivative instrument on the platform; skipping this parameter will return all configurations", "schema": {"$ref": "#/components/schemas/index_name_derivative"}}, "type_of_supported_index": {"name": "type", "required": false, "in": "query", "description": "Type of a cryptocurrency price index", "schema": {"type": "string", "enum": ["all", "spot", "derivative"]}}, "subscription_interval": {"name": "interval", "description": "Frequency of notifications. Events will be aggregated over this interval. The value `raw` means no aggregation will be applied **(Please note that `raw` interval is only available to authorized users)**", "in": "query", "schema": {"type": "string", "enum": ["agg2", "100ms", "raw"]}, "required": true}, "subscription_interval_non_raw": {"name": "interval", "description": "Frequency of notifications. Events will be aggregated over this interval.", "in": "query", "schema": {"type": "string", "enum": ["100ms", "agg2"]}, "required": true}, "optional_instrument_name": {"name": "instrument_name", "description": "Instrument name", "required": false, "in": "query", "schema": {"$ref": "#/components/schemas/instrument_name"}}, "instrument_name_options_only": {"name": "instrument_name", "description": "Instrument name - options only", "required": true, "in": "query", "schema": {"$ref": "#/components/schemas/instrument_name"}}, "currency": {"name": "currency", "description": "The currency symbol", "required": true, "in": "query", "schema": {"$ref": "#/components/schemas/currency"}}, "wallet_currency": {"name": "currency", "description": "The currency symbol", "required": true, "in": "query", "schema": {"$ref": "#/components/schemas/wallet_currency"}}, "currency_pair": {"name": "currency_pair", "description": "The currency pair symbol", "required": true, "in": "query", "schema": {"$ref": "#/components/schemas/index_name"}}, "currency_pair_optional": {"name": "currency_pair", "description": "The currency pair symbol", "required": false, "in": "query", "schema": {"$ref": "#/components/schemas/index_name"}}, "expiration": {"name": "expiration", "description": "The timestamp of expiration (milliseconds since the Unix epoch)", "required": true, "in": "query", "schema": {"$ref": "#/components/schemas/timestamp"}}, "currency_with_any": {"name": "currency", "description": "The currency symbol or `\"any\"` for all", "required": true, "in": "query", "schema": {"$ref": "#/components/schemas/currency_with_any"}}, "currency_with_any_and_list": {"name": "currency", "description": "The currency symbol, list of currency symbols or `\"any\"` for all", "required": true, "in": "query", "schema": {"$ref": "#/components/schemas/currency_with_any_and_list"}}, "currency_with_any_and_grouped": {"name": "currency", "description": "The currency symbol or `\"any\"` for all or '\"grouped\"' for all grouped by currency", "required": true, "in": "query", "schema": {"$ref": "#/components/schemas/currency_with_any_and_grouped"}}, "settlement_currency_with_any_and_grouped": {"name": "currency", "description": "The currency symbol or `\"any\"` for all or '\"grouped\"' for all grouped by currency", "required": true, "in": "query", "schema": {"$ref": "#/components/schemas/settlement_currency_with_any_and_grouped"}}, "kind_with_any": {"name": "kind", "description": "Instrument kind or `\"any\"` for all", "required": true, "in": "query", "schema": {"$ref": "#/components/schemas/kind_with_any"}}, "kind_strict": {"name": "kind", "description": "Instrument kind, `\"future\"` or `\"option\"`", "required": true, "in": "query", "schema": {"$ref": "#/components/schemas/kind"}}, "kind_future_or_option_with_any": {"name": "kind", "description": "Instrument kind, `\"future\"` or `\"option\"` or `\"any\"`", "required": true, "in": "query", "schema": {"$ref": "#/components/schemas/kind_future_or_option_with_any"}}, "optional_currency": {"description": "The currency symbol", "in": "query", "name": "currency", "required": false, "schema": {"$ref": "#/components/schemas/currency"}}, "optional_currency_block_rfq": {"description": "The currency symbol", "in": "query", "name": "currency", "required": false, "schema": {"$ref": "#/components/schemas/block_rfq_currency"}}, "optional_kind": {"name": "kind", "description": "Instrument kind, if not provided instruments of all kinds are considered", "required": false, "in": "query", "schema": {"$ref": "#/components/schemas/kind"}}, "kind_with_combo_all": {"name": "kind", "description": "Instrument kind, `\"combo\"` for any combo or `\"any\"` for all", "required": true, "in": "query", "schema": {"$ref": "#/components/schemas/kind_with_combo_all"}}, "only_combo_kind": {"name": "kind", "description": "Combo instrument kind, `\"combo\"` for any combo", "required": true, "in": "query", "schema": {"$ref": "#/components/schemas/only_combo_kind"}}, "optional_kind_with_combo_all": {"name": "kind", "description": "Instrument kind, `\"combo\"` for any combo or `\"any\"` for all. If not provided instruments of all kinds are considered", "required": false, "in": "query", "schema": {"$ref": "#/components/schemas/kind_with_combo_all"}}, "optional_combo_state": {"name": "state", "description": "Combo state, if not provided combos of all states are considered", "required": false, "in": "query", "schema": {"$ref": "#/components/schemas/combo_state"}}, "optional_order_type": {"name": "type", "description": "Order type, default - `all`", "required": false, "in": "query", "schema": {"$ref": "#/components/schemas/order_type2"}}, "optional_simple_order_type": {"name": "type", "description": "Order type - `limit`, `stop`, `take`, `trigger_all` or `all`, default - `all`", "required": false, "in": "query", "schema": {"$ref": "#/components/schemas/simple_order_type"}}, "detailed_bool_for_cancel_all": {"name": "detailed", "description": "When detailed is set to `true` output format is changed. See description. Default: `false`", "required": false, "in": "query", "schema": {"type": "boolean"}}, "include_combos_for_cancel_all": {"name": "include_combos", "description": "When set to `true` orders in combo instruments affecting a given position will also be cancelled. Default: `false`", "required": false, "in": "query", "schema": {"type": "boolean"}}, "freeze_quotes": {"name": "freeze_quotes", "description": "Whether or not to reject incoming quotes for 1 second after cancelling (`false` by default). Related to `private/mass_quote` request.", "required": false, "in": "query", "schema": {"type": "boolean"}}, "start_timestamp": {"name": "start_timestamp", "description": "The earliest timestamp to return result from (milliseconds since the UNIX epoch)", "required": true, "in": "query", "schema": {"$ref": "#/components/schemas/timestamp"}}, "trade_start_timestamp": {"name": "start_timestamp", "description": "The earliest timestamp to return result from (milliseconds since the UNIX epoch). When param is provided trades are returned from the earliest", "required": true, "in": "query", "schema": {"$ref": "#/components/schemas/timestamp"}}, "optional_trade_start_timestamp": {"name": "start_timestamp", "description": "The earliest timestamp to return result from (milliseconds since the UNIX epoch). When param is provided trades are returned from the earliest", "required": false, "in": "query", "schema": {"$ref": "#/components/schemas/timestamp"}}, "optional_start_timestamp": {"name": "start_timestamp", "description": "The earliest timestamp to return result from (milliseconds since the UNIX epoch)", "required": false, "in": "query", "schema": {"$ref": "#/components/schemas/timestamp"}}, "end_timestamp": {"name": "end_timestamp", "description": "The most recent timestamp to return result from (milliseconds since the UNIX epoch)", "required": true, "in": "query", "schema": {"$ref": "#/components/schemas/timestamp"}}, "trade_end_timestamp": {"name": "end_timestamp", "description": "The most recent timestamp to return result from (milliseconds since the UNIX epoch). Only one of params: start_timestamp, end_timestamp is truly required", "required": true, "in": "query", "schema": {"$ref": "#/components/schemas/timestamp"}}, "optional_trade_end_timestamp": {"name": "end_timestamp", "description": "The most recent timestamp to return result from (milliseconds since the UNIX epoch). Only one of params: start_timestamp, end_timestamp is truly required", "required": false, "in": "query", "schema": {"$ref": "#/components/schemas/timestamp"}}, "optional_start_trade_id": {"name": "start_id", "description": "The ID of the first trade to be returned. Number for BTC trades, or hyphen name in ex. `\"ETH-15\"` # `\"ETH_USDC-16\"`", "required": false, "in": "query", "schema": {"$ref": "#/components/schemas/trade_id"}}, "optional_end_trade_id": {"name": "end_id", "description": "The ID of the last trade to be returned. Number for BTC trades, or hyphen name in ex. `\"ETH-15\"` # `\"ETH_USDC-16\"`", "required": false, "in": "query", "schema": {"$ref": "#/components/schemas/trade_id"}}, "optional_start_seq": {"name": "start_seq", "description": "The sequence number of the first trade to be returned", "required": false, "in": "query", "schema": {"type": "integer"}}, "optional_end_seq": {"name": "end_seq", "description": "The sequence number of the last trade to be returned", "required": false, "in": "query", "schema": {"type": "integer"}}, "optional_count10": {"name": "count", "description": "Number of requested items, default - `10`, maximum - `1000`", "required": false, "in": "query", "schema": {"type": "integer", "maximum": 1000, "minimum": 1}}, "optional_count20": {"name": "count", "description": "Number of requested items, default - `20`, maximum - `1000`", "required": false, "in": "query", "schema": {"type": "integer", "maximum": 1000, "minimum": 1}}, "optional_count100": {"name": "count", "description": "Number of requested items, default - `100`, maximum - `1000`", "required": false, "in": "query", "schema": {"type": "integer", "maximum": 1000, "minimum": 1}}, "optional_sorting": {"name": "sorting", "description": "Direction of results sorting (`default` value means no sorting, results will be returned in order in which they left the database)", "required": false, "in": "query", "schema": {"$ref": "#/components/schemas/sorting"}}, "optional_offset": {"name": "offset", "description": "The offset for pagination, default - `0`", "in": "query", "required": false, "schema": {"example": 10, "type": "integer"}}, "optional_include_old_orders": {"name": "include_old", "description": "Include in result orders older than 2 days, default - `false`", "in": "query", "required": false, "schema": {"example": false, "type": "boolean"}}, "optional_include_unfilled_orders": {"name": "include_unfilled", "description": "Include in result fully unfilled closed orders, default - `false`", "in": "query", "required": false, "schema": {"example": false, "type": "boolean"}}, "order_id": {"description": "The order id", "in": "query", "name": "order_id", "required": true, "schema": {"$ref": "#/components/schemas/order_id"}}, "block_trade_id": {"description": "Block trade id", "in": "query", "name": "id", "required": true, "schema": {"$ref": "#/components/schemas/block_trade_id"}}, "optional_block_trade_start_id": {"name": "start_id", "description": "Response will contain block trades older than the one provided in this field", "required": false, "in": "query", "schema": {"$ref": "#/components/schemas/block_trade_id"}}, "optional_block_trade_end_id": {"name": "end_id", "description": "The id of the oldest block trade to be returned, `start_id` is required with `end_id`", "required": false, "in": "query", "schema": {"$ref": "#/components/schemas/block_trade_id"}}, "block_trade_timestamp": {"description": "Timestamp, shared with other party (milliseconds since the UNIX epoch)", "in": "query", "name": "timestamp", "required": true, "schema": {"$ref": "#/components/schemas/timestamp"}}, "block_trade_nonce": {"description": "Nonce, shared with other party", "in": "query", "name": "nonce", "required": true, "schema": {"$ref": "#/components/schemas/nonce"}}, "block_trade_role": {"description": "Describes if user wants to be maker or taker of trades", "in": "query", "name": "role", "required": true, "schema": {"$ref": "#/components/schemas/role"}}, "block_trade_role_optional": {"description": "Describes if user wants to be maker or taker of trades", "in": "query", "name": "role", "required": false, "schema": {"$ref": "#/components/schemas/role"}}, "trade_price": {"description": "Price for trade", "in": "query", "name": "price", "required": true, "schema": {"type": "number"}}, "block_rfq_trade_price": {"description": "Maximum acceptable price for execution", "in": "query", "name": "price", "required": true, "schema": {"type": "number"}}, "block_rfq_aggregated_price": {"description": "Aggregated price used for quoting future spreads.", "in": "query", "name": "price", "required": false, "schema": {"type": "number"}}, "position_move_price": {"description": "Price for trade - if not provided average price of the position is used", "in": "query", "name": "price", "required": false, "schema": {"type": "number"}}, "trade_amount": {"description": "It represents the requested trade size. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.", "in": "query", "name": "amount", "required": false, "schema": {"$ref": "#/components/schemas/amount"}}, "trade_amount_required": {"description": "It represents the requested trade size. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.", "in": "query", "name": "amount", "required": true, "schema": {"$ref": "#/components/schemas/amount"}}, "position_move_amount": {"description": "It represents the requested trade size. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin. Amount can't exceed position size.", "in": "query", "name": "amount", "required": true, "schema": {"type": "number"}}, "trade_direction": {"description": "Direction of trade from the maker perspective", "in": "query", "name": "direction", "required": true, "schema": {"$ref": "#/components/schemas/direction"}}, "leg_direction": {"description": "Direction of selected leg", "in": "query", "name": "direction", "required": true, "schema": {"$ref": "#/components/schemas/direction"}}, "block_trade_trades": {"description": "List of trades for block trade", "in": "query", "name": "trades", "required": true, "schema": {"type": "array", "items": {"type": "object", "description": "Array item with 4 properties"}}}, "position_move_trades": {"description": "List of trades for position move", "in": "query", "name": "trades", "required": true, "schema": {"type": "array", "items": {"type": "object", "description": "Array item with 3 properties"}}}, "block_trade_counterparty_signature": {"description": "Signature of block trade generated by `private/verify_block_trade_method`", "in": "query", "name": "counterparty_signature", "required": true, "schema": {"$ref": "#/components/schemas/block_trade_signature"}}, "block_trade_signature_to_invalidate": {"description": "Signature of block trade that will be invalidated", "in": "query", "name": "signature", "required": true, "schema": {"$ref": "#/components/schemas/block_trade_signature"}}, "order_quantity": {"name": "amount", "description": "It represents the requested order size. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin. The `amount` is a mandatory parameter if `contracts` parameter is missing. If both `contracts` and `amount` parameter are passed they must match each other otherwise error is returned.", "in": "query", "schema": {"type": "number"}, "required": false}, "margins_quantity": {"name": "amount", "description": "It represents the requested order size. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.", "in": "query", "schema": {"type": "number"}, "required": true}, "order_contracts": {"name": "contracts", "description": "It represents the requested order size in contract units and can be passed instead of `amount`. The `contracts` is a mandatory parameter if `amount` parameter is missing. If both `contracts` and `amount` parameter are passed they must match each other otherwise error is returned.", "in": "query", "schema": {"type": "number"}, "required": false}, "order_type": {"name": "type", "description": "The order type, default: `\"limit\"`", "in": "query", "schema": {"type": "string", "enum": ["limit", "stop_limit", "take_limit", "market", "stop_market", "take_market", "market_limit", "trailing_stop"]}, "required": false}, "optional_settlement_type": {"description": "Settlement type", "in": "query", "name": "type", "required": false, "schema": {"$ref": "#/components/schemas/settlement_type"}}, "optional_settlement_start_timestamp": {"description": "The latest timestamp to return result from (milliseconds since the UNIX epoch)", "in": "query", "name": "search_start_timestamp", "required": false, "schema": {"$ref": "#/components/schemas/timestamp"}}, "simple_order_type_market_limit": {"name": "type", "description": "The order type", "in": "query", "schema": {"type": "string", "enum": ["limit", "market"]}, "required": true}, "order_label": {"name": "label", "description": "user defined label for the order (maximum 64 characters)", "in": "query", "schema": {"type": "string"}, "required": false}, "required_order_label": {"name": "label", "description": "user defined label for the order (maximum 64 characters)", "in": "query", "schema": {"type": "string"}, "required": true}, "edit_order_price": {"name": "price", "description": "The order price in base currency. When editing an option order with advanced=usd, the field price should be the option price value in USD. When editing an option order with advanced=implv, the field price should be a value of implied volatility in percentages. For example, price=100, means implied volatility of 100%", "in": "query", "schema": {"type": "number"}, "required": false}, "order_price": {"name": "price", "description": "The order price in base currency (Only for limit and stop_limit orders) When adding an order with advanced=usd, the field price should be the option price value in USD. When adding an order with advanced=implv, the field price should be a value of implied volatility in percentages. For example, price=100, means implied volatility of 100%", "in": "query", "schema": {"type": "number"}, "required": false}, "linked_order_type": {"name": "linked_order_type", "description": "The type of the linked order. `\"one_triggers_other\"` - Execution of primary order triggers the placement of one or more secondary orders. `\"one_cancels_other\"` - The execution of one order in a pair automatically cancels the other, typically used to set a stop-loss and take-profit simultaneously. `\"one_triggers_one_cancels_other\"` - The execution of a primary order triggers two secondary orders (a stop-loss and take-profit pair), where the execution of one secondary order cancels the other.", "in": "query", "schema": {"type": "string", "enum": ["one_triggers_other", "one_cancels_other", "one_triggers_one_cancels_other"]}, "required": false}, "otoco_config": {"name": "otoco_config", "description": "List of trades to create or cancel when this order is filled.", "in": "query", "schema": {"type": "array", "items": {"type": "object", "description": "Array item with 12 properties"}}, "required": false}, "trigger_fill_condition": {"name": "trigger_fill_condition", "description": "The fill condition of the linked order (Only for linked order types), default: `first_hit`. `\"first_hit\"` - any execution of the primary order will fully cancel/place all secondary orders. `\"complete_fill\"` - a complete execution (meaning the primary order no longer exists) will cancel/place the secondary orders. `\"incremental\"` - any fill of the primary order will cause proportional partial cancellation/placement of the secondary order. The amount that will be subtracted/added to the secondary order will be rounded down to the contract size.", "in": "query", "schema": {"type": "string", "enum": ["first_hit", "complete_fill", "incremental"], "default": "first_hit"}, "required": false}, "order_side": {"name": "side", "description": "Side - `buy` or `sell`", "in": "query", "schema": {"type": "string", "$ref": "#/components/schemas/side"}, "required": false}, "time_in_force": {"name": "time_in_force", "description": "Specifies how long the order remains in effect. Default `\"good_til_cancelled\"` `\"good_til_cancelled\"` - unfilled order remains in order book until cancelled `\"good_til_day\"` - unfilled order remains in order book till the end of the trading session `\"fill_or_kill\"` - execute a transaction immediately and completely or not at all `\"immediate_or_cancel\"` - execute a transaction immediately, and any portion of the order that cannot be immediately filled is cancelled", "in": "query", "schema": {"type": "string", "default": "good_til_cancelled", "enum": ["good_til_cancelled", "good_til_day", "fill_or_kill", "immediate_or_cancel"]}, "required": false}, "length_for_perpetual_chart": {"name": "length", "description": "Specifies time period. `8h` - 8 hours, `24h` - 24 hours, `1m` - 1 month", "in": "query", "schema": {"type": "string", "enum": ["8h", "24h", "1m"]}, "required": true}, "max_show": {"name": "max_show", "description": "Deprecated. Maximum amount within an order to be shown to other customers, `0` for invisible order", "in": "query", "schema": {"type": "number", "default": 1}, "required": false}, "display_amount": {"name": "display_amount", "description": "Initial display amount for iceberg order. Has to be at least 100 times minimum amount for instrument and ratio of hidden part vs visible part has to be less than 100 as well.", "in": "query", "schema": {"type": "number", "default": 1}, "required": false}, "post_only_buy": {"name": "post_only", "description": "If true, the order is considered post-only. If the new price would cause the order to be filled immediately (as taker), the price will be changed to be just below the spread. Only valid in combination with time_in_force=`\"good_til_cancelled\"`", "in": "query", "schema": {"type": "boolean", "default": true}, "required": false}, "post_only_sell": {"name": "post_only", "description": "If true, the order is considered post-only. If the new price would cause the order to be filled immediately (as taker), the price will be changed to be just above the spread. Only valid in combination with time_in_force=`\"good_til_cancelled\"`", "in": "query", "schema": {"type": "boolean", "default": true}, "required": false}, "post_only_edit": {"name": "post_only", "description": "If true, the order is considered post-only. If the new price would cause the order to be filled immediately (as taker), the price will be changed to be just below or above the spread (accordingly to the original order type). Only valid in combination with time_in_force=`\"good_til_cancelled\"`", "in": "query", "schema": {"type": "boolean", "default": true}, "required": false}, "post_only_secondary": {"name": "post_only", "description": "If true, the order is considered post-only. If the new price would cause the order to be filled immediately (as taker), the price will be changed to be just below or above the spread (according to the direction of the order). Only valid in combination with time_in_force=`\"good_til_cancelled\"`", "in": "query", "schema": {"type": "boolean", "default": false}, "required": false}, "reject_post_only": {"name": "reject_post_only", "description": "If an order is considered post-only and this field is set to true then the order is put to the order book unmodified or the request is rejected. Only valid in combination with `\"post_only\"` set to true", "in": "query", "schema": {"type": "boolean", "default": false}, "required": false}, "optional_default": {"name": "default", "description": "If `true`, new key is marked as default", "in": "query", "schema": {"type": "boolean", "default": false}, "required": false}, "reduce_only": {"name": "reduce_only", "description": "If `true`, the order is considered reduce-only which is intended to only reduce a current position", "in": "query", "schema": {"type": "boolean", "default": false}, "required": false}, "trigger_price": {"name": "trigger_price", "description": "Trigger price, required for trigger orders only (Stop-loss or Take-profit orders)", "in": "query", "schema": {"type": "number"}, "required": false}, "trigger_offset": {"name": "trigger_offset", "description": "The maximum deviation from the price peak beyond which the order will be triggered", "in": "query", "schema": {"type": "number"}, "required": false}, "mmp": {"name": "mmp", "description": "Order MMP flag, only for order_type 'limit'", "in": "query", "schema": {"type": "boolean", "default": false}, "required": false}, "valid_until": {"name": "valid_until", "description": "Timestamp, when provided server will start processing request in Matching Engine only before given timestamp, in other cases `timed_out` error will be responded. Remember that the given timestamp should be consistent with the server's time, use /public/time method to obtain current server time.", "in": "query", "schema": {"type": "integer"}, "required": false}, "trigger": {"name": "trigger", "description": "Defines the trigger type. Required for `\"Stop-Loss\"`, `\"Take-Profit\"` and `\"Trailing\"` trigger orders", "in": "query", "schema": {"$ref": "#/components/schemas/trigger"}, "required": false}, "advanced_order_type": {"name": "advanced", "description": "Advanced option order type. (Only for options. Advanced USD orders are not supported for linear options.)", "in": "query", "schema": {"$ref": "#/components/schemas/advanced"}, "required": false}, "edit_advanced_order_type": {"name": "advanced", "description": "Advanced option order type. If you have posted an advanced option order, it is necessary to re-supply this parameter when editing it (Only for options)", "in": "query", "schema": {"$ref": "#/components/schemas/advanced"}, "required": false}, "optional_price": {"name": "price", "description": "Optional price for limit order.", "in": "query", "schema": {"type": "number"}, "required": false}, "currency_custody_address": {"name": "address", "description": "Custody address in currency format", "in": "query", "schema": {"type": "string"}, "required": true}, "currency_address_from_address_book": {"name": "address", "description": "Address in currency format, it must be in address book", "in": "query", "schema": {"type": "string"}, "required": true}, "currency_address": {"name": "address", "description": "Address in currency format", "in": "query", "schema": {"type": "string"}, "required": true}, "transfer_currency_amount": {"name": "amount", "description": "Amount of funds to be transferred", "in": "query", "schema": {"type": "number"}, "required": true}, "withdrawal_currency_amount": {"name": "amount", "description": "Amount of funds to be withdrawn", "in": "query", "schema": {"type": "number"}, "required": true}, "deposit_currency_amount": {"name": "amount", "description": "Amount of deposited funds", "in": "query", "schema": {"type": "number"}, "required": true}, "currency_amount": {"name": "amount", "description": "Amount", "in": "query", "schema": {"type": "number"}, "required": true}, "optional_amount": {"name": "amount", "description": "Amount", "in": "query", "schema": {"type": "number"}, "required": false}, "withdrawal_priority": {"name": "priority", "description": "Withdrawal priority, optional for BTC, default: `high`", "in": "query", "schema": {"type": "string", "enum": ["insane", "extreme_high", "very_high", "high", "mid", "low", "very_low"]}, "required": false}, "withdrawal_id": {"description": "The withdrawal id", "in": "query", "name": "id", "required": true, "schema": {"type": "number", "example": 1}}, "boolean_state": {"name": "state", "required": true, "in": "query", "schema": {"type": "boolean"}}, "boolean_value": {"name": "value", "required": true, "in": "query", "schema": {"type": "boolean"}}, "boolean_enabled": {"name": "enabled", "required": true, "in": "query", "schema": {"type": "boolean"}}, "address_book_type": {"name": "type", "description": "Address book type", "in": "query", "schema": {"$ref": "#/components/schemas/address_book_type"}, "required": true}, "address_book_type_without_deposit_source": {"name": "type", "description": "Address book type", "in": "query", "schema": {"$ref": "#/components/schemas/address_book_type_without_deposit_source"}, "required": true}, "address_label": {"name": "label", "description": "Label of the address book entry", "in": "query", "schema": {"$ref": "#/components/schemas/address_label"}, "required": true}, "beneficiary_vasp_name": {"name": "beneficiary_vasp_name", "description": "Name of beneficiary VASP", "in": "query", "schema": {"$ref": "#/components/schemas/beneficiary_vasp_name"}, "required": true}, "beneficiary_vasp_did": {"name": "beneficiary_vasp_did", "description": "DID of beneficiary VASP", "in": "query", "schema": {"$ref": "#/components/schemas/beneficiary_vasp_did"}, "required": true}, "beneficiary_first_name": {"name": "beneficiary_first_name", "description": "First name of beneficiary (if beneficiary is a person)", "in": "query", "schema": {"$ref": "#/components/schemas/beneficiary_first_name"}, "required": false}, "beneficiary_last_name": {"name": "beneficiary_last_name", "description": "First name of beneficiary (if beneficiary is a person)", "in": "query", "schema": {"$ref": "#/components/schemas/beneficiary_last_name"}, "required": false}, "beneficiary_company_name": {"name": "beneficiary_company_name", "description": "Beneficiary company name (if beneficiary is a company)", "in": "query", "schema": {"$ref": "#/components/schemas/beneficiary_company_name"}, "required": false}, "beneficiary_address": {"name": "beneficiary_address", "description": "Geographical address of the beneficiary", "in": "query", "schema": {"$ref": "#/components/schemas/beneficiary_address"}, "required": true}, "beneficiary_vasp_website": {"name": "beneficiary_vasp_website", "description": "Website of the beneficiary VASP. Required if the address book entry is associated with a VASP that is not included in the list of known VASPs", "in": "query", "schema": {"$ref": "#/components/schemas/beneficiary_vasp_website"}, "required": false}, "agree_to_share_with_3rd_party": {"name": "agreed", "description": "Indicates that the user agreed to shared provided information with 3rd parties", "in": "query", "schema": {"$ref": "#/components/schemas/agree_to_share_with_3rd_party"}, "required": true}, "personal_wallet": {"name": "personal", "description": "The user confirms that he provided address belongs to him and he has access to it via an un-hosted wallet software", "in": "query", "schema": {"$ref": "#/components/schemas/personal_wallet"}, "required": true}, "extra_currencies": {"name": "extra_currencies", "description": "The user can pass a list of currencies to add the address for. It is currently available ONLY for ERC20 currencies. Without passing this paramater for an ERC20 currency, the address will be added to ALL of the ERC20 currencies.", "in": "query", "schema": {"$ref": "#/components/schemas/extra_currencies"}, "required": false}, "transfer_direction": {"name": "direction", "description": "Direction of transfer", "in": "query", "schema": {"$ref": "#/components/schemas/transfer_direction"}, "required": true}, "transfer_destination_for_user": {"name": "destination", "description": "Destination wallet's address taken from address book", "in": "query", "schema": {"type": "string"}, "required": true}, "transfer_destination_for_subaccount": {"name": "destination", "description": "Id of destination subaccount. Can be found in `My Account >> Subaccounts` tab", "in": "query", "schema": {"type": "integer", "example": 1}, "required": true}, "transfer_source_for_subaccount": {"name": "source", "description": "Id of the source (sub)account. Can be found in `My Account >> Subaccounts` tab. By default, it is the Id of the account which made the request. However, if a different \"source\" is specified, the user must possess the mainaccount scope, and only other subaccounts can be designated as the source.", "in": "query", "schema": {"type": "integer", "example": 1}, "required": false}, "user_id": {"name": "user_id", "description": "Id of a (sub)account", "in": "query", "schema": {"type": "integer", "example": 1}, "required": true}, "optional_user_id": {"name": "user_id", "description": "Id of a (sub)account - by default current user id is used", "in": "query", "schema": {"type": "integer", "example": 1}, "required": false}, "trade_allocation_user_id": {"name": "user_id", "description": "User ID (subaccount or main account) to allocate part of the RFQ amount.", "in": "query", "schema": {"type": "integer"}, "required": false}, "trade_allocation_client_id": {"name": "client_id", "description": "ID of a client; available to broker. Represents a group of users under a common name.", "in": "query", "schema": {"type": "integer"}, "required": false}, "trade_allocation_client_link_id": {"name": "client_link_id", "description": "ID assigned to a single user in a client; available to broker.", "in": "query", "schema": {"type": "integer"}, "required": false}, "trade_allocation_client_info": {"name": "client_info", "description": "Client allocation info for brokers.", "in": "query", "schema": {"type": "string", "description": "JSON string containing: client_id, client_link_id"}, "required": false}, "trade_allocation_amount": {"name": "amount", "description": "Amount allocated to this user or client.", "in": "query", "schema": {"type": "number"}, "required": false}, "pme_enabled": {"name": "enabled", "description": "Whether PM or SM should be enabled - PM while `true`, SM otherwise", "in": "query", "schema": {"type": "boolean", "example": true}, "required": true}, "dry_run": {"name": "dry_run", "description": "If `true` request returns the result without switching the margining model. Default: `false`", "in": "query", "schema": {"type": "boolean", "example": true}, "required": false}, "margin_model": {"name": "margin_model", "description": "Margin model", "in": "query", "schema": {"type": "string", "enum": ["cross_pm", "cross_sm", "segregated_pm", "segregated_sm"]}, "required": true}, "position_move_source_uid": {"name": "source_uid", "description": "Id of source subaccount. Can be found in `My Account >> Subaccounts` tab", "in": "query", "schema": {"type": "integer", "example": 1}, "required": true}, "position_move_target_uid": {"name": "target_uid", "description": "Id of target subaccount. Can be found in `My Account >> Subaccounts` tab", "in": "query", "schema": {"type": "integer", "example": 1}, "required": true}, "transfer_id": {"name": "id", "description": "Id of transfer", "in": "query", "schema": {"$ref": "#/components/schemas/transfer_id"}, "required": true}, "tfa": {"name": "tfa", "description": "TFA code, required when TFA is enabled for current account", "in": "query", "schema": {"type": "string"}, "required": false}, "client_software_name": {"name": "client_name", "description": "Client software name", "in": "query", "schema": {"type": "string", "example": "My Trading Software"}, "required": true}, "client_software_version": {"name": "client_version", "description": "Client software version", "in": "query", "schema": {"type": "string", "example": "1.0.2"}, "required": true}, "chart_resolution": {"name": "resolution", "description": "Chart bars resolution given in full minutes or keyword `1D` (only some specific resolutions are supported)", "in": "query", "schema": {"type": "string", "enum": [1, 3, 5, 10, 15, 30, 60, 120, 180, 360, 720, "1D"]}, "required": true}, "vix_resolution": {"name": "resolution", "description": "Time resolution given in full seconds or keyword `1D` (only some specific resolutions are supported)", "in": "query", "schema": {"type": "string", "enum": [1, 60, 3600, 43200, "1D"]}, "required": true}, "key_id": {"name": "id", "description": "Id of key", "in": "query", "required": true, "schema": {"type": "integer", "example": 1}}, "key_name": {"name": "name", "description": "Name of key (only letters, numbers and underscores allowed; maximum length - 16 characters)", "in": "query", "schema": {"type": "string", "example": "TestName"}, "required": false}, "key_name_required": {"name": "name", "description": "Name of key (only letters, numbers and underscores allowed; maximum length - 16 characters)", "in": "query", "schema": {"type": "string", "example": "TestName"}, "required": true}, "key_scope": {"name": "max_scope", "in": "query", "required": true, "description": "Describes maximal access for tokens generated with given key, possible values: `trade:[read, read_write, none]`, `wallet:[read, read_write, none]`, `account:[read, read_write, none]`, `block_trade:[read, read_write, none]`. If scope is not provided, its value is set as none. Please check details described in Access scope", "schema": {"$ref": "#/components/schemas/max_scope"}}, "key_features": {"name": "enabled_features", "in": "query", "required": false, "description": "List of enabled advanced on-key features. Available options: - `restricted_block_trades`: Limit the block_trade read the scope of the API key to block trades that have been made using this specific API key - `block_trade_approval`: Block trades created using this API key require additional user approval. Methods that use `block_rfq` scope are not affected by Block Trade approval feature", "schema": {"type": "array", "items": {"type": "string", "enum": ["restricted_block_trades", "block_trade_approval"]}}}, "enable_key": {"name": "enabled", "in": "query", "required": false, "description": "Enables/disables the API key. `true` to enable, `false` to disable", "schema": {"type": "boolean"}}, "whitelist_ip": {"name": "ip_whitelist", "in": "query", "required": false, "description": "Whitelist provided IP address on a selected key", "schema": {"type": "array", "items": {"type": "string"}}}, "public_key": {"name": "public_key", "in": "query", "required": false, "description": "ED25519 or RSA PEM Encoded public key that should be used to create asymmetric API Key for signing requests/authentication requests with user's private key. **📖 Related Support Article:** Asymmetric API keys", "schema": {"type": "string", "example": "-----BEGIN PUBLIC KEY----- MCowBQYDK2VwAyEAM7FWhKquNqLmTOV4hfYT5r3AjrYiORTT6Tn5HIfFNV8= -----END PUBLIC KEY-----"}}, "optional_query": {"name": "query", "description": "The following keywords can be used to filter the results: `trade`, `maker`, `taker`, `open`, `close`, `liquidation`, `buy`, `sell`, `withdrawal`, `delivery`, `settlement`, `deposit`, `transfer`, `option`, `future`, `correction`, `block_trade`, `swap`. Plus withdrawal or transfer addresses", "in": "query", "schema": {"type": "string", "example": "settlement"}, "required": false}, "email": {"name": "email", "description": "Email address of account", "in": "query", "schema": {"type": "string", "example": "john.doe@example.com"}, "required": true}, "recovery_code": {"name": "code", "description": "One time recovery code", "in": "query", "schema": {"type": "string"}, "required": true}, "password": {"name": "password", "description": "The password for the account", "in": "query", "schema": {"type": "string"}, "required": true}, "cod_scope": {"name": "scope", "description": "Specifies if Cancel On Disconnect change should be applied/checked for the current connection or the account (default - `connection`) **NOTICE:** Scope `connection` can be used only when working via Websocket.", "in": "query", "required": false, "schema": {"type": "string", "enum": ["connection", "account"]}}, "range": {"name": "range", "description": "Range of the data to return", "in": "query", "required": true, "schema": {"type": "string", "enum": ["1h", "1d", "2d", "1m", "1y", "all"]}}, "extended_volume_statistics": {"name": "extended", "description": "Request for extended statistics. Including also 7 and 30 days volumes (default false)", "in": "query", "required": false, "schema": {"type": "boolean"}}, "custody_name": {"name": "custody", "description": "Custody name", "required": true, "in": "query", "schema": {"$ref": "#/components/schemas/custody_name"}}, "client_id": {"name": "client_id", "description": "API key client_id", "required": true, "in": "query", "schema": {"$ref": "#/components/schemas/client_id"}}, "security_key_name": {"name": "name", "description": "Name of security key, only alpha numeric chars allowed with - and _", "required": true, "in": "query", "schema": {"type": "string"}}, "security_key_id": {"name": "key_id", "description": "Security Key Id", "required": true, "in": "query", "schema": {"type": "integer"}}, "security_key_reset_code": {"name": "code", "description": "Security Key reset code", "required": true, "in": "query", "schema": {"type": "string"}}, "invalidate_token": {"name": "invalidate_token", "description": "If value is `true` all tokens created in current session are invalidated, default: `true`", "in": "query", "required": false, "schema": {"type": "boolean"}}, "self_trading_mode": {"name": "mode", "description": "Self trading prevention behavior: `reject_taker` (reject the incoming order), `cancel_maker` (cancel the matched order in the book)", "in": "query", "required": true, "schema": {"type": "string", "enum": ["reject_taker", "cancel_maker"]}}, "extended_to_subaccounts": {"name": "extended_to_subaccounts", "description": "If value is `true` trading is prevented between subaccounts of given account, otherwise they are treated separately", "in": "query", "required": true, "schema": {"type": "boolean"}}, "block_rfq_self_match_prevention": {"name": "block_rfq_self_match_prevention", "description": "When Block RFQ Self Match Prevention is enabled, it ensures that RFQs cannot be executed between accounts that belong to the same legal entity. This setting is independent of the general self-match prevention settings and must be configured separately.", "in": "query", "required": false, "schema": {"type": "boolean"}}, "request_id": {"name": "requestId", "description": "Request ID", "required": true, "in": "query", "schema": {"type": "string"}}, "balance": {"name": "balance", "description": "Current custody balance of the user", "in": "query", "schema": {"type": "number"}, "required": true}, "difference": {"name": "difference", "description": "Difference between current \"in exchange\" balance and current custody balance that happened due to the settlement.", "in": "query", "schema": {"type": "number"}, "required": true}, "jwt_recipient": {"name": "recipient", "description": "Recipient of the token", "schema": {"type": "string", "enum": ["zendesk"]}, "required": false, "in": "query"}, "external_id": {"name": "external_id", "description": "User ID in the external system. (i.e. in custodian system)", "required": true, "in": "query", "schema": {"$ref": "#/components/schemas/external_id"}}, "business_registration_number": {"name": "business_registration_number", "description": "The registration number of the company", "required": true, "in": "query", "schema": {"$ref": "#/components/schemas/business_registration_number"}}, "trading_products": {"name": "trading_products", "in": "query", "required": true, "description": "List of available trading products. Available products: perpetual, futures, options, future_combos, option_combos, spots", "schema": {"type": "array", "items": {"type": "string", "enum": ["perpetual", "futures", "options", "future_combos", "option_combos", "spots"]}}}, "withdrawal_policy_mode": {"name": "mode", "description": "Withdrawal Policy mode", "required": true, "in": "query", "schema": {"$ref": "#/components/schemas/withdrawal_policy_mode"}}, "withdrawal_policy_limit_bucket": {"name": "limit_bucket", "description": "Withdrawal Policy limit bucket", "required": true, "in": "query", "schema": {"$ref": "#/components/schemas/withdrawal_policy_limit_bucket"}}, "withdrawal_policy_category": {"name": "category", "description": "Withdrawal Policy category", "required": true, "in": "query", "schema": {"$ref": "#/components/schemas/withdrawal_policy_category"}}, "withdrawal_policy_amount": {"name": "amount", "description": "Amount or flag to use default value", "required": true, "in": "query", "schema": {"$ref": "#/components/schemas/withdrawal_policy_amount"}}, "simulated_positions_map": {"name": "simulated_positions", "required": false, "in": "query", "description": "Object with positions in following form: `{InstrumentName1: Position1, InstrumentName2: Position2...}`, for example `{\"BTC-PERPETUAL\": -1000.0}` (or corresponding URI-encoding for GET). For futures in USD, for options in base currency.", "schema": {"type": "string", "description": "JSON string containing: $key, $value"}}, "simulated_positions_map_base": {"name": "simulated_positions", "required": false, "in": "query", "description": "Object with positions in following form: `{InstrumentName1: Position1, InstrumentName2: Position2...}`, for example `{\"BTC-PERPETUAL\": -1.0}` (or corresponding URI-encoding for GET). Size in base currency.", "schema": {"type": "string", "description": "JSON string containing: $key, $value"}}, "add_positions": {"name": "add_positions", "required": false, "in": "query", "description": "If `true`, adds simulated positions to current positions, otherwise uses only simulated positions. By default `true`", "schema": {"type": "boolean"}}, "leg_ratio": {"name": "ratio", "required": true, "in": "query", "description": "Ratio of amount between legs", "schema": {"type": "integer"}}, "block_rfq_id": {"name": "block_rfq_id", "required": true, "in": "query", "description": "ID of the Block RFQ", "schema": {"type": "integer"}}, "optional_block_rfq_id": {"name": "block_rfq_id", "required": false, "in": "query", "description": "ID of the Block RFQ", "schema": {"type": "integer"}}, "block_rfq_label": {"name": "label", "description": "User defined label for the Block RFQ (maximum 64 characters)", "in": "query", "schema": {"type": "string"}, "required": false}, "block_rfq_amount": {"description": "This value multiplied by the ratio of a leg gives trade size on that leg.", "in": "query", "name": "amount", "required": true, "schema": {"$ref": "#/components/schemas/amount"}}, "block_rfq_legs": {"description": "List of legs used to create Block RFQ", "in": "query", "name": "legs", "required": true, "schema": {"type": "array", "items": {"type": "object", "description": "Array item with 3 properties"}}}, "block_rfq_hedge_leg": {"description": "Hedge leg of the Block RFQ. There is only one hedge leg allowed per Block RFQ", "in": "query", "name": "hedge", "required": false, "schema": {"type": "string", "description": "JSON string containing: instrument_name, direction, price, amount"}}, "block_rfq_trade_legs": {"description": "List of legs used to trade Block RFQ", "in": "query", "name": "legs", "required": true, "schema": {"type": "array", "items": {"type": "object", "description": "Array item with 3 properties"}}}, "block_rfq_legs_quote": {"description": "List of legs used for Block RFQ quote", "in": "query", "name": "legs", "required": true, "schema": {"type": "array", "items": {"type": "object", "description": "Array item with 4 properties"}}}, "block_rfq_hedge_leg_quote": {"description": "Hedge leg of the Block RFQ. There is only one hedge leg allowed per Block RFQ", "in": "query", "name": "hedge", "required": false, "schema": {"type": "string", "description": "JSON string containing: instrument_name, direction, price, amount"}}, "block_rfq_hedge_leg_trade": {"description": "Hedge leg of the Block RFQ. There is only one hedge leg allowed per Block RFQ", "in": "query", "name": "hedge", "required": false, "schema": {"type": "string", "description": "JSON string containing: instrument_name, direction, price, amount"}}, "block_rfq_quote_id": {"name": "block_rfq_quote_id", "required": false, "in": "query", "description": "ID of the Block RFQ quote", "schema": {"type": "integer"}}, "block_rfq_quote_label": {"name": "label", "description": "User defined label for the Block RFQ quote (maximum 64 characters). Used to identify quotes of a selected Block RFQ", "in": "query", "schema": {"type": "string"}, "required": false}, "hedge_leg_price": {"name": "price", "description": "Hedge leg price", "in": "query", "schema": {"type": "number"}, "required": true}, "block_rfq_makers": {"name": "makers", "description": "List of targeted Block RFQ makers. Only those makers will be notified about created Block RFQ. If the list is empty, all available makers will be targeted.", "in": "query", "schema": {"type": "array", "items": {"type": "string"}}, "required": false}, "execution_instruction": {"name": "execution_instruction", "required": false, "in": "query", "description": "Execution instruction of the quote. Default - `any_part_of` `\"all_or_none (AON)\"` - The quote can only be filled entirely or not at all, ensuring that its amount matches the amount specified in the Block RFQ. Additionally, 'all_or_none' quotes have priority over 'any_part_of' quotes at the same price level. `\"any_part_of (APO)\"` - The quote can be filled either partially or fully, with the filled amount potentially being less than the Block RFQ amount.", "schema": {"type": "string", "enum": ["all_or_none", "any_part_of"]}}, "block_rfq_count": {"name": "count", "description": "Count of Block RFQs returned, maximum - `1000`", "in": "query", "required": false, "schema": {"type": "integer", "maximum": 1000, "minimum": 1}}, "block_trade_count": {"name": "count", "description": "Count of Block Trades returned, maximum - `101`", "in": "query", "required": false, "schema": {"type": "integer", "maximum": 101, "minimum": 1}}, "transaction_log_count": {"name": "count", "description": "Count of transaction log entries returned, default - `100`, maximum - `250`", "in": "query", "required": false, "schema": {"type": "integer", "maximum": 250, "minimum": 1}}, "block_rfq_continuation": {"name": "continuation", "description": "The continuation parameter specifies the starting point for fetching historical Block RFQs. When provided, the endpoint returns Block RFQs, starting from the specified ID and continuing backward (e.g., if `continuation` is 50, results will include Block RFQs of ID 49, 48, etc.)", "in": "query", "required": false, "schema": {"type": "integer"}}, "block_rfq_string_continuation": {"name": "continuation", "description": "Continuation token for pagination. Consists of `timestamp` and `block_rfq_id`.", "in": "query", "required": false, "schema": {"type": "string", "example": "1738050297271:103"}}, "block_rfq_state": {"name": "state", "description": "State of Block RFQ", "in": "query", "required": false, "schema": {"type": "string", "enum": ["open", "filled", "traded", "cancelled", "expired", "closed"]}}, "block_rfq_role": {"name": "role", "description": "Role of the user in Block RFQ. When the `any` role is selected, the method returns all Block RFQs in which the user has participated, either as the `taker` or as a `maker`", "in": "query", "required": false, "schema": {"type": "string", "enum": ["any", "taker", "maker"]}}, "block_rfq_taker_direction": {"description": "Direction of the trade from the taker perspective", "in": "query", "name": "direction", "required": true, "schema": {"$ref": "#/components/schemas/direction"}}, "block_rfq_leg_direction": {"description": "Direction of selected leg. Must match the direction of the corresponding leg in the Block RFQ", "in": "query", "name": "direction", "required": true, "schema": {"$ref": "#/components/schemas/direction"}}, "legs_for_prices": {"description": "List of legs for which the prices will be calculated", "in": "query", "name": "legs", "required": true, "schema": {"type": "array", "items": {"type": "object", "description": "Array item with 3 properties"}}}, "legs_price": {"name": "price", "description": "Price for the whole leg structure", "in": "query", "schema": {"type": "number"}, "required": true}, "deposit_id": {"description": "Id of the deposit", "in": "query", "name": "deposit_id", "required": true, "schema": {"type": "string", "description": "JSON string containing: currency, user_id, address, tx_hash"}}, "originator": {"description": "Information about the originator of the deposit", "in": "query", "name": "originator", "required": true, "schema": {"type": "string", "description": "JSON string containing: is_personal, company_name, first_name, last_name, address"}}, "tx_hash": {"name": "tx_hash", "description": "Transaction id in a proper format for the currency", "in": "query", "required": true, "schema": {"type": "string"}, "example": "1b1fb5568515e2b79503501e3d3680b2d0838d5dfc2d15a04eb8cd9fbbe0b572"}, "is_personal": {"name": "is_personal", "description": "If the user is the originator of the deposit", "in": "query", "required": true, "schema": {"type": "boolean"}}, "company_name": {"name": "company_name", "description": "Company name of the originator if the originator is a legal entity", "in": "query", "required": true, "schema": {"type": "string"}}, "first_name": {"name": "first_name", "description": "If the user is the originator of the deposit", "in": "query", "required": true, "schema": {"type": "string"}}, "last_name": {"name": "last_name", "description": "Last name of the originator if the originator is a person", "in": "query", "required": true, "schema": {"type": "string"}}, "address": {"name": "address", "description": "Geographical address of the originator", "in": "query", "required": true, "schema": {"type": "string"}}, "optional_subbacount_id": {"name": "subaccount_id", "description": "Id of a subaccount", "in": "query", "required": false, "schema": {"type": "integer", "example": 9}}, "historical": {"name": "historical", "description": "Determines whether historical trade and order records should be retrieved. `false` (default): Returns recent records: orders for 30 min, trades for 24h. `true`: Fetches historical records, available after a short delay due to indexing. Recent data is not included. **📖 Related Support Article:** Accessing historical trades and orders using API", "in": "query", "required": false, "schema": {"type": "boolean"}}, "with_continuation": {"name": "with_continuation", "description": "When set to true, the API response format changes from a simple list of orders to an object containing the orders and a continuation token.", "in": "query", "required": false, "schema": {"type": "boolean"}}, "disclosed": {"name": "disclosed", "description": "Determines whether the RFQ is non-anonymous, revealing both taker and maker aliases. It can be set to `false` (anonymous mode) only when at least 5 makers are targeted. Default value is `true`.", "in": "query", "required": false, "schema": {"type": "boolean"}}, "custody_settlement_id": {"name": "id", "description": "Unique identifier of the settlement.", "in": "query", "required": true, "schema": {"type": "string", "example": "dec42708-2ec6-4cdd-8f9d-d49bbe94d0aa"}}, "custody_settlement_review_reason": {"name": "reason", "description": "Optional reason provided for ignoring or rejecting the instruction", "in": "query", "required": false, "schema": {"type": "string", "example": "Balance discrepancy"}}, "custody_settlement_review_action": {"name": "action", "description": "Action taken by the custodian", "in": "query", "required": true, "schema": {"type": "string", "enum": ["confirm", "ignore", "reject"]}}, "custody_settlement_review": {"description": "List of review instructions for each currency", "in": "query", "name": "currencies", "required": true, "schema": {"type": "string", "description": "JSON string containing: currency, action, reason"}}, "expected_custody_balance": {"description": "Expected custody balance of the user", "name": "expected_custody_balance", "in": "query", "required": true, "schema": {"type": "number", "example": 2.341}}, "custody_settlement_amount": {"name": "amount", "description": "Amount to be settled", "in": "query", "required": true, "schema": {"type": "number", "example": 2.341}}, "custody_balance": {"description": "Balance of the user in the custodian system.", "in": "query", "name": "custody_balance", "required": true, "schema": {"type": "number"}}, "custody_settlement_initiate": {"description": "Request settlement for the given currencies", "in": "query", "name": "currencies", "required": true, "schema": {"type": "string", "description": "JSON string containing: currency, custody_balance"}}, "custody_currency": {"name": "currency", "description": "The currency supported by custodian and exchange", "in": "query", "required": true, "schema": {"type": "string"}}, "expires_at": {"name": "expires_at", "description": "The timestamp when the quote expires (milliseconds since the Unix epoch)", "required": false, "in": "query", "schema": {"type": "integer", "example": 1745312540321}}, "address_tag": {"name": "tag", "description": "Tag for XRP addresses", "in": "query", "schema": {"type": "string"}, "required": false}, "unhosted_wallet": {"name": "unhosted", "description": "Indicates if the address belongs to an unhosted wallet", "in": "query", "schema": {"type": "boolean"}, "required": true}, "wallet_currency_optional": {"name": "currency", "description": "The currency symbol", "required": false, "in": "query", "schema": {"$ref": "#/components/schemas/wallet_currency"}}, "currency_address_optional": {"name": "address", "description": "Address in currency format", "in": "query", "schema": {"type": "string"}, "required": false}, "created_before": {"name": "created_before", "description": "Filter by creation timestamp (before)", "in": "query", "schema": {"$ref": "#/components/schemas/timestamp"}, "required": false}, "created_after": {"name": "created_after", "description": "Filter by creation timestamp (after)", "in": "query", "schema": {"$ref": "#/components/schemas/timestamp"}, "required": false}, "updated_before": {"name": "updated_before", "description": "Filter by update timestamp (before)", "in": "query", "schema": {"$ref": "#/components/schemas/timestamp"}, "required": false}, "updated_after": {"name": "updated_after", "description": "Filter by update timestamp (after)", "in": "query", "schema": {"$ref": "#/components/schemas/timestamp"}, "required": false}, "personal_wallet_optional": {"name": "personal", "description": "Filter by personal wallet flag", "in": "query", "schema": {"type": "boolean"}, "required": false}, "unhosted_wallet_optional": {"name": "unhosted", "description": "Filter by unhosted wallet flag", "in": "query", "schema": {"type": "boolean"}, "required": false}, "beneficiary_vasp_name_optional": {"name": "beneficiary_vasp_name", "description": "Filter by beneficiary VASP name", "in": "query", "schema": {"$ref": "#/components/schemas/beneficiary_vasp_name"}, "required": false}, "beneficiary_vasp_did_optional": {"name": "beneficiary_vasp_did", "description": "Filter by beneficiary VASP DID", "in": "query", "schema": {"$ref": "#/components/schemas/beneficiary_vasp_did"}, "required": false}, "limit_optional": {"name": "limit", "description": "Maximum number of results to return", "in": "query", "schema": {"type": "integer", "minimum": 1, "maximum": 1000, "default": 100}, "required": false}, "trade_allocations": {"name": "trade_allocations", "description": "List of allocations for Block RFQ pre-allocation. Allows to split amount between different (sub)accounts or broker clients. Each allocation must specify either `user_id` (for direct allocation) or `client_info` object (for broker allocation), and amount.", "in": "query", "required": false, "schema": {"type": "array", "items": {"type": "object", "description": "Array item with 3 properties"}}}}, "schemas": {"custody_account": {"description": "Custody account", "type": "object", "properties": {"currency": {"$ref": "#/components/schemas/currency"}, "name": {"$ref": "#/components/schemas/custody_name"}, "balance": {"$ref": "#/components/schemas/currency_amount", "description": "Balance available on custody account"}, "pending_withdrawal_balance": {"$ref": "#/components/schemas/currency_amount", "description": "Pending balance transferred from trading account to custody account"}, "auto_deposit": {"description": "When set to 'true' all new funds added to custody balance will be automatically transferred to trading balance", "type": "boolean"}, "client_id": {"description": "API key 'client id' used to reserve/release funds in custody platform, requires scope 'custody:read_write'", "type": "string"}, "external_id": {"$ref": "#/components/schemas/external_id"}, "withdrawal_address": {"description": "Address that is used for withdrawals", "type": "string"}, "withdrawal_address_change": {"description": "UNIX timestamp after when new withdrawal address will be used for withdrawals", "type": "number"}, "pending_withdrawal_addres": {"description": "New withdrawal address that will be used after 'withdrawal_address_change'", "type": "string"}, "deposit_address": {"description": "Address that can be used for deposits", "type": "string"}}, "required": ["currency", "name", "pending_withdrawal_balance"]}, "custody_log": {"description": "Custody log", "type": "object", "properties": {"currency": {"$ref": "#/components/schemas/currency"}, "request_id": {"description": "Request ID", "type": "string"}, "request": {"description": "Request type", "type": "string", "enum": ["add_funds", "remove_funds", "deposit_funds", "withdraw_funds"]}, "success": {"description": "When request was successful set to `true`", "type": "boolean"}, "timestamp": {"$ref": "#/components/schemas/timestamp"}, "amount": {"$ref": "#/components/schemas/currency_amount"}}, "required": ["currency", "request_id", "request", "success", "timestamp"]}, "book_summary": {"properties": {"instrument_name": {"$ref": "#/components/schemas/instrument_name"}, "high": {"description": "Price of the 24h highest trade", "example": 7022.89, "type": "number"}, "low": {"description": "Price of the 24h lowest trade, `null` if there weren't any trades", "example": 7022.89, "type": "number"}, "base_currency": {"description": "Base currency", "example": "ETH", "type": "string"}, "quote_currency": {"description": "Quote currency", "example": "USD", "type": "string"}, "volume": {"description": "The total 24h traded volume (in base currency)", "example": 223, "type": "number"}, "bid_price": {"description": "The current best bid price, `null` if there aren't any bids", "example": 7022.89, "type": "number"}, "ask_price": {"description": "The current best ask price, `null` if there aren't any asks", "example": 7022.89, "type": "number"}, "mid_price": {"description": "The average of the best bid and ask, `null` if there aren't any asks or bids", "example": 7022.89, "type": "number"}, "mark_price": {"description": "The current instrument market price", "example": 7022.89, "type": "number"}, "last": {"description": "The price of the latest trade, `null` if there weren't any trades", "example": 7022.89, "type": "number"}, "open_interest": {"description": "Optional (only for derivatives). The total amount of outstanding contracts in the corresponding amount units. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.", "example": 0.5, "type": "number"}, "creation_timestamp": {"$ref": "#/components/schemas/timestamp"}, "estimated_delivery_price": {"description": "Optional (only for derivatives). Estimated delivery price for the market. For more details, see Contract Specification > General Documentation > Expiration Price.", "example": 11628.81, "type": "number"}, "volume_usd": {"description": "Volume in USD", "type": "number"}, "volume_notional": {"description": "Volume in quote currency (futures and spots only)", "type": "number"}, "current_funding": {"description": "Current funding (perpetual only)", "type": "number", "example": 0.12344}, "funding_8h": {"description": "Funding 8h (perpetual only)", "type": "number"}, "mark_iv": {"$ref": "#/components/schemas/mark_iv"}, "interest_rate": {"description": "Interest rate used in implied volatility calculations (options only)", "example": 0, "type": "number"}, "underlying_index": {"description": "Name of the underlying future, or `'index_price'` (options only)", "example": "index_price", "type": "string"}, "underlying_price": {"description": "underlying price for implied volatility calculations (options only)", "example": 6745.34, "type": "number"}, "price_change": {"description": "24-hour price change expressed as a percentage, `null` if there weren't any trades", "example": 10.23, "type": "number"}}, "required": ["instrument_name", "high", "low", "base_currency", "quote_currency", "volume", "bid_price", "ask_price", "mid_price", "mark_price", "last", "open_interest", "creation_timestamp"], "type": "object"}, "position": {"type": "object", "properties": {"instrument_name": {"$ref": "#/components/schemas/instrument_name"}, "kind": {"$ref": "#/components/schemas/kind"}, "average_price": {"description": "Average price of trades that built this position", "type": "number"}, "direction": {"$ref": "#/components/schemas/position_direction"}, "mark_price": {"description": "Current mark price for position's instrument", "type": "number"}, "delta": {"description": "Delta parameter", "type": "number"}, "gamma": {"description": "Only for options, Gamma parameter", "type": "number"}, "vega": {"description": "Only for options, Vega parameter", "type": "number"}, "theta": {"description": "Only for options, Theta parameter", "type": "number"}, "index_price": {"description": "Current index price", "type": "number"}, "initial_margin": {"description": "Initial margin", "type": "number"}, "maintenance_margin": {"description": "Maintenance margin", "type": "number"}, "settlement_price": {"description": "Optional (not added for spot). Last settlement price for position's instrument 0 if instrument wasn't settled yet", "type": "number"}, "total_profit_loss": {"description": "Profit or loss from position", "type": "number"}, "floating_profit_loss": {"description": "Floating profit or loss", "type": "number"}, "realized_profit_loss": {"description": "Realized profit or loss", "type": "number"}, "size": {"description": "Position size for futures size in quote currency (e.g. USD), for options size is in base currency (e.g. BTC)", "type": "number"}, "size_currency": {"description": "Only for futures, position size in base currency", "type": "number"}, "average_price_usd": {"description": "Only for options, average price in USD", "type": "number"}, "floating_profit_loss_usd": {"description": "Only for options, floating profit or loss in USD", "type": "number"}, "leverage": {"description": "Current available leverage for future position", "type": "integer"}, "realized_funding": {"description": "Realized Funding in current session included in session realized profit or loss, only for positions of perpetual instruments", "type": "number"}, "interest_value": {"description": "Value used to calculate `realized_funding` (perpetual only)", "type": "number"}}, "required": ["instrument_name", "kind", "average_price", "direction", "mark_price", "delta", "index_price", "initial_margin", "maintenance_margin", "settlement_price", "total_profit_loss", "floating_profit_loss", "size"]}, "position_with_elp": {"allOf": [{"$ref": "#/components/schemas/position"}, {"properties": {"estimated_liquidation_price": {"description": "Estimated liquidation price, added only for futures, for users with `segregated_sm` margin model", "type": "number"}, "open_orders_margin": {"description": "Open orders margin", "type": "number"}}, "required": ["estimated_liquidation_price", "open_orders_margin"]}]}, "transfer_item": {"type": "object", "properties": {"id": {"$ref": "#/components/schemas/transfer_id"}, "created_timestamp": {"$ref": "#/components/schemas/timestamp"}, "type": {"$ref": "#/components/schemas/transfer_type"}, "currency": {"$ref": "#/components/schemas/currency"}, "amount": {"$ref": "#/components/schemas/currency_amount"}, "other_side": {"$ref": "#/components/schemas/transfer_other_side"}, "state": {"$ref": "#/components/schemas/transfer_state"}, "direction": {"$ref": "#/components/schemas/transfer_direction"}, "updated_timestamp": {"$ref": "#/components/schemas/timestamp"}}, "required": ["currency", "id", "type", "amount", "state", "other_side", "updated_timestamp", "created_timestamp"]}, "address_book_item": {"type": "object", "properties": {"currency": {"$ref": "#/components/schemas/wallet_currency"}, "address": {"$ref": "#/components/schemas/currency_address"}, "creation_timestamp": {"$ref": "#/components/schemas/timestamp"}, "type": {"$ref": "#/components/schemas/address_book_type"}, "label": {"$ref": "#/components/schemas/address_label"}, "beneficiary_vasp_name": {"$ref": "#/components/schemas/beneficiary_vasp_name"}, "beneficiary_vasp_did": {"$ref": "#/components/schemas/beneficiary_vasp_did"}, "beneficiary_vasp_website": {"$ref": "#/components/schemas/beneficiary_vasp_website"}, "beneficiary_first_name": {"$ref": "#/components/schemas/beneficiary_first_name"}, "beneficiary_last_name": {"$ref": "#/components/schemas/beneficiary_last_name"}, "beneficiary_company_name": {"$ref": "#/components/schemas/beneficiary_company_name"}, "beneficiary_address": {"$ref": "#/components/schemas/beneficiary_address"}, "agreed": {"$ref": "#/components/schemas/agree_to_share_with_3rd_party"}, "personal": {"$ref": "#/components/schemas/personal_wallet"}, "info_required": {"$ref": "#/components/schemas/address_info_required"}, "status": {"$ref": "#/components/schemas/status"}, "waiting_timestamp": {"$ref": "#/components/schemas/waiting_timestamp"}, "requires_confirmation": {"$ref": "#/components/schemas/requires_confirmation"}, "requires_confirmation_change": {"$ref": "#/components/schemas/requires_confirmation_change"}}, "required": ["currency", "address", "creation_timestamp"]}, "address_beneficiary_item": {"type": "object", "properties": {"currency": {"$ref": "#/components/schemas/currency"}, "address": {"$ref": "#/components/schemas/currency_address"}, "tag": {"type": "string", "description": "Tag for XRP addresses (optional)", "nullable": true}, "user_id": {"$ref": "#/components/schemas/user_id"}, "agreed": {"$ref": "#/components/schemas/agree_to_share_with_3rd_party"}, "personal": {"$ref": "#/components/schemas/personal_wallet"}, "unhosted": {"$ref": "#/components/schemas/unhosted_wallet"}, "beneficiary_vasp_name": {"$ref": "#/components/schemas/beneficiary_vasp_name"}, "beneficiary_vasp_did": {"$ref": "#/components/schemas/beneficiary_vasp_did"}, "beneficiary_vasp_website": {"$ref": "#/components/schemas/beneficiary_vasp_website"}, "beneficiary_first_name": {"$ref": "#/components/schemas/beneficiary_first_name"}, "beneficiary_last_name": {"$ref": "#/components/schemas/beneficiary_last_name"}, "beneficiary_company_name": {"$ref": "#/components/schemas/beneficiary_company_name"}, "beneficiary_address": {"$ref": "#/components/schemas/beneficiary_address"}, "created": {"$ref": "#/components/schemas/timestamp"}, "updated": {"$ref": "#/components/schemas/timestamp"}}, "required": ["currency", "address", "user_id", "agreed", "personal", "unhosted", "beneficiary_vasp_name", "beneficiary_vasp_did", "beneficiary_address", "created", "updated"]}, "address_ownership_item": {"type": "object", "properties": {"owner_vasp_did": {"$ref": "#/components/schemas/did"}, "address": {"$ref": "#/components/schemas/currency_address"}, "address_type": {"$ref": "#/components/schemas/currency_address_type"}, "asset": {"$ref": "#/components/schemas/currency"}, "source": {"$ref": "#/components/schemas/source"}}, "required": ["owner_vasp_did", "address", "address_type", "asset", "source"]}, "vasp_item": {"type": "object", "properties": {"did": {"$ref": "#/components/schemas/did"}, "jurisdictions": {"$ref": "#/components/schemas/jurisdictions"}, "name": {"$ref": "#/components/schemas/vasp_name"}}, "required": ["did", "name"]}, "withdrawal": {"type": "object", "properties": {"address": {"$ref": "#/components/schemas/currency_address"}, "amount": {"$ref": "#/components/schemas/currency_amount"}, "confirmed_timestamp": {"type": "integer", "example": 1536569522277, "nullable": true, "description": "The timestamp (milliseconds since the Unix epoch) of withdrawal confirmation, `null` when not confirmed"}, "created_timestamp": {"$ref": "#/components/schemas/timestamp"}, "currency": {"$ref": "#/components/schemas/currency"}, "fee": {"$ref": "#/components/schemas/fee"}, "id": {"type": "integer", "example": 1, "description": "Withdrawal id in Deribit system"}, "priority": {"type": "number", "example": 1.0, "description": "Id of priority level"}, "state": {"$ref": "#/components/schemas/withdrawal_state"}, "transaction_id": {"$ref": "#/components/schemas/currency_transaction_id"}, "updated_timestamp": {"$ref": "#/components/schemas/timestamp"}}, "required": ["currency", "address", "amount", "state", "transaction_id", "updated_timestamp"]}, "deposit": {"type": "object", "properties": {"currency": {"$ref": "#/components/schemas/currency"}, "address": {"$ref": "#/components/schemas/currency_address"}, "amount": {"$ref": "#/components/schemas/currency_amount"}, "state": {"$ref": "#/components/schemas/deposit_state"}, "transaction_id": {"$ref": "#/components/schemas/currency_transaction_id"}, "source_address": {"$ref": "#/components/schemas/currency_address"}, "received_timestamp": {"$ref": "#/components/schemas/timestamp"}, "updated_timestamp": {"$ref": "#/components/schemas/timestamp"}, "note": {"type": "string"}, "clearance_state": {"$ref": "#/components/schemas/clearance_state"}, "refund_transaction_id": {"$ref": "#/components/schemas/currency_transaction_id"}}, "required": ["currency", "address", "amount", "state", "transaction_id", "received_timestamp", "updated_timestamp"]}, "portfolio": {"type": "object", "properties": {"btc": {"$ref": "#/components/schemas/currency_portfolio"}, "eth": {"$ref": "#/components/schemas/currency_portfolio"}}, "required": ["btc", "eth"]}, "trades_volumes": {"type": "object", "properties": {"currency": {"$ref": "#/components/schemas/currency"}, "calls_volume": {"description": "Total 24h trade volume for call options.", "example": 20.1, "type": "number"}, "puts_volume": {"description": "Total 24h trade volume for put options.", "example": 60.2, "type": "number"}, "futures_volume": {"description": "Total 24h trade volume for futures.", "example": 30.5178, "type": "number"}, "spot_volume": {"description": "Total 24h trade for spot.", "example": 11.6, "type": "number"}, "calls_volume_7d": {"description": "Total 7d trade volume for call options.", "example": 75.6, "type": "number"}, "puts_volume_7d": {"description": "Total 7d trade volume for put options.", "example": 356.9, "type": "number"}, "futures_volume_7d": {"description": "Total 7d trade volume for futures.", "example": 213.8841, "type": "number"}, "spot_volume_7d": {"description": "Total 7d trade for spot.", "example": 64.8, "type": "number"}, "calls_volume_30d": {"description": "Total 30d trade volume for call options.", "example": 547.3, "type": "number"}, "puts_volume_30d": {"description": "Total 30d trade volume for put options.", "example": 785.5, "type": "number"}, "futures_volume_30d": {"description": "Total 30d trade volume for futures.", "example": 998.2128, "type": "number"}, "spot_volume_30d": {"description": "Total 30d trade for spot.", "example": 310.5, "type": "number"}}, "required": ["currency", "futures_volume", "puts_volume", "calls_volume"]}, "currency_portfolio": {"type": "object", "properties": {"margin_balance": {"type": "number"}, "currency": {"type": "string", "enum": ["btc", "eth"]}, "maintenance_margin": {"type": "number"}, "initial_margin": {"type": "number"}, "equity": {"type": "number"}, "balance": {"type": "number"}, "available_withdrawal_funds": {"type": "number"}, "available_funds": {"type": "number"}, "additional_reserve": {"$ref": "#/components/schemas/additional_reserve"}, "spot_reserve": {"type": "number"}}, "required": ["margin_balance", "currency", "maintenance_margin", "initial_margin", "equity", "balance", "available_withdrawal_funds", "available_funds", "additional_reserve", "spot_reserve"]}, "api_key": {"type": "object", "properties": {"id": {"$ref": "#/components/schemas/key_id"}, "timestamp": {"$ref": "#/components/schemas/timestamp"}, "client_id": {"$ref": "#/components/schemas/client_id"}, "client_secret": {"$ref": "#/components/schemas/client_secret"}, "public_key": {"$ref": "#/components/schemas/public_key"}, "max_scope": {"$ref": "#/components/schemas/max_scope"}, "enabled": {"$ref": "#/components/schemas/api_key_enabled"}, "default": {"$ref": "#/components/schemas/api_key_default"}, "name": {"$ref": "#/components/schemas/api_key_name"}, "enabled_features": {"$ref": "#/components/schemas/api_key_features"}, "ip_whitelist": {"description": "List of IP addresses whitelisted for a selected key", "type": "array"}}, "required": ["id", "timestamp", "client_id", "client_secret", "max_scope", "default"]}, "security_key": {"type": "object", "properties": {"id": {"$ref": "#/components/schemas/security_key_id"}, "name": {"$ref": "#/components/schemas/security_key_name"}, "type": {"$ref": "#/components/schemas/security_key_type"}, "assignments": {"$ref": "#/components/schemas/security_key_assignments"}, "timestamp": {"$ref": "#/components/schemas/security_key_timestamp"}, "last_used": {"$ref": "#/components/schemas/security_key_last_used"}}, "required": ["id", "type", "name", "assignments", "timestamp", "last_used"]}, "access_log": {"type": "object", "properties": {"id": {"$ref": "#/components/schemas/id"}, "ip": {"description": "IP address of source that generated action", "type": "string"}, "timestamp": {"$ref": "#/components/schemas/timestamp"}, "country": {"description": "Country where the IP address is registered (estimated)", "type": "string"}, "city": {"description": "City where the IP address is registered (estimated)", "type": "string"}, "log": {"description": "Action description, values: `changed_email` - email was changed; `changed_password` - password was changed; `disabled_tfa` - TFA was disabled; `enabled_tfa` - TFA was enabled, `success` - successful login; `failure` - login failure; `enabled_subaccount_login` - login was enabled for subaccount (in `data` - subaccount uid); `disabled_subaccount_login` - login was disabled for subbaccount (in `data` - subbacount uid);`new_api_key` - API key was created (in `data` key client id); `removed_api_key` - API key was removed (in `data` key client id); `changed_scope` - scope of API key was changed (in `data` key client id); `changed_whitelist` - whitelist of API key was edited (in `data` key client id); `disabled_api_key` - API key was disabled (in `data` key client id); `enabled_api_key` - API key was enabled (in `data` key client id); `reset_api_key` - API key was reset (in `data` key client id)", "type": "string"}, "data": {"description": "Optional, additional information about action, type depends on `log` value", "oneOf": [{"type": "object"}, {"type": "string"}]}}, "required": ["id", "ip", "timestamp", "country", "city", "log"]}, "order": {"type": "object", "properties": {"order_id": {"$ref": "#/components/schemas/order_id"}, "order_state": {"$ref": "#/components/schemas/order_state"}, "order_type": {"$ref": "#/components/schemas/order_type"}, "original_order_type": {"$ref": "#/components/schemas/original_order_type"}, "time_in_force": {"$ref": "#/components/schemas/time_in_force"}, "is_rebalance": {"description": "Optional (only for spot). `true` if order was automatically created during cross-collateral balance restoration", "type": "boolean"}, "is_liquidation": {"description": "Optional (not added for spot). `true` if order was automatically created during liquidation", "type": "boolean"}, "instrument_name": {"$ref": "#/components/schemas/instrument_name"}, "creation_timestamp": {"$ref": "#/components/schemas/timestamp"}, "last_update_timestamp": {"$ref": "#/components/schemas/timestamp"}, "direction": {"$ref": "#/components/schemas/direction"}, "price": {"$ref": "#/components/schemas/open_order_price"}, "label": {"$ref": "#/components/schemas/label"}, "post_only": {"$ref": "#/components/schemas/post_only"}, "reject_post_only": {"$ref": "#/components/schemas/reject_post_only"}, "reduce_only": {"$ref": "#/components/schemas/reduce_only"}, "api": {"$ref": "#/components/schemas/api"}, "web": {"$ref": "#/components/schemas/web"}, "mobile": {"$ref": "#/components/schemas/mobile"}, "refresh_amount": {"$ref": "#/components/schemas/refresh_amount"}, "display_amount": {"$ref": "#/components/schemas/display_amount"}, "amount": {"$ref": "#/components/schemas/amount"}, "contracts": {"$ref": "#/components/schemas/contracts"}, "filled_amount": {"$ref": "#/components/schemas/filled_amount"}, "average_price": {"$ref": "#/components/schemas/average_price"}, "advanced": {"$ref": "#/components/schemas/advanced"}, "implv": {"$ref": "#/components/schemas/implv"}, "usd": {"$ref": "#/components/schemas/usd"}, "triggered": {"$ref": "#/components/schemas/triggered"}, "trigger": {"$ref": "#/components/schemas/trigger"}, "trigger_price": {"$ref": "#/components/schemas/trigger_price"}, "trigger_offset": {"$ref": "#/components/schemas/trigger_offset"}, "trigger_reference_price": {"$ref": "#/components/schemas/trigger_reference_price"}, "block_trade": {"$ref": "#/components/schemas/block_trade_order"}, "mmp": {"type": "boolean", "description": "`true` if the order is a MMP order, otherwise `false`."}, "risk_reducing": {"type": "boolean", "description": "`true` if the order is marked by the platform as a risk reducing order (can apply only to orders placed by PM users), otherwise `false`."}, "replaced": {"type": "boolean", "description": "`true` if the order was edited (by user or - in case of advanced options orders - by pricing engine), otherwise `false`."}, "auto_replaced": {"type": "boolean", "description": "Options, advanced orders only - `true` if last modification of the order was performed by the pricing engine, otherwise `false`."}, "quote": {"type": "boolean", "description": "If order is a quote. Present only if true."}, "mmp_group": {"type": "string", "description": "Name of the MMP group supplied in the `private/mass_quote` request. Only present for quote orders."}, "quote_set_id": {"type": "string", "description": "Identifier of the QuoteSet supplied in the `private/mass_quote` request. Only present for quote orders."}, "quote_id": {"type": "string", "description": "The same QuoteID as supplied in the `private/mass_quote` request. Only present for quote orders."}, "trigger_order_id": {"description": "Id of the trigger order that created the order (Only for orders that were created by triggered orders).", "type": "string", "example": "SLIB-370"}, "app_name": {"description": "The name of the application that placed the order on behalf of the user (optional).", "type": "string", "example": "Example Application"}, "mmp_cancelled": {"description": "`true` if order was cancelled by mmp trigger (optional)", "type": "boolean", "example": true}, "cancel_reason": {"$ref": "#/components/schemas/cancel_reason"}, "oto_order_ids": {"description": "The Ids of the orders that will be triggered if the order is filled", "type": "array", "items": {"description": "Order Id", "$ref": "#/components/schemas/order_id"}}, "trigger_fill_condition": {"$ref": "#/components/schemas/trigger_fill_condition"}, "oco_ref": {"$ref": "#/components/schemas/oco_ref"}, "primary_order_id": {"description": "ID of the order that triggered this order.", "$ref": "#/components/schemas/order_id"}, "is_secondary_oto": {"$ref": "#/components/schemas/is_secondary_oto"}, "is_primary_otoco": {"type": "boolean", "description": "`true` if the order is an order that can trigger an OCO pair, otherwise not present."}}, "required": ["order_id", "order_state", "order_type", "time_in_force", "creation_timestamp", "last_update_timestamp", "direction", "price", "label", "post_only", "api"]}, "orders": {"type": "array", "items": {"$ref": "#/components/schemas/order"}}, "price_index": {"type": "string", "example": "btc_usdc", "description": "Name of price index that is used for this instrument"}, "trigger_order_history_record": {"type": "object", "properties": {"timestamp": {"$ref": "#/components/schemas/timestamp"}, "trigger": {"$ref": "#/components/schemas/trigger"}, "trigger_price": {"$ref": "#/components/schemas/trigger_price"}, "trigger_offset": {"$ref": "#/components/schemas/trigger_offset"}, "trigger_order_id": {"type": "string", "example": "SLTB-187015", "description": "Id of the user order used for the trigger-order reference before triggering"}, "order_id": {"$ref": "#/components/schemas/order_id"}, "order_state": {"$ref": "#/components/schemas/order_state_stop"}, "instrument_name": {"$ref": "#/components/schemas/instrument_name"}, "request": {"type": "string", "example": "trigger:order", "description": "Type of last request performed on the trigger order by user or system. `\"cancel\"` - when order was cancelled, `\"trigger:order\"` - when trigger order spawned market or limit order after being triggered"}, "direction": {"$ref": "#/components/schemas/direction"}, "price": {"$ref": "#/components/schemas/price"}, "amount": {"$ref": "#/components/schemas/amount"}, "last_update_timestamp": {"$ref": "#/components/schemas/timestamp"}, "reduce_only": {"$ref": "#/components/schemas/reduce_only"}, "post_only": {"$ref": "#/components/schemas/post_only"}, "order_type": {"description": "Requested order type: `\"limit` or `\"market\"`", "type": "string", "enum": ["limit", "market"]}, "label": {"$ref": "#/components/schemas/label_presentation"}, "is_secondary_oto": {"$ref": "#/components/schemas/is_secondary_oto"}, "oco_ref": {"$ref": "#/components/schemas/oco_ref"}, "source": {"type": "string", "example": "api", "description": "Source of the order that is linked to the trigger order."}}, "required": ["trigger", "timestamp", "trigger_price", "trigger_order_id", "order_state", "request", "post_only", "order_type", "price", "order_id", "instrument_name", "amount", "direction", "reduce_only"]}, "settlement": {"type": "object", "properties": {"funding": {"description": "funding (in base currency ; settlement for perpetual product only)", "example": -2.511e-06, "type": "number"}, "funded": {"description": "funded amount (bankruptcy only)", "example": 0, "type": "number"}, "index_price": {"description": "underlying index price at time of event (in quote currency; settlement and delivery only)", "example": 11008.37, "type": "number"}, "instrument_name": {"description": "instrument name (settlement and delivery only)", "example": "BTC-30MAR18", "type": "string"}, "mark_price": {"description": "mark price for at the settlement time (in quote currency; settlement and delivery only)", "example": 11000, "type": "number"}, "position": {"description": "position size (in quote currency; settlement and delivery only)", "example": 1000, "type": "number"}, "profit_loss": {"description": "profit and loss (in base currency; settlement and delivery only)", "example": 0, "type": "number"}, "session_bankruptcy": {"description": "value of session bankruptcy (in base currency; bankruptcy only)", "example": 0.001160788, "type": "number"}, "session_profit_loss": {"description": "total value of session profit and losses (in base currency)", "example": 0.001160788, "type": "number"}, "session_tax": {"description": "total amount of paid taxes/fees (in base currency; bankruptcy only)", "example": -0.001160788, "type": "number"}, "session_tax_rate": {"description": "rate of paid taxes/fees (in base currency; bankruptcy only)", "example": 0.000103333, "type": "number"}, "socialized": {"description": "the amount of the socialized losses (in base currency; bankruptcy only)", "example": -0.001160788, "type": "number"}, "timestamp": {"$ref": "#/components/schemas/timestamp"}, "type": {"$ref": "#/components/schemas/settlement_type"}}, "required": ["type", "timestamp", "session_profit_loss", "position", "instrument_name", "index_price", "funding"]}, "public_trade": {"properties": {"trade_id": {"$ref": "#/components/schemas/trade_id"}, "trade_seq": {"$ref": "#/components/schemas/trade_seq"}, "instrument_name": {"$ref": "#/components/schemas/instrument_name"}, "timestamp": {"$ref": "#/components/schemas/trade_timestamp"}, "direction": {"description": "Trade direction of the taker", "$ref": "#/components/schemas/direction"}, "tick_direction": {"$ref": "#/components/schemas/tick_direction"}, "index_price": {"description": "Index Price at the moment of trade", "type": "number"}, "price": {"description": "The price of the trade", "$ref": "#/components/schemas/price"}, "amount": {"description": "Trade amount. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.", "type": "number"}, "contracts": {"description": "Trade size in contract units (optional, may be absent in historical trades)", "type": "number"}, "iv": {"description": "Option implied volatility for the price (Option only)", "type": "number"}, "liquidation": {"description": "Optional field (only for trades caused by liquidation): `\"M\"` when maker side of trade was under liquidation, `\"T\"` when taker side was under liquidation, `\"MT\"` when both sides of trade were under liquidation", "type": "string", "enum": ["M", "T", "MT"]}, "mark_price": {"description": "Mark Price at the moment of trade", "type": "number"}, "block_trade_id": {"$ref": "#/components/schemas/block_trade_id_in_result"}, "block_trade_leg_count": {"$ref": "#/components/schemas/block_trade_leg_count"}, "combo_id": {"description": "Optional field containing combo instrument name if the trade is a combo trade", "type": "string"}, "combo_trade_id": {"description": "Optional field containing combo trade identifier if the trade is a combo trade", "type": "number"}, "block_rfq_id": {"type": "integer", "description": "ID of the Block RFQ - when trade was part of the Block RFQ"}}, "required": ["trade_id", "instrument_name", "timestamp", "trade_seq", "direction", "tick_direction", "index_price", "price", "amount", "mark_price"], "type": "object"}, "user_trade": {"properties": {"trade_id": {"$ref": "#/components/schemas/trade_id"}, "trade_seq": {"$ref": "#/components/schemas/trade_seq"}, "instrument_name": {"$ref": "#/components/schemas/instrument_name"}, "timestamp": {"$ref": "#/components/schemas/trade_timestamp"}, "order_type": {"description": "Order type: `\"limit`, `\"market\"`, or `\"liquidation\"`", "type": "string", "enum": ["limit", "market", "liquidation"]}, "advanced": {"type": "string", "description": "Advanced type of user order: `\"usd\"` or `\"implv\"` (only for options; omitted if not applicable)", "enum": ["usd", "implv"]}, "order_id": {"description": "Id of the user order (maker or taker), i.e. subscriber's order id that took part in the trade", "type": "string"}, "matching_id": {"description": "Always `null`", "type": "string"}, "direction": {"description": "Trade direction of the taker", "$ref": "#/components/schemas/direction"}, "tick_direction": {"$ref": "#/components/schemas/tick_direction"}, "index_price": {"description": "Index Price at the moment of trade", "type": "number"}, "price": {"description": "The price of the trade", "$ref": "#/components/schemas/price"}, "amount": {"description": "Trade amount. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.", "type": "number"}, "contracts": {"description": "Trade size in contract units (optional, may be absent in historical trades)", "type": "number"}, "iv": {"description": "Option implied volatility for the price (Option only)", "type": "number"}, "underlying_price": {"description": "Underlying price for implied volatility calculations (Options only)", "type": "number"}, "liquidation": {"description": "Optional field (only for trades caused by liquidation): `\"M\"` when maker side of trade was under liquidation, `\"T\"` when taker side was under liquidation, `\"MT\"` when both sides of trade were under liquidation", "type": "string", "enum": ["M", "T", "MT"]}, "liquidity": {"description": "Describes what was role of users order: `\"M\"` when it was maker order, `\"T\"` when it was taker order", "type": "string", "enum": ["M", "T"]}, "fee": {"description": "User's fee in units of the specified `fee_currency`", "type": "number"}, "fee_currency": {"$ref": "#/components/schemas/currency"}, "label": {"$ref": "#/components/schemas/label_presentation"}, "state": {"$ref": "#/components/schemas/order_state_in_user_trade"}, "block_trade_id": {"$ref": "#/components/schemas/block_trade_id_in_result"}, "block_rfq_id": {"type": "integer", "description": "ID of the Block RFQ - when trade was part of the Block RFQ"}, "block_rfq_quote_id": {"type": "integer", "description": "ID of the Block RFQ quote - when trade was part of the Block RFQ"}, "reduce_only": {"description": "`true` if user order is reduce-only", "type": "string"}, "post_only": {"description": "`true` if user order is post-only", "type": "string"}, "mmp": {"type": "boolean", "description": "`true` if user order is MMP"}, "risk_reducing": {"type": "boolean", "description": "`true` if user order is marked by the platform as a risk reducing order (can apply only to orders placed by PM users)"}, "api": {"type": "boolean", "description": "`true` if user order was created with API"}, "profit_loss": {"$ref": "#/components/schemas/profit_loss"}, "mark_price": {"description": "Mark Price at the moment of trade", "type": "number"}, "legs": {"description": "Optional field containing leg trades if trade is a combo trade (present when querying for **only** combo trades and in `combo_trades` events)", "type": "array"}, "combo_id": {"description": "Optional field containing combo instrument name if the trade is a combo trade", "type": "string"}, "combo_trade_id": {"description": "Optional field containing combo trade identifier if the trade is a combo trade", "type": "number"}, "quote_set_id": {"type": "string", "description": "QuoteSet of the user order (optional, present only for orders placed with `private/mass_quote`)"}, "quote_id": {"type": "string", "description": "QuoteID of the user order (optional, present only for orders placed with `private/mass_quote`)"}, "trade_allocations": {"description": "List of allocations for Block RFQ pre-allocation. Each allocation specifies `user_id`, `amount`, and `fee` for the allocated part of the trade. For broker client allocations, a `client_info` object will be included.", "type": "array", "items": {"type": "object", "properties": {"user_id": {"description": "User ID to which part of the trade is allocated. For brokers the User ID is obstructed.", "type": "integer"}, "amount": {"description": "Amount allocated to this user.", "type": "number"}, "fee": {"description": "Fee for the allocated part of the trade.", "type": "number"}, "client_info": {"description": "Optional client allocation info for brokers.", "type": "object", "properties": {"client_id": {"description": "ID of a client; available to broker. Represents a group of users under a common name.", "type": "integer"}, "client_link_id": {"description": "ID assigned to a single user in a client; available to broker.", "type": "integer"}, "name": {"description": "Name of the linked user within the client; available to broker.", "type": "string"}}}}, "required": ["amount", "fee"]}}}, "required": ["trade_id", "trade_seq", "instrument_name", "timestamp", "order_id", "matching_id", "direction", "tick_direction", "index_price", "price", "amount", "fee", "fee_currency", "state", "mark_price"], "type": "object"}, "pending_block_trade": {"type": "object", "properties": {"nonce": {"description": "Nonce that can be used to approve or reject pending block trade.", "type": "string", "example": "bF1_gfgcsd"}, "timestamp": {"description": "Timestamp that can be used to approve or reject pending block trade.", "type": "integer"}, "trades": {"type": "array", "items": {"$ref": "#/components/schemas/pending_block_trade"}}, "app_name": {"description": "The name of the application that executed the block trade on behalf of the user (optional).", "type": "string", "example": "Example Application"}, "username": {"description": "Username of the user who initiated the block trade.", "type": "string", "example": "Trader"}, "role": {"$ref": "#/components/schemas/role"}, "user_id": {"$ref": "#/components/schemas/user_id"}, "broker_code": {"description": "Broker code associated with the broker block trade.", "type": "string", "example": "jpqYKgg1"}, "broker_name": {"description": "Name of the broker associated with the block trade.", "type": "string", "example": "Test Broker"}, "state": {"description": "State of the pending block trade for current user.", "type": "object", "properties": {"value": {"description": "State value.", "type": "string", "enum": ["initial", "accepted", "rejected", "executed"]}, "timestamp": {"description": "State timestamp.", "type": "integer"}}, "required": ["value", "timestamp"]}, "counterparty_state": {"description": "State of the pending block trade for the other party (optional).", "type": "object", "properties": {"value": {"description": "State value.", "type": "string", "enum": ["initial", "accepted", "rejected", "executed"]}, "timestamp": {"description": "State timestamp.", "type": "integer"}}, "required": ["value", "timestamp"]}, "combo_id": {"description": "Combo instrument identifier", "type": "string", "example": "BTC-CS-27JUN25-80000_85000"}}, "required": ["nonce", "timestamp", "trades", "app_name", "role", "user_id", "state"]}, "combo": {"type": "object", "properties": {"id": {"$ref": "#/components/schemas/combo_id"}, "instrument_id": {"$ref": "#/components/schemas/instrument_id"}, "state": {"$ref": "#/components/schemas/combo_state"}, "state_timestamp": {"$ref": "#/components/schemas/timestamp"}, "creation_timestamp": {"$ref": "#/components/schemas/timestamp"}, "legs": {"type": "array", "items": {"$ref": "#/components/schemas/combo_leg"}}}}, "combo_leg": {"type": "object", "properties": {"instrument_name": {"$ref": "#/components/schemas/instrument_name"}, "amount": {"$ref": "#/components/schemas/combo_leg_amount"}}}, "position_move_trade": {"properties": {"source_uid": {"description": "Trade source uid", "type": "integer"}, "target_uid": {"description": "Trade target uid", "type": "integer"}, "instrument_name": {"$ref": "#/components/schemas/instrument_name"}, "direction": {"description": "Trade direction from source perspective", "$ref": "#/components/schemas/direction"}, "price": {"description": "The price of the trade", "$ref": "#/components/schemas/price"}, "amount": {"description": "Trade amount. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.", "type": "number"}}, "required": ["instrument_name", "direction", "price", "amount"], "type": "object"}, "instrument": {"type": "object", "properties": {"kind": {"$ref": "#/components/schemas/kind"}, "settlement_currency": {"type": "string", "description": "Optional (not added for spot). Settlement currency for the instrument.", "enum": ["BTC", "ETH"]}, "counter_currency": {"type": "string", "description": "Counter currency for the instrument.", "enum": ["USD", "USDC"]}, "base_currency": {"type": "string", "description": "The underlying currency being traded.", "enum": ["BTC", "ETH"]}, "quote_currency": {"type": "string", "description": "The currency in which the instrument prices are quoted.", "enum": ["USD"]}, "min_trade_amount": {"type": "number", "description": "Minimum amount for trading. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.", "example": 0.1}, "instrument_name": {"$ref": "#/components/schemas/instrument_name"}, "instrument_id": {"$ref": "#/components/schemas/instrument_id"}, "is_active": {"type": "boolean", "description": "Indicates if the instrument can currently be traded."}, "settlement_period": {"type": "string", "description": "Optional (not added for spot). The settlement period.", "enum": ["month", "week", "perpetual"]}, "creation_timestamp": {"type": "integer", "description": "The time when the instrument was first created (milliseconds since the UNIX epoch).", "example": 1536569522277}, "tick_size": {"type": "number", "example": 0.0001, "description": "Specifies minimal price change and, as follows, the number of decimal places for instrument prices."}, "tick_size_steps": {"$ref": "#/components/schemas/tick_size_step"}, "expiration_timestamp": {"type": "integer", "description": "The time when the instrument will expire (milliseconds since the UNIX epoch)."}, "strike": {"type": "number", "description": "The strike value (only for options)."}, "option_type": {"type": "string", "description": "The option type (only for options).", "enum": ["call", "put"]}, "future_type": {"type": "string", "description": "Future type (only for futures)(field is deprecated and will be removed in the future, `instrument_type` should be used instead).", "enum": ["linear", "reversed"]}, "instrument_type": {"type": "string", "description": "Type of the instrument. `linear` or `reversed`"}, "contract_size": {"type": "integer", "description": "Contract size for instrument.", "example": 1}, "maker_commission": {"type": "number", "description": "Maker commission for instrument.", "example": 0.0001}, "taker_commission": {"type": "number", "description": "Taker commission for instrument.", "example": 0.0005}, "max_liquidation_commission": {"type": "number", "description": "Maximal liquidation trade commission for instrument (only for futures).", "example": 0.001}, "block_trade_commission": {"type": "number", "description": "Block Trade commission for instrument.", "example": 0.0005}, "block_trade_tick_size": {"type": "number", "description": "Specifies minimal price change for block trading.", "example": 0.01}, "block_trade_min_trade_amount": {"type": "number", "description": "Minimum amount for block trading.", "example": 25}, "max_leverage": {"type": "integer", "description": "Maximal leverage for instrument (only for futures).", "example": 100}, "price_index": {"$ref": "#/components/schemas/price_index"}}, "required": ["kind", "base_currency", "quote_currency", "min_trade_amount", "instrument_name", "is_active", "settlement_period", "creation_timestamp", "tick_size", "expiration_timestamp", "contract_size", "price_index"]}, "currency": {"type": "string", "description": "Currency, i.e `\"BTC\"`, `\"ETH\"`, `\"USDC\"`", "enum": ["BTC", "ETH", "USDC", "USDT", "EURR"]}, "currency_with_apr": {"type": "object", "properties": {"withdrawal_fee": {"type": "number", "description": "The total transaction fee paid for withdrawals", "example": 0.0001}, "withdrawal_priorities": {"type": "array", "items": {"$ref": "#/components/schemas/key_number_pair"}}, "min_withdrawal_fee": {"type": "number", "description": "The minimum transaction fee paid for withdrawals", "example": 0.0001}, "currency": {"type": "string", "description": "The abbreviation of the currency. This abbreviation is used elsewhere in the API to identify the currency.", "example": "BTC"}, "currency_long": {"type": "string", "description": "The full name for the currency.", "example": "Bitcoin"}, "min_confirmations": {"type": "integer", "description": "Minimum number of block chain confirmations before deposit is accepted.", "example": 2}, "coin_type": {"type": "string", "description": "The type of the currency.", "enum": ["BITCOIN", "ETHER"]}, "in_cross_collateral_pool": {"type": "boolean", "description": "`true` if the currency is part of the cross collateral pool"}, "apr": {"type": "number", "description": "Simple Moving Average (SMA) of the last 7 days of rewards. If fewer than 7 days of reward data are available, the APR is calculated as the average of the available rewards. Only applicable to yield-generating tokens (`USDE`, `STETH`, `USDC`, `BUILD`)."}, "network_fee": {"type": "number", "description": "The network fee", "example": 0.0001}, "network_currency": {"type": "string", "description": "The currency of the network", "example": "BTC"}, "decimals": {"type": "integer", "description": "The number of decimal places for the currency", "example": 6}}, "required": ["currency", "currency_long", "withdrawal_fee", "coin_type", "in_cross_collateral_pool"]}, "key_number_pair": {"type": "object", "properties": {"name": {"type": "string"}, "value": {"type": "number"}}, "required": ["name", "value"]}, "order_id_initial_margin_pair": {"type": "object", "properties": {"order_id": {"$ref": "#/components/schemas/order_id"}, "initial_margin": {"type": "number", "description": "Initial margin of order"}, "initial_margin_currency": {"type": "string", "description": "Currency of initial margin"}}, "required": ["order_id", "initial_margin"]}, "user_change": {"properties": {"instrument_name": {"$ref": "#/components/schemas/instrument_name"}, "trades": {"type": "array", "items": {"$ref": "#/components/schemas/user_trade"}}, "orders": {"type": "array", "items": {"$ref": "#/components/schemas/order"}}, "position": {"type": "array", "items": {"$ref": "#/components/schemas/position"}}}, "type": "object"}, "block_trade": {"type": "object", "properties": {"id": {"$ref": "#/components/schemas/block_trade_id"}, "timestamp": {"$ref": "#/components/schemas/timestamp"}, "trades": {"type": "array", "items": {"$ref": "#/components/schemas/user_trade"}}, "app_name": {"description": "The name of the application that executed the block trade on behalf of the user (optional).", "type": "string", "example": "Example Application"}, "broker_code": {"description": "Broker code associated with the broker block trade.", "type": "string", "example": "2krM7sJsx"}, "broker_name": {"description": "Name of the broker associated with the block trade.", "type": "string", "example": "Test Broker"}}, "required": ["id", "timestamp", "trades"]}, "position_move": {"type": "object", "properties": {"trades": {"type": "array", "items": {"$ref": "#/components/schemas/position_move_trade"}}}, "required": ["trades"]}, "transaction_log": {"type": "object", "properties": {"id": {"$ref": "#/components/schemas/id"}, "currency": {"$ref": "#/components/schemas/currency"}, "timestamp": {"$ref": "#/components/schemas/timestamp"}, "user_id": {"$ref": "#/components/schemas/user_id"}, "username": {"$ref": "#/components/schemas/username"}, "commission": {"$ref": "#/components/schemas/commission"}, "cashflow": {"description": "For futures and perpetual contracts: Realized session PNL (since last settlement). For options: the amount paid or received for the options traded.", "type": "number"}, "balance": {"description": "Cash balance after the transaction", "type": "number"}, "change": {"description": "Change in cash balance. For trades: fees and options premium paid/received. For settlement: Futures session PNL and perpetual session funding.", "type": "number"}, "user_seq": {"description": "Sequential identifier of user transaction", "type": "integer"}, "type": {"description": "Transaction category/type. The most common are: `trade`, `deposit`, `withdrawal`, `settlement`, `delivery`, `transfer`, `swap`, `correction`. New types can be added any time in the future", "type": "string"}, "info": {"type": "object", "description": "Additional information regarding transaction. Strongly dependent on the log entry type"}, "equity": {"description": "Updated equity value after the transaction", "type": "number"}, "mark_price": {"description": "Market price during the trade", "type": "number"}, "settlement_price": {"description": "The settlement price for the instrument during the delivery", "type": "number"}, "index_price": {"description": "The index price for the instrument during the delivery", "type": "number"}, "instrument_name": {"$ref": "#/components/schemas/instrument_name"}, "position": {"description": "Updated position size after the transaction", "type": "number"}, "side": {"description": "One of: `short` or `long` in case of settlements, `close sell` or `close buy` in case of deliveries, `open sell`, `open buy`, `close sell`, `close buy` in case of trades", "type": "string"}, "amount": {"description": "It represents the requested order size. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.", "type": "number"}, "price": {"description": "Settlement/delivery price or the price level of the traded contracts", "type": "number"}, "price_currency": {"description": "Currency symbol associated with the `price` field value", "type": "string"}, "trade_id": {"$ref": "#/components/schemas/trade_id"}, "order_id": {"$ref": "#/components/schemas/order_id"}, "user_role": {"$ref": "#/components/schemas/role"}, "fee_role": {"$ref": "#/components/schemas/fee_role"}, "profit_as_cashflow": {"description": "Indicator informing whether the cashflow is waiting for settlement or not", "type": "boolean"}, "interest_pl": {"description": "Actual funding rate of trades and settlements on perpetual instruments", "type": "number"}, "block_rfq_id": {"type": "integer", "description": "ID of the Block RFQ - when trade was part of the Block RFQ"}, "ip": {"type": "string", "description": "The IP address from which the trade was initiated"}, "session_rpl": {"$ref": "#/components/schemas/rpl"}, "session_upl": {"$ref": "#/components/schemas/upl"}, "total_interest_pl": {"description": "Total session funding rate", "type": "number"}, "contracts": {"$ref": "#/components/schemas/contracts"}}, "required": ["id", "currency", "timestamp", "user_id", "commission", "cashflow", "balance", "change", "user_seq", "type"]}, "get_balance": {"type": "object", "properties": {"currency": {"$ref": "#/components/schemas/currency"}, "equity": {"description": "Equity of the main account", "type": "number"}, "available_withdrawal_funds": {"description": "Funds available for withdrawal", "type": "number"}, "total_equity": {"description": "Equity of the main account + subaccounts", "type": "number"}, "custody": {"description": "Custody balance", "type": "number"}, "pnl": {"description": "Profit net loss of the user (total_equity - custody)", "type": "number"}, "encrypted": {"description": "The encrypted result json in base64 format. It can be used to verify that values are generated by Deribit.", "type": "number"}}, "required": ["currency", "equity", "available_withdrawal_funds", "total_equity", "custody", "pnl"]}, "get_custody_balance": {"type": "object", "properties": {"currency": {"$ref": "#/components/schemas/currency"}, "equity": {"description": "Equity of the main account", "type": "number"}, "available_withdrawal_funds": {"description": "Funds available for withdrawal", "type": "number"}, "total_equity": {"description": "Equity of the main account + subaccounts. Takes into account external equity.", "type": "number"}, "custody": {"description": "Custody balance", "type": "number"}, "pnl": {"description": "Profit net loss of the user (total_equity - custody)", "type": "number"}, "encrypted": {"description": "The encrypted result json in base64 format. It can be used to verify that values are generated by Deribit.", "type": "number"}}, "required": ["currency", "equity", "available_withdrawal_funds", "total_equity", "custody", "pnl"]}, "withdrawal_policy_mode": {"type": "string", "description": "Withdrawal Policy mode, i.e. `\"manual\"`, `\"automated\"`, `\"suspended\"`", "enum": ["manual", "automated", "suspended"]}, "withdrawal_policy_limits": {"type": "object", "properties": {"h24": {"$ref": "#/components/schemas/withdrawal_policy_limit_buckets"}}, "required": ["h24"]}, "expirations": {"type": "object", "description": "A map where each key is valid currency (e.g. btc, eth, usdc), and the value is a list of expirations or a map where each key is a valid kind (future or options) and value is a list of expirations from every instrument", "properties": {"currency": {"$ref": "#/components/schemas/currency_with_any_and_grouped"}, "kind": {"$ref": "#/components/schemas/kind_future_or_option_with_any"}}}, "id": {"description": "Unique identifier", "type": "integer", "example": 5967413}, "book_state": {"description": "The state of the order book. Possible values are `open` and `closed`.", "type": "string", "enum": ["open", "closed"]}, "greeks": {"description": "Only for options", "type": "object", "properties": {"delta": {"description": "(Only for option) The delta value for the option", "type": "number"}, "gamma": {"description": "(Only for option) The gamma value for the option", "type": "number"}, "rho": {"description": "(Only for option) The rho value for the option", "type": "number"}, "theta": {"description": "(Only for option) The theta value for the option", "type": "number"}, "vega": {"description": "(Only for option) The vega value for the option", "type": "number"}}, "required": ["delta", "gamma", "rho", "theta", "vega"]}, "bids": {"type": "array", "items": {"type": "array", "description": "List of bids (type: price-amount pair)", "items": {"type": "number"}, "minItems": 2, "maxItems": 2}}, "asks": {"type": "array", "items": {"type": "array", "description": "List of asks (type: price-amount pair)", "items": {"type": "number"}, "minItems": 2, "maxItems": 2}}, "tick_size_step": {"type": "object", "properties": {"above_price": {"description": "The price from which the increased tick size applies", "type": "number"}, "tick_size": {"description": "Tick size to be used above the price. It must be multiple of the minimum tick size.", "type": "number"}}}, "stats": {"type": "object", "properties": {"volume": {"description": "Volume during last 24h in base currency", "type": "number"}, "low": {"description": "Lowest price during 24h", "type": "number"}, "high": {"description": "Highest price during 24h", "type": "number"}, "price_change": {"description": "24-hour price change expressed as a percentage, `null` if there weren't any trades", "example": 10.23, "type": "number"}, "volume_usd": {"$ref": "#/components/schemas/volume_usd"}}, "required": ["volume", "high", "low"]}, "continuation": {"description": "Continuation token for pagination.", "type": "string", "example": "xY7T6cutS3t2B9YtaDkE6TS379oKnkzTvmEDUnEUP2Msa9xKWNNaT"}, "continuation_with_null": {"description": "Continuation token for pagination. `NULL` when no continuation.", "type": "integer", "example": 429946}, "block_rfq_trade_tape_continuation": {"description": "Continuation token for pagination. `NULL` when no continuation. Consists of `timestamp` and `block_rfq_id`.", "type": "string", "example": "1738050297271:103"}, "kind": {"type": "string", "description": "Instrument kind: `\"future\"`, `\"option\"`, `\"spot\"`, `\"future_combo\"`, `\"option_combo\"`", "enum": ["future", "option", "spot", "future_combo", "option_combo"]}, "kind_with_any": {"type": "string", "description": "Instrument kind: `\"future\"`, `\"option\"`, `\"spot\"`, `\"future_combo\"`, `\"option_combo\"` or `\"any\"` for all", "enum": ["future", "option", "spot", "future_combo", "option_combo", "any"]}, "kind_future_or_option_with_any": {"type": "string", "description": "Instrument kind: `\"future\"`, `\"option\"` or `\"any\"` for all", "enum": ["future", "option", "any"]}, "kind_with_combo_all": {"type": "string", "description": "Instrument kind: `\"future\"`, `\"option\"`, `\"spot\"`, `\"future_combo\"`, `\"option_combo\"`, `\"combo\"` for any combo or `\"any\"` for all", "enum": ["future", "option", "spot", "future_combo", "option_combo", "combo", "any"]}, "only_combo_kind": {"type": "string", "description": "Instrument kind: `\"future_combo\"`, `\"option_combo\"` or `\"combo\"` for any combo", "enum": ["future_combo", "option_combo", "combo"]}, "block_rfq_currency": {"type": "string", "description": "Currency, i.e `\"BTC\"`, `\"ETH\"`, `\"USDC\"`", "enum": ["BTC", "ETH", "USDC", "USDT", "any"]}, "wallet_currency": {"type": "string", "description": "Currency, i.e `\"BTC\"`, `\"ETH\"`, `\"USDC\"`", "enum": ["BTC", "ETH", "STETH", "ETHW", "USDC", "USDT", "EURR", "MATIC", "SOL", "XRP", "USYC", "PAXG", "BNB", "USDE"]}, "pme_currency": {"type": "string", "description": "The currency for which the Extended Risk Matrix will be calculated. Use `CROSS` for Cross Collateral simulation.", "enum": ["BTC", "ETH", "USDC", "USDT", "CROSS"]}, "currency_with_any": {"type": "string", "description": "Currency name or `\"any\"` if don't care", "enum": ["BTC", "ETH", "USDC", "USDT", "EURR", "any"]}, "currency_with_any_and_list": {"description": "The currency symbol, list of currency symbols or `\"any\"` for all", "oneOf": [{"type": "string"}, {"type": "array", "items": {"type": "string"}}]}, "currency_with_any_and_grouped": {"type": "string", "description": "Currency name or `\"any\"` if don't care or `\"grouped\"` if grouped by currencies", "enum": ["BTC", "ETH", "USDC", "SOL", "USDT", "EURR", "XRP", "STETH", "USYC", "PAXG", "BNB", "USDE", "any", "grouped"]}, "settlement_currency_with_any_and_grouped": {"type": "string", "description": "Currency name or `\"any\"` if don't care or `\"grouped\"` if grouped by currencies", "enum": ["BTC", "ETH", "USDC", "USDT", "any", "grouped"]}, "currency_pair": {"description": "Currency pair: `\"btc_usd\"` or `\"eth_usd\"`", "type": "string", "enum": ["btc_usd", "eth_usd"]}, "instrument_name": {"type": "string", "description": "Unique instrument identifier", "example": "BTC-PERPETUAL"}, "instrument_id": {"type": "integer", "description": "Instrument ID"}, "combo_id": {"type": "string", "description": "Unique combo identifier", "example": "BTC-FS-31DEC21-PERP"}, "combo_state": {"description": "Combo state: `\"active\"`, \"`inactive`\"", "type": "string", "enum": ["active", "inactive"]}, "combo_leg_amount": {"description": "Size multiplier of a leg. A negative value indicates that the trades on given leg are in opposite direction to the combo trades they originate from", "type": "integer", "example": -1}, "trade_timestamp": {"description": "The timestamp of the trade (milliseconds since the UNIX epoch)", "example": 1517329113791, "type": "integer"}, "order_id": {"description": "Unique order identifier", "type": "string", "example": "ETH-100234"}, "block_trade_id": {"description": "Block trade id", "type": "string", "example": "154"}, "block_trade_id_in_result": {"description": "Block trade id - when trade was part of a block trade", "type": "string", "example": "154"}, "block_trade_leg_count": {"description": "Block trade leg count - when trade was part of a block trade", "type": "integer", "example": 3}, "block_trade_order": {"description": "`true` if order made from block_trade trade, added only in that case.", "type": "boolean", "example": true}, "block_trade_signature": {"description": "Signature of block trade It is valid only for 5 minutes around given timestamp", "type": "string", "example": "1565173369982.1M9tO0Q-.z9n9WyZUU5op9pEz6Jtd2CI71QxQMMsCZAexnIfK9HQRT1pKH3clxeIbY7Bqm-yMcWIoE3IfCDPW5VEdiN-6oS0YkKUyXPD500MUf3ULKhfkmH81EZs"}, "settlement_type": {"type": "string", "description": "The type of settlement. `settlement`, `delivery` or `bankruptcy`.", "enum": ["settlement", "delivery", "bankruptcy"]}, "trade_id": {"type": "string", "description": "Unique (per currency) trade identifier"}, "date": {"type": "string", "example": "2019-11-24", "description": "The event date with year, month and day"}, "timestamp": {"type": "integer", "example": 1536569522277, "description": "The timestamp (milliseconds since the Unix epoch)"}, "timestamp_for_book_notifications": {"type": "integer", "example": 1536569522277, "description": "The timestamp of last change (milliseconds since the Unix epoch)"}, "last_rfq_timestamp": {"type": "integer", "example": 1536569522277, "description": "The timestamp of last RFQ (milliseconds since the Unix epoch)"}, "direction": {"type": "string", "description": "Direction: `buy`, or `sell`", "enum": ["buy", "sell"]}, "quote_direction": {"type": "string", "description": "Direction of trade from the maker perspective", "enum": ["buy", "sell"]}, "position_direction": {"type": "string", "description": "Direction: `buy`, `sell` or `zero`", "enum": ["buy", "sell", "zero"]}, "tick_direction": {"type": "integer", "enum": [0, 1, 2, 3], "description": "Direction of the \"tick\" (`0` = Plus Tick, `1` = Zero-Plus Tick, `2` = Minus Tick, `3` = Zero-Minus Tick)."}, "order_type": {"type": "string", "description": "Order type: `\"limit\"`, `\"market\"`, `\"stop_limit\"`, `\"stop_market\"`", "enum": ["market", "limit", "stop_market", "stop_limit"]}, "original_order_type": {"type": "string", "description": "Original order type. Optional field", "enum": ["market", "market_limit"]}, "order_type2": {"type": "string", "description": "Order type: `\"all\"`, `\"limit\"`, `\"trigger_all\"`, `\"stop_all\"`, `\"stop_limit\"`, `\"stop_market\"`, `\"take_all\"`, `\"take_limit\"`, `\"take_market\"`", "enum": ["all", "limit", "trigger_all", "stop_all", "stop_limit", "stop_market", "take_all", "take_limit", "take_market", "trailing_all", "trailing_stop"]}, "simple_order_type": {"type": "string", "description": "Order type: `\"all\"`, `\"limit\"`, `\"stop\"`, `\"take\"`, `\"trailing_stop\"`, `\"trailing_take\"`", "enum": ["all", "limit", "trigger_all", "stop", "take", "trailing_stop"]}, "order_state_in_user_trade": {"type": "string", "description": "Order state: `\"open\"`, `\"filled\"`, `\"rejected\"`, `\"cancelled\"`, `\"untriggered\"` or `\"archive\"` (if order was archived)", "enum": ["open", "filled", "rejected", "cancelled", "untriggered", "archive"]}, "order_state": {"type": "string", "description": "Order state: `\"open\"`, `\"filled\"`, `\"rejected\"`, `\"cancelled\"`, `\"untriggered\"`", "enum": ["open", "filled", "rejected", "cancelled", "untriggered", "triggered"]}, "cancel_reason": {"type": "string", "description": "Enumerated reason behind cancel `\"user_request\"`, `\"autoliquidation\"`, `\"cancel_on_disconnect\"`, `\"risk_mitigation\"`, `\"pme_risk_reduction\"` (portfolio margining risk reduction), `\"pme_account_locked\"` (portfolio margining account locked per currency), `\"position_locked\"`, `\"mmp_trigger\"` (market maker protection), `\"mmp_config_curtailment\"` (market maker configured quantity decreased), `\"edit_post_only_reject\"` (cancelled on edit because of `reject_post_only` setting), `\"oco_other_closed\"` (the oco order linked to this order was closed), `\"oto_primary_closed\"` (the oto primary order that was going to trigger this order was cancelled), `\"settlement\"` (closed because of a settlement)", "enum": ["user_request", "autoliquidation", "cancel_on_disconnect", "risk_mitigation", "pme_risk_reduction", "pme_account_locked", "position_locked", "mmp_trigger", "mmp_config_curtailment", "edit_post_only_reject", "oco_other_closed", "oto_primary_closed", "settlement"]}, "order_state_stop": {"type": "string", "description": "Order state: `\"triggered\"`, `\"cancelled\"`, or `\"rejected\"` with rejection reason (e.g. `\"rejected:reduce_direction\"`)."}, "time_in_force": {"type": "string", "description": "Order time in force: `\"good_til_cancelled\"`, `\"good_til_day\"`, `\"fill_or_kill\"` or `\"immediate_or_cancel\"`", "enum": ["good_til_cancelled", "good_til_day", "fill_or_kill", "immediate_or_cancel"]}, "block_rfq_time_in_force": {"type": "string", "description": "Block RFQ time in force: `\"fill_or_kill\"` or `\"good_til_cancelled\"`", "enum": ["fill_or_kill", "good_til_cancelled"]}, "trade_trigger_state": {"type": "string", "description": "Trade trigger state: `\"untriggered\"` or `\"cancelled\"`", "enum": ["triggered", "untriggered", "cancelled"]}, "trade_trigger": {"type": "object", "description": "Contains information about the trade trigger state", "properties": {"state": {"$ref": "#/components/schemas/trade_trigger_state"}, "price": {"description": "Price of the trade trigger", "type": "number"}, "direction": {"description": "Direction of the trade trigger", "type": "string", "enum": ["buy", "sell"]}, "cancel_reason": {"description": "Reason for cancellation, present only when state is cancelled", "type": "string"}}, "required": ["state", "price", "direction"]}, "price": {"description": "Price in base currency", "type": "number"}, "quote_price": {"description": "Price in quote currency", "type": "number"}, "label": {"type": "string", "description": "User defined label (up to 64 characters)"}, "label_presentation": {"type": "string", "description": "User defined label (presented only when previously set for order by user)"}, "post_only": {"type": "boolean", "description": "`true` for post-only orders only"}, "reject_post_only": {"description": "`true` if order has `reject_post_only` flag (field is present only when `post_only` is `true`)", "type": "boolean"}, "reduce_only": {"type": "boolean", "description": "Optional (not added for spot). '`true` for reduce-only orders only'"}, "api": {"type": "boolean", "description": "`true` if created with API"}, "mobile": {"type": "boolean", "description": "optional field with value `true` added only when created with Mobile Application"}, "web": {"type": "boolean", "description": "`true` if created via Deribit frontend (optional)"}, "max_show": {"type": "number", "description": "Deprecated. Maximum amount within an order to be shown to other traders, 0 for invisible order."}, "display_amount": {"type": "number", "description": "The actual display amount of iceberg order. Absent for other types of orders."}, "refresh_amount": {"type": "number", "description": "The initial display amount of iceberg order. Iceberg order display amount will be refreshed to that value after match consuming actual display amount. Absent for other types of orders"}, "amount": {"type": "number", "description": "It represents the requested order size. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin."}, "contracts": {"type": "number", "description": "It represents the order size in contract units. (Optional, may be absent in historical data)."}, "log_amount": {"type": "number", "description": "For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin."}, "currency_amount": {"type": "number", "description": "Amount of funds in given currency", "example": 1.0}, "filled_amount": {"type": "number", "description": "Filled amount of the order. For perpetual and futures the filled_amount is in USD units, for options - in units or corresponding cryptocurrency contracts, e.g., BTC or ETH."}, "filled_amount_quote": {"type": "number", "description": "Filled amount of the quote. For perpetual and futures the filled_amount is in USD units, for options - in units or corresponding cryptocurrency contracts, e.g., BTC or ETH."}, "profit_loss": {"type": "number", "description": "Profit and loss in base currency."}, "quantity": {"type": "number", "description": "The number of contracts to be traded."}, "average_price": {"type": "number", "description": "Average fill price of the order"}, "commission": {"type": "number", "description": "Commission paid so far (in base currency)"}, "advanced": {"type": "string", "description": "advanced type: `\"usd\"` or `\"implv\"` (Only for options; field is omitted if not applicable).", "enum": ["usd", "implv"]}, "implv": {"type": "number", "description": "Implied volatility in percent. (Only if `advanced=\"implv\"`)"}, "usd": {"type": "number", "description": "Option price in USD (Only if `advanced=\"usd\"`)"}, "triggered": {"type": "boolean", "description": "Whether the trigger order has been triggered"}, "trigger": {"type": "string", "description": "Trigger type (only for trigger orders). Allowed values: `\"index_price\"`, `\"mark_price\"`, `\"last_price\"`.", "enum": ["index_price", "mark_price", "last_price"]}, "trigger_price": {"type": "number", "description": "Trigger price (Only for future trigger orders)"}, "trigger_offset": {"type": "number", "description": "The maximum deviation from the price peak beyond which the order will be triggered (Only for trailing trigger orders)"}, "trigger_reference_price": {"type": "number", "description": "The price of the given trigger at the time when the order was placed (Only for trailing trigger orders)"}, "sorting": {"type": "string", "enum": ["asc", "desc", "default"]}, "contract_size": {"description": "Contract size, for futures in USD, for options in base currency of the instrument (BTC, ETH, ...)", "type": "integer", "example": 10}, "currency_address": {"description": "Address in proper format for currency", "type": "string", "example": "1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa"}, "currency_address_type": {"description": "Address type acording to Notabene", "type": "string", "enum": ["HOSTED", "UNHOSTED", "UNKNOWN"], "example": "HOSTED"}, "address_book_type": {"description": "Address book type", "type": "string", "enum": ["transfer", "withdrawal", "deposit_source"]}, "address_book_type_without_deposit_source": {"description": "Address book type", "type": "string", "enum": ["transfer", "withdrawal"]}, "address_label": {"description": "Label of the address book entry", "type": "string", "example": "Main address"}, "beneficiary_vasp_name": {"description": "Name of beneficiary VASP", "type": "string", "example": "Money`s Gone"}, "beneficiary_vasp_did": {"description": "DID of beneficiary VASP", "type": "string", "example": "did:example:123456789abcdefghi"}, "beneficiary_first_name": {"description": "First name of the beneficiary (if beneficiary is a person)", "type": "string", "example": "John"}, "beneficiary_last_name": {"description": "Last name of the beneficiary (if beneficiary is a person)", "type": "string", "example": "Doe"}, "beneficiary_company_name": {"type": "string", "description": "Company name of the beneficiary (if beneficiary is a company)", "example": "Company Name"}, "beneficiary_address": {"description": "Geographical address of the beneficiary", "type": "string", "example": "NL, Amsterdam, Street, 1"}, "beneficiary_vasp_website": {"type": "string", "description": "Website of the beneficiary VASP"}, "agree_to_share_with_3rd_party": {"description": "Indicates that the user agreed to shared provided information with 3rd parties", "type": "boolean", "example": true}, "personal_wallet": {"description": "The user confirms that he provided address belongs to him and he has access to it via an un-hosted wallet software", "type": "boolean", "example": true}, "extra_currencies": {"description": "The user can pass a list of currencies to add the address for. It is currently available ONLY for ERC20 currencies. Without passing this paramater for an ERC20 currency, the address will be added to ALL of the ERC20 currencies.", "type": "array", "items": {"type": "string", "description": "Name of the currency"}, "example": ["USDC", "MATIC"]}, "address_info_required": {"description": "Signalises that addition information regarding the beneficiary of the address is required", "type": "boolean", "example": true}, "status": {"description": "Wallet address status, values: [`admin_locked`, `waiting`, `confirmed`, `ready`]", "type": "string", "enum": ["admin_locked", "waiting", "confirmed", "ready"]}, "waiting_timestamp": {"description": "Timestamp when the address will be ready", "type": "boolean", "example": true}, "requires_confirmation": {"description": "If address requires email confirmation for withdrawals", "type": "boolean", "example": true}, "requires_confirmation_change": {"description": "If email confirmation change is in progress", "type": "boolean", "example": true}, "deposit_state": {"description": "Deposit state. Allowed values: `pending`: deposit detected on blockchain/system, compliance not yet finished `completed`: compliance check finished successfully `rejected`: deposit failed compliance and must be handled manually `replaced`: deposit transaction was replaced on the blockchain and should have a new transaction hash", "type": "string", "enum": ["pending", "completed", "rejected", "replaced"]}, "withdrawal_state": {"description": "Withdrawal state, allowed values : `unconfirmed`, `confirmed`, `cancelled`, `completed`, `interrupted`, `rejected`", "type": "string", "enum": ["unconfirmed", "confirmed", "cancelled", "completed", "interrupted", "rejected"]}, "clearance_state": {"description": "Clearance state indicating the current status of the transaction clearance process. Allowed values: `in_progress`: clearance process is in progress `pending_admin_decision`: transaction is under manual review by Deribit admin `pending_user_input`: user should provide additional information regarding the transaction `success`: clearance process completed successfully `failed`: clearance process failed, transaction is rejected `cancelled`: transaction is cancelled (currently used only for withdrawals, meaning the withdrawal is cancelled) `refund_initiated`: clearance process failed, transaction refund is initiated, funds are removed from Deribit balance (valid for deposits only) `refunded`: clearance process failed, deposit amount is refunded back to the client (valid for deposits only)", "type": "string", "enum": ["in_progress", "pending_admin_decision", "pending_user_input", "success", "failed", "cancelled", "refund_initiated", "refunded"]}, "fee": {"type": "number", "example": 2.3e-05, "description": "Fee in currency"}, "currency_transaction_id": {"description": "Transaction id in proper format for currency, `null` if id is not available", "type": "string", "nullable": true, "example": "1b1fb5568515e2b79503501e3d3680b2d0838d5dfc2d15a04eb8cd9fbbe0b572"}, "result_count": {"description": "Total number of results available", "type": "integer", "example": 101}, "transfer_id": {"description": "Id of transfer", "type": "integer", "example": 12}, "transfer_type": {"description": "Type of transfer: `user` - sent to user, `subaccount` - sent to subaccount", "type": "string", "enum": ["user", "subaccount"]}, "transfer_direction": {"description": "Transfer direction", "type": "string", "enum": ["payment", "income"]}, "transfer_state": {"description": "Transfer state, allowed values : `prepared`, `confirmed`, `cancelled`, `waiting_for_admin`, `insufficient_funds`, `withdrawal_limit` otherwise rejection reason", "type": "string"}, "transfer_other_side": {"description": "For transfer from/to subaccount returns this subaccount name, for transfer to other account returns address, for transfer from other account returns that accounts username.", "type": "string", "example": "Smith"}, "trade_seq": {"description": "The sequence number of the trade within instrument", "type": "integer"}, "wallet_address_type": {"description": "Address type/purpose, allowed values : `deposit`", "type": "string"}, "best_bid_price": {"description": "The current best bid price, `null` if there aren't any bids", "type": "number", "nullable": true}, "best_bid_amount": {"description": "It represents the requested order size of all best bids", "type": "number", "nullable": true}, "best_ask_price": {"description": "The current best ask price, `null` if there aren't any asks", "type": "number", "nullable": true}, "best_ask_amount": {"description": "It represents the requested order size of all best asks", "type": "number", "nullable": true}, "min_price": {"description": "The minimum price for the future. Any sell orders you submit lower than this price will be clamped to this minimum.", "type": "number"}, "max_price": {"description": "The maximum price for the future. Any buy orders you submit higher than this price, will be clamped to this maximum.", "type": "number"}, "mark_price": {"description": "The mark price for the instrument", "type": "number"}, "last_price": {"description": "The price for the last trade", "type": "number", "nullable": true}, "underlying_price": {"description": "Underlying price for implied volatility calculations (options only)", "type": "number"}, "underlying_index": {"description": "Name of the underlying future, or `index_price` (options only)", "type": "number"}, "interest_rate": {"description": "Interest rate used in implied volatility calculations (options only)", "type": "number"}, "bid_iv": {"description": "(Only for option) implied volatility for best bid", "type": "number"}, "ask_iv": {"description": "(Only for option) implied volatility for best ask", "type": "number"}, "mark_iv": {"description": "(Only for option) implied volatility for mark price", "type": "number"}, "funding_8h": {"description": "Funding 8h (perpetual only)", "type": "number"}, "interest_value": {"description": "Value used to calculate `realized_funding` in positions (perpetual only)", "type": "number"}, "current_funding": {"description": "Current funding (perpetual only)", "type": "number"}, "delivery_price": {"description": "The settlement price for the instrument. Only when `state = closed`", "type": "number"}, "settlement_price": {"description": "Optional (not added for spot). The settlement price for the instrument. Only when `state = open`", "type": "number"}, "volume_usd": {"description": "Volume in usd (futures only)", "type": "number"}, "estimated_delivery_price": {"description": "Estimated delivery price for the market. For more details, see Contract Specification > General Documentation > Expiration Price", "example": 11628.81, "type": "number"}, "open_interest": {"description": "The total amount of outstanding contracts in the corresponding amount units. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.", "type": "number"}, "index_price": {"description": "Current index price", "type": "number", "example": 8247.27}, "index_name": {"description": "Index identifier, matches (base) cryptocurrency with quote currency", "type": "string", "enum": ["btc_usd", "eth_usd", "ada_usdc", "algo_usdc", "avax_usdc", "bch_usdc", "bnb_usdc", "btc_usdc", "btcdvol_usdc", "buidl_usdc", "doge_usdc", "dot_usdc", "eurr_usdc", "eth_usdc", "ethdvol_usdc", "link_usdc", "ltc_usdc", "near_usdc", "paxg_usdc", "shib_usdc", "sol_usdc", "steth_usdc", "ton_usdc", "trump_usdc", "trx_usdc", "uni_usdc", "usde_usdc", "usyc_usdc", "xrp_usdc", "btc_usdt", "eth_usdt", "eurr_usdt", "sol_usdt", "steth_usdt", "usdc_usdt", "usde_usdt", "btc_eurr", "btc_usde", "btc_usyc", "eth_btc", "eth_eurr", "eth_usde", "eth_usyc", "steth_eth", "paxg_btc", "drbfix-btc_usdc", "drbfix-eth_usdc"]}, "index_name_for_dvol": {"description": "Index identifier supported for DVOL", "type": "string", "enum": ["btc_usd", "eth_usd"]}, "index_name_derivative": {"description": "Index identifier of derivative instrument on the platform", "type": "string", "enum": ["btc_usd", "eth_usd", "btc_usdc", "eth_usdc", "ada_usdc", "algo_usdc", "avax_usdc", "bch_usdc", "bnb_usdc", "doge_usdc", "dot_usdc", "link_usdc", "ltc_usdc", "near_usdc", "paxg_usdc", "shib_usdc", "sol_usdc", "ton_usdc", "trx_usdc", "trump_usdc", "uni_usdc", "xrp_usdc", "usde_usdc", "buidl_usdc", "btcdvol_usdc", "ethdvol_usdc", "btc_usdt", "eth_usdt", "all"]}, "volatility": {"description": "Value of the corresponding volatility", "type": "number"}, "implied_volatility": {"description": "Value of the volatility of the underlying instrument", "type": "number"}, "chart_volume": {"description": "// todo", "type": "number"}, "key_id": {"description": "key identifier", "type": "integer", "example": 1}, "security_key_id": {"description": "Security Key Identifier", "type": "integer", "example": 12}, "security_key_name": {"description": "Security Key name", "type": "string"}, "security_key_type": {"description": "Security Key type", "type": "string", "enum": ["tfa", "u2f"]}, "security_key_assignments": {"type": "array", "items": {"type": "object", "properties": {"assignment": {"description": "Assignment name", "type": "string", "enum": ["login", "wallet", "admin", "account"]}, "timestamp": {"description": "Timestamp when assignment was created (milliseconds since the UNIX epoch)", "type": "integer"}}, "required": ["type", "assignment", "timestamp"]}}, "security_key_timestamp": {"description": "Timestamp when Security Key was created (milliseconds since the UNIX epoch)", "type": "integer"}, "security_key_last_used": {"description": "Timestamp when Security Key was last used (milliseconds since the UNIX epoch)", "type": "integer"}, "client_id": {"description": "Client identifier used for authentication", "type": "string", "example": "IY2D68DS"}, "public_key": {"description": "PEM encoded public key (Ed25519/RSA) used for asymmetric signatures (optional)", "type": "string", "example": "-----BEGIN PUBLIC KEY----- MCowBQYDK2VwAyEApajFN0CSwIaaiIRPiFbiYYvpsLQLSccSLLsKPe984sc= -----END PUBLIC KEY-----"}, "client_secret": {"description": "Client secret or MD5 fingerprint of public key used for authentication", "type": "string", "example": "P9Z_c73KaBPwpoTVfsXzehAhjhdJn5kM7Zlz_hhDhE8"}, "api_key_default": {"description": "Informs whether this api key is default (field is deprecated and will be removed in the future)", "type": "boolean", "example": false}, "api_key_name": {"description": "Api key name that can be displayed in transaction log", "type": "string", "example": "TestName"}, "api_key_features": {"description": "List of enabled advanced on-key features. Available options: - `restricted_block_trades`: Limit the block_trade read the scope of the API key to block trades that have been made using this specific API key - `block_trade_approval`: Block trades created using this API key require additional user approval. Methods that use `block_rfq` scope are not affected by Block Trade approval feature", "type": "array", "items": {"type": "string", "description": "Name of the feature"}}, "max_scope": {"description": "Describes maximal access for tokens generated with given key, possible values: `trade:[read, read_write, none]`, `wallet:[read, read_write, none]`, `account:[read, read_write, none]`, `block_trade:[read, read_write, none]`, `block_rfq:[read, read_write, none]`. If scope is not provided, its value is set as none. Please check details described in Access scope", "type": "string", "example": "connection"}, "api_key_enabled": {"description": "Informs whether api key is enabled and can be used for authentication", "type": "boolean", "example": true}, "enabled_field": {"description": "Current configuration status", "type": "boolean", "example": true}, "cod_scope": {"description": "Informs if Cancel on Disconnect was checked for the current connection or the account", "type": "string", "enum": ["connection", "account"]}, "nonce": {"description": "Nonce", "type": "string", "example": "bF1_gfgcsd"}, "role": {"description": "Trade role of the user: `maker` or `taker`", "type": "string", "enum": ["maker", "taker"]}, "fee_role": {"description": "Fee role of the user: `maker` or `taker`. Can be different from trade role of the user when iceberg order was involved in matching.", "type": "string", "enum": ["maker", "taker"]}, "user_id": {"description": "Unique user identifier", "type": "integer", "example": 57874}, "username": {"description": "System name or user defined subaccount alias", "type": "string", "example": "MrTrader"}, "custody_name": {"description": "Custody name", "type": "string", "enum": ["copper", "cobo"]}, "delta_total": {"description": "The sum of position deltas", "example": 0.1334, "type": "number"}, "projected_delta_total": {"description": "The sum of position deltas without positions that will expire during closest expiration", "example": 0.1334, "type": "number"}, "projected_maintenance_margin": {"description": "Projected maintenance margin. When cross collateral is enabled, this aggregated value is calculated by converting the sum of each cross collateral currency's value to the given currency, using each cross collateral currency's index.", "example": 1, "type": "number"}, "estimated_liquidation_ratio": {"description": "Estimated Liquidation Ratio is returned only for users without portfolio margining enabled. Multiplying it by future position's market price returns its estimated liquidation price. When cross collateral is enabled, this aggregated value is calculated by converting the sum of each cross collateral currency's value to the given currency, using each cross collateral currency's index.", "example": 2.34e-05, "type": "number"}, "projected_initial_margin": {"description": "Projected initial margin. When cross collateral is enabled, this aggregated value is calculated by converting the sum of each cross collateral currency's value to the given currency, using each cross collateral currency's index.", "example": 1, "type": "number"}, "additional_reserve": {"description": "The account's balance reserved in other orders", "example": 0.3, "type": "number"}, "rate_and_burst": {"type": "object", "required": ["rate", "burst"], "properties": {"rate": {"description": "Number of requests per second allowed for user", "type": "integer"}, "burst": {"description": "Maximal number of requests allowed for user in burst mode", "type": "integer"}}}, "group_rate_and_burst": {"type": "object", "properties": {"total": {"type": "object", "properties": {"rate": {"description": "Number of all requests per second in perpetuals allowed for user", "type": "integer"}, "burst": {"description": "Maximal number of all requests allowed for user in burst mode", "type": "integer"}}}, "perpetuals": {"type": "object", "properties": {"rate": {"description": "Number of perpetual requests per second allowed for user", "type": "integer"}, "burst": {"description": "Maximal number of perpetuals requests allowed for user in burst mode", "type": "integer"}}}, "futures": {"type": "object", "properties": {"rate": {"description": "Number of futures requests per second allowed for user", "type": "integer"}, "burst": {"description": "Maximal number of futures requests allowed for user in burst mode", "type": "integer"}}}, "options": {"type": "object", "properties": {"rate": {"description": "Number of option requests per second allowed for user", "type": "integer"}, "burst": {"description": "Maximal number of option requests allowed for user in burst mode", "type": "integer"}}}}}, "api_limits": {"type": "object", "description": "Returned object is described in separate document."}, "scale_down": {"type": "object", "description": "The field is only added if the user has it set", "properties": {"mm_multiplier": {"type": "number", "description": "Maintenance Margin multiplier"}, "im_multiplier": {"type": "number", "description": "Initial Margin multiplier"}}, "required": ["im_multiplier", "mm_multiplier"]}, "rpl": {"description": "Session realized profit and loss", "type": "number", "example": 0.1}, "upl": {"description": "Session unrealized profit and loss", "type": "number", "example": 0.846863}, "side": {"type": "string", "example": "`buy`", "description": "Side - `buy` or `sell`", "enum": ["buy", "sell"]}, "fee_balance": {"description": "The account's fee balance (it can be used to pay for fees)", "type": "number"}, "did": {"description": "Distributed ID", "type": "string"}, "jurisdictions": {"description": "Jurisdictions a VASP belongs to", "type": "array", "items": {"description": "Jurisdiction name", "type": "string"}}, "vasp_name": {"description": "VASP name", "type": "string"}, "source": {"description": "Blockchain address source", "type": "string"}, "jwt": {"description": "JSON web token", "type": "string"}, "external_id": {"description": "User ID in external systems", "type": "string", "example": "4b4cee3d-2dfc-4402-a9ae-f8f9785fa966"}, "business_registration_number": {"description": "Registration number of the company", "type": "string", "example": "2021/135466541/07"}, "trigger_fill_condition": {"description": "The fill condition of the linked order (Only for linked order types), default: `first_hit`. `\"first_hit\"` - any execution of the primary order will fully cancel/place all secondary orders. `\"complete_fill\"` - a complete execution (meaning the primary order no longer exists) will cancel/place the secondary orders. `\"incremental\"` - any fill of the primary order will cause proportional partial cancellation/placement of the secondary order. The amount that will be subtracted/added to the secondary order will be rounded down to the contract size.", "type": "string", "enum": ["first_hit", "complete_fill", "incremental"]}, "withdrawal_policy_limit_bucket": {"type": "string", "description": "Withdrawal Policy limit bucket, i.e. `\"h24\"`", "enum": ["h24"]}, "withdrawal_policy_category": {"type": "string", "description": "Withdrawal Policy category, i.e. `\"small\"`, `\"secure\"`", "enum": ["small", "secure"]}, "withdrawal_policy_limit_buckets": {"type": "object", "description": "Withdrawal Policy limit bucket", "properties": {"small": {"$ref": "#/components/schemas/amount"}, "secure": {"$ref": "#/components/schemas/amount"}}}, "withdrawal_policy_amount": {"type": "number", "description": "A positive float as limit"}, "oco_ref": {"type": "string", "description": "Unique reference that identifies a one_cancels_others (OCO) pair."}, "is_secondary_oto": {"type": "boolean", "description": "`true` if the order is an order that can be triggered by another order, otherwise not present."}, "block_rfq_legs": {"type": "array", "items": {"type": "object", "properties": {"ratio": {"description": "Ratio of amount between legs", "type": "integer"}, "instrument_name": {"$ref": "#/components/schemas/instrument_name"}, "direction": {"$ref": "#/components/schemas/direction"}}}}, "leg_structure": {"type": "array", "items": {"type": "object", "properties": {"ratio": {"description": "Ratio of amount between legs", "type": "integer"}, "instrument_name": {"$ref": "#/components/schemas/instrument_name"}, "direction": {"$ref": "#/components/schemas/direction"}, "price": {"description": "Price for a leg", "type": "number"}}}}, "block_rfq_hedge_leg": {"type": "object", "properties": {"amount": {"description": "It represents the requested hedge leg size. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.", "type": "integer"}, "instrument_name": {"$ref": "#/components/schemas/instrument_name"}, "direction": {"$ref": "#/components/schemas/direction"}, "price": {"description": "Price for a hedge leg", "type": "number"}}}, "replaced_quote": {"type": "boolean", "description": "`true` if the quote was edited, otherwise `false`."}, "block_rfq": {"type": "object", "properties": {"creation_timestamp": {"description": "The timestamp when Block RFQ was created (milliseconds since the Unix epoch)", "type": "integer", "example": 1536569522277}, "expiration_timestamp": {"type": "integer", "example": 1536569522277, "description": "The timestamp when the Block RFQ will expire (milliseconds since the UNIX epoch)"}, "block_rfq_id": {"type": "integer", "description": "ID of the Block RFQ"}, "role": {"description": "Role of the user in Block RFQ", "type": "string", "enum": ["taker", "maker"]}, "state": {"description": "State of the Block RFQ", "type": "string", "enum": ["open", "filled", "cancelled", "expired"]}, "taker_rating": {"description": "Rating of the taker", "type": "string"}, "makers": {"type": "array", "items": {"type": "string", "description": "List of targeted Block RFQ makers"}}, "amount": {"description": "This value multiplied by the ratio of a leg gives trade size on that leg.", "type": "number"}, "min_trade_amount": {"description": "Minimum amount for trading", "type": "number"}, "asks": {"$ref": "#/components/schemas/quote_asks"}, "bids": {"$ref": "#/components/schemas/quote_bids"}, "legs": {"$ref": "#/components/schemas/block_rfq_legs"}, "hedge": {"$ref": "#/components/schemas/block_rfq_hedge_leg"}, "combo_id": {"$ref": "#/components/schemas/combo_id"}, "label": {"type": "string", "description": "User defined label for the Block RFQ (maximum 64 characters)"}, "app_name": {"description": "The name of the application that created the Block RFQ on behalf of the user (optional, visible only to taker).", "type": "string", "example": "Example Application"}, "mark_price": {"$ref": "#/components/schemas/mark_price"}, "disclosed": {"description": "Indicates whether the RFQ was created as non-anonymous, meaning taker and maker aliases are visible to counterparties.", "type": "boolean"}, "taker": {"description": "Taker alias. Present only when `disclosed` is `true`.", "type": "string", "example": "TAKER1"}, "index_prices": {"type": "array", "items": {"type": "number", "description": "A list of index prices for the underlying instrument(s) at the time of trade execution."}}, "included_in_taker_rating": {"description": "Indicates whether the RFQ is included in the taker's rating calculation. Present only for closed RFQs created by the requesting taker.", "type": "boolean"}, "trades": {"type": "array", "items": {"type": "object", "properties": {"direction": {"$ref": "#/components/schemas/direction"}, "price": {"$ref": "#/components/schemas/price"}, "amount": {"description": "Trade amount. For options, linear futures, linear perpetuals and spots the amount is denominated in the underlying base currency coin. The inverse perpetuals and inverse futures are denominated in USD units.", "type": "number"}, "maker": {"type": "string", "description": "Alias of the maker (optional)"}, "hedge_amount": {"type": "number", "description": "Amount of the hedge leg. For linear futures, linear perpetuals and spots the amount is denominated in the underlying base currency coin. The inverse perpetuals and inverse futures are denominated in USD units."}}}}, "trade_trigger": {"$ref": "#/components/schemas/trade_trigger", "description": "Present only if a trade trigger was placed by the taker and only visible to taker. Only for cases: `cancelled` (contains the reason for cancellation) and `untriggered` (contains the information about the trade trigger)."}, "trade_allocations": {"$ref": "#/components/schemas/trade_allocations", "description": "List of allocations for Block RFQ pre-allocation. Allows to split amount between different (sub)accounts. The taker can also allocate to himself. Visible only to the taker."}}}, "block_rfq_for_maker": {"type": "object", "properties": {"creation_timestamp": {"description": "The timestamp when Block RFQ was created (milliseconds since the Unix epoch)", "type": "integer", "example": 1536569522277}, "expiration_timestamp": {"type": "integer", "example": 1536569522277, "description": "The timestamp when the Block RFQ will expire (milliseconds since the UNIX epoch)"}, "block_rfq_id": {"type": "integer", "description": "ID of the Block RFQ"}, "role": {"description": "Role of the user in Block RFQ", "type": "string", "enum": ["taker", "maker"]}, "state": {"description": "State of the Block RFQ", "type": "string", "enum": ["open", "filled", "cancelled", "expired"]}, "taker_rating": {"description": "Rating of the taker", "type": "string"}, "amount": {"description": "This value multiplied by the ratio of a leg gives trade size on that leg.", "type": "number"}, "min_trade_amount": {"description": "Minimum amount for trading", "type": "number"}, "legs": {"$ref": "#/components/schemas/block_rfq_legs"}, "hedge": {"$ref": "#/components/schemas/block_rfq_hedge_leg"}, "combo_id": {"$ref": "#/components/schemas/combo_id"}, "disclosed": {"description": "Indicates whether the RFQ was created as non-anonymous, meaning taker and maker aliases are visible to counterparties.", "type": "boolean"}, "taker": {"description": "Taker alias. Present only when `disclosed` is `true`.", "type": "string", "example": "TAKER1"}, "index_prices": {"type": "array", "items": {"type": "number", "description": "A list of index prices for the underlying instrument(s) at the time of trade execution."}}, "included_in_taker_rating": {"description": "Indicates whether the RFQ is included in the taker's rating calculation. Present only for closed RFQs created by the requesting taker.", "type": "boolean"}, "trades": {"type": "array", "items": {"type": "object", "properties": {"direction": {"$ref": "#/components/schemas/direction"}, "price": {"$ref": "#/components/schemas/price"}, "amount": {"description": "Trade amount. For options, linear futures, linear perpetuals and spots the amount is denominated in the underlying base currency coin. The inverse perpetuals and inverse futures are denominated in USD units.", "type": "number"}, "maker": {"type": "string", "description": "Alias of the maker (optional)"}, "hedge_amount": {"type": "number", "description": "Amount of the hedge leg. For linear futures, linear perpetuals and spots the amount is denominated in the underlying base currency coin. The inverse perpetuals and inverse futures are denominated in USD units."}}}}}}, "block_rfq_quote": {"type": "object", "properties": {"creation_timestamp": {"description": "The timestamp when quote was created (milliseconds since the Unix epoch)", "type": "integer", "example": 1536569522277}, "last_update_timestamp": {"type": "integer", "example": 1536569522277, "description": "Timestamp of the last update of the quote (milliseconds since the UNIX epoch)"}, "block_rfq_id": {"type": "integer", "description": "ID of the Block RFQ"}, "block_rfq_quote_id": {"type": "integer", "description": "ID of the Block RFQ quote"}, "quote_state": {"description": "State of the quote", "type": "string"}, "execution_instruction": {"$ref": "#/components/schemas/execution_instruction"}, "price": {"description": "Price of a quote", "type": "number"}, "amount": {"description": "This value multiplied by the ratio of a leg gives trade size on that leg.", "type": "number"}, "direction": {"$ref": "#/components/schemas/quote_direction"}, "filled_amount": {"$ref": "#/components/schemas/filled_amount_quote"}, "legs": {"$ref": "#/components/schemas/leg_structure"}, "hedge": {"$ref": "#/components/schemas/block_rfq_hedge_leg"}, "replaced": {"$ref": "#/components/schemas/replaced_quote"}, "label": {"type": "string", "description": "User defined label for the quote (maximum 64 characters)"}, "app_name": {"description": "The name of the application that placed the quote on behalf of the user (optional).", "type": "string", "example": "Example Application"}, "quote_state_reason": {"description": "Reason of quote cancellation", "type": "string"}}}, "quote_bids": {"type": "array", "items": {"type": "object", "properties": {"makers": {"type": "array", "items": {"type": "string", "description": "Maker of the quote"}}, "price": {"description": "Price of a quote", "type": "number"}, "last_update_timestamp": {"type": "integer", "example": 1536569522277, "description": "Timestamp of the last update of the quote (milliseconds since the UNIX epoch)"}, "execution_instruction": {"$ref": "#/components/schemas/execution_instruction"}, "amount": {"description": "This value multiplied by the ratio of a leg gives trade size on that leg.", "type": "number"}, "expires_at": {"type": "integer", "example": 1745312540321, "description": "The timestamp when the quote expires (milliseconds since the Unix epoch), equal to the earliest expiry of placed quotes"}}}}, "quote_asks": {"type": "array", "items": {"type": "object", "properties": {"makers": {"type": "array", "items": {"type": "string", "description": "Maker of the quote"}}, "price": {"description": "Price of a quote", "type": "number"}, "last_update_timestamp": {"type": "integer", "example": 1536569522277, "description": "Timestamp of the last update of the quote (milliseconds since the UNIX epoch)"}, "execution_instruction": {"$ref": "#/components/schemas/execution_instruction"}, "amount": {"description": "This value multiplied by the ratio of a leg gives trade size on that leg.", "type": "number"}, "expires_at": {"type": "integer", "example": 1745312540321, "description": "The timestamp when the quote expires (milliseconds since the Unix epoch), equal to the earliest expiry of placed quotes"}}}}, "execution_instruction": {"description": "Execution instruction of the quote. Default - `any_part_of` `\"all_or_none (AON)\"` - The quote can only be filled entirely or not at all, ensuring that its amount matches the amount specified in the Block RFQ. Additionally, 'all_or_none' quotes have priority over 'any_part_of' quotes at the same price level.`\"any_part_of (APO)\"` - The quote can be filled either partially or fully, with the filled amount potentially being less than the Block RFQ amount.", "type": "string"}, "custody_settlement": {"type": "object", "properties": {"id": {"type": "string", "description": "Unique identifier of the settlement instance"}, "status": {"description": "Status of the settlement", "type": "string", "enum": ["completed", "completed_partially", "failed", "in_progress"], "example": "completed"}, "created_at": {"description": "The timestamp when the settlement was created (milliseconds since the Unix epoch)", "type": "integer", "example": 1736712919000}, "updated_at": {"description": "Timestamp of the last update of the settlement (milliseconds since the Unix epoch)", "type": "integer", "example": 1736713920000}, "failed_at": {"description": "Timestamp (in milliseconds since the Unix epoch) when the settlement or settlement instruction failed. Present only if the status is `failed`.", "type": "integer", "example": 1736713950000}, "completed_at": {"description": "Timestamp of when the settlement was completed (if applicable)", "type": "integer", "example": 1736714000000}, "instructions": {"type": "array", "description": "Settlement currency instructions", "items": {"type": "object", "properties": {"currency": {"description": "The currency supported by custodian and exchange", "type": "string"}, "amount": {"description": "Positive value means that since the previous settlement, the client has earned/bought the asset in the exchange and settlement direction is from exchange to the client.Negative value means, since the previous settlement, the client has lost/sold the asset in the exchange and settlement direction is from client to deribit.", "type": "number", "example": 1.3141}, "custody_balance": {"description": "Custody balance of the user at the time of initiating the settlement", "type": "number", "example": 2.341}, "total_equity": {"description": "Total equity of the client between all main and sub accounts, at the time of initialising the settlement.", "type": "number", "example": 3.452}, "status": {"description": "The status of settlement instruction. Default is `pending_review`.", "type": "string", "enum": ["pending_review", "pending_execution", "completed", "rejected", "failed", "skipped"], "example": "completed"}, "settlement_id": {"description": "The id of the settlement instance", "type": "string", "example": "dec42708-2ec6-4cdd-8f9d-d49bbe94d0aa"}, "created_at": {"description": "Timestamp of when the instruction was created (milliseconds since the Unix epoch)", "type": "integer", "example": 1736712919000}, "updated_at": {"description": "Timestamp of the last update of the instruction (milliseconds since the Unix epoch)", "type": "integer", "example": 1736713920000}, "failed_at": {"description": "Timestamp (in milliseconds since the Unix epoch) when the settlement or settlement instruction failed. Present only if the status is `failed`.", "type": "integer", "example": 1736713950000}, "reviewed_at": {"description": "Timestamp (in milliseconds since the Unix epoch) when the custodian reviewed the settlement instruction. Present only after a review action has been taken.", "type": "integer", "example": 1736713986000}, "completed_at": {"description": "Timestamp (in milliseconds since the Unix epoch) when the settlement or settlement instruction was completed. Only present if the status is `completed`.", "type": "integer", "example": 1736714000000}, "review_reason": {"description": "Optional reason provided by the custodian when rejecting or ignoring a settlement instruction.", "type": "string", "example": "Custody balance mismatch"}, "review_result": {"description": "Outcome of the custodian's review. Present only after the review has been completed. Values match the `action` taken: `confirm`, `ignore`, or `reject`.", "type": "string", "example": "confirm"}}}}, "note": {"type": "string", "description": "Additional note related to the settlement", "example": "Settlement processed successfully"}}}, "unhosted_wallet": {"description": "Indicates if the address belongs to an unhosted wallet", "type": "boolean", "example": false}, "trade_allocations": {"type": "array", "description": "List of allocations for Block RFQ pre-allocation. Allows to split amount between different (sub)accounts or broker clients. Each allocation must specify either `user_id` (for direct allocation) or `client_info` object (for broker allocation), and amount. Visible only to the taker.", "items": {"type": "object", "properties": {"user_id": {"description": "User ID to allocate part of the RFQ amount. For brokers the User ID is obstructed.", "type": "integer"}, "client_info": {"description": "Client allocation info for brokers.", "type": "object", "properties": {"client_id": {"description": "ID of a client; available to broker. Represents a group of users under a common name.", "type": "integer"}, "client_link_id": {"description": "ID assigned to a single user in a client; available to broker.", "type": "integer"}, "name": {"description": "Name of the linked user within the client; available to broker.", "type": "string"}}}, "amount": {"description": "Amount allocated to this user or client.", "type": "number"}}}}, "ErrorResponse": {"type": "object", "description": "Generic error response for broken references", "properties": {"jsonrpc": {"type": "string", "enum": ["2.0"]}, "error": {"type": "object", "properties": {"code": {"type": "integer", "description": "Error code"}, "message": {"type": "string", "description": "Error message"}}, "required": ["code", "message"]}}, "required": ["jsonrpc", "error"]}, "OkResponse": {"type": "object", "description": "Successful response schema", "properties": {"jsonrpc": {"type": "string", "enum": ["2.0"]}, "result": {"type": "object", "description": "Operation result"}}, "required": ["jsonrpc", "result"]}}, "responses": {"OkResponse": {"description": "Successful response", "content": {"application/json": {"schema": {"type": "object", "properties": {"jsonrpc": {"type": "string", "enum": ["2.0"]}, "result": {"type": "object", "description": "Operation result"}}, "required": ["jsonrpc", "result"]}}}}, "ErrorResponse": {"description": "Error response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}}}}, "get_public_unsubscribe_200": {"description": "Successfully unsubscribed from channels", "content": {"application/json": {"schema": {"type": "object", "properties": {"jsonrpc": {"type": "string", "example": "2.0"}, "id": {"type": "integer", "example": 8691}, "result": {"type": "array", "description": "List of channels that were successfully unsubscribed in this request", "items": {"type": "string", "x-deribit-type": "channel"}, "example": ["deribit_price_index.btc_usd"]}}}, "examples": {"jsonObject": {"value": {"jsonrpc": "2.0", "id": 8691, "result": ["deribit_price_index.btc_usd"]}}}}}}, "get_private_list_custody_accounts_200": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/ErrorResponse"}, {"properties": {"result": {"type": "array", "items": {"$ref": "#/components/schemas/custody_account"}}}}]}, "examples": {"jsonObject": {"value": {"jsonrpc": "2.0", "id": 2515, "result": [{"name": "copper", "currency": "BTC", "client_id": "4KVcFrrzmXBR", "external_id": "24f97d44-1d72-4641-8527-811268a0bdd3", "balance": 0.5, "withdrawals_require_security_key": false, "pending_withdrawal_balance": 0.1, "auto_deposit": false}]}}}}}, "description": "Response for GET /private/list_custody_accounts"}, "get_private_custody_deposit_200": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/ErrorResponse"}, {"properties": {"result": {"$ref": "#/components/schemas/custody_account"}}}]}, "examples": {"jsonObject": {"value": {"jsonrpc": "2.0", "id": 6931, "result": {"name": "copper", "currency": "BTC", "client_id": "4KVcFrrzmXBR", "balance": 0.1, "withdrawals_require_security_key": false, "pending_withdrawal_balance": 0.1, "auto_deposit": false}}}}}}, "description": "Response for GET /private/custody_deposit"}, "get_private_custody_withdraw_200": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/ErrorResponse"}, {"properties": {"result": {"$ref": "#/components/schemas/custody_account"}}}]}, "examples": {"jsonObject": {"value": {"jsonrpc": "2.0", "id": 6931, "result": {"name": "copper", "currency": "BTC", "client_id": "4KVcFrrzmXBR", "balance": 0.1, "withdrawals_require_security_key": false, "pending_withdrawal_balance": 0.5, "auto_deposit": false}}}}}}, "description": "Response for GET /private/custody_withdraw"}, "get_private_cancel_pending_custody_withdrawals_200": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/ErrorResponse"}, {"properties": {"result": {"$ref": "#/components/schemas/custody_account"}}}]}, "examples": {"jsonObject": {"value": {"jsonrpc": "2.0", "id": 6931, "result": {"name": "copper", "currency": "BTC", "client_id": "4KVcFrrzmXBR", "balance": 0.1, "withdrawals_require_security_key": false, "pending_withdrawal_balance": 0.1, "auto_deposit": false}}}}}}, "description": "Response for GET /private/cancel_pending_custody_withdrawals"}, "get_private_list_custody_logs_200": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/ErrorResponse"}, {"properties": {"result": {"type": "object", "properties": {"has_more": {"type": "boolean"}, "logs": {"type": "array", "items": {"$ref": "#/components/schemas/custody_log"}}}}}}]}, "examples": {"jsonObject": {"value": {"jsonrpc": "2.0", "id": 38, "result": {"logs": [{"timestamp": 1588673334014, "success": true, "request_id": "48abe9a8c7004e588c46e7f70b1dd282", "request": "remove_funds", "currency": "BTC", "amount": "0.1"}, {"timestamp": 1588673004206, "success": true, "request_id": "1588673004204", "request": "withdraw_funds", "currency": "BTC", "amount": "0.10000000"}, {"timestamp": 1588672685533, "success": true, "request_id": "1588672685533", "request": "deposit_funds", "currency": "BTC", "amount": "0.00060000"}, {"timestamp": 1588672677513, "success": true, "request_id": "1588672677512", "request": "withdraw_funds", "currency": "BTC", "amount": "0.00010000"}, {"timestamp": 1588672657763, "success": true, "request_id": "1588672657763", "request": "deposit_funds", "currency": "BTC", "amount": "0.00010000"}, {"timestamp": 1588672638095, "success": true, "request_id": "1588672638093", "request": "withdraw_funds", "currency": "BTC", "amount": "0.00060000"}, {"timestamp": 1588666522903, "success": true, "request_id": "1588666522903", "request": "deposit_funds", "currency": "BTC", "amount": "0.10000000"}, {"timestamp": 1588666521899, "success": true, "request_id": "fb2436a091643ff1cdd17af054cea0f2", "request": "add_funds", "currency": "BTC", "amount": "0.1"}, {"timestamp": 1588666512557, "success": true, "request_id": "4de44a2c2fb8a36f4c7f442a03a83d9e", "request": "remove_funds", "currency": "BTC", "amount": "0.1"}, {"timestamp": 1588666490386, "success": true, "request_id": "befdc8826561c06105f5690ea09b321f", "request": "add_funds", "currency": "BTC", "amount": "0.1"}], "has_more": true}}}}}}, "description": "Response for GET /private/list_custody_logs"}, "get_private_generate_custody_deposit_address_200": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/ErrorResponse"}, {"properties": {"result": {"$ref": "#/components/schemas/custody_account"}}}]}, "examples": {"jsonObject": {"value": {"jsonrpc": "2.0", "id": 6931, "result": {"name": "cobo", "currency": "BTC", "withdrawals_require_security_key": false, "pending_withdrawal_balance": 0, "deposit_address": "2ND7NbHXgfJFKyEFWW7TjkZeGjJiTayJ75y"}}}}}}, "description": "Response for GET /private/generate_custody_deposit_address"}, "get_private_set_custody_withdrawal_address_200": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/ErrorResponse"}, {"properties": {"result": {"$ref": "#/components/schemas/custody_account"}}}]}, "examples": {"jsonObject": {"value": {"jsonrpc": "2.0", "id": 6931, "result": {"name": "cobo", "currency": "BTC", "withdrawals_require_security_key": false, "pending_withdrawal_balance": 0, "withdrawal_address": "2NBqqD5GRJ8wHy1PYyCXTe9ke5226FhavBz", "withdrawal_address_change": 1599126599097, "pending_withdrawal_address": "2ND7NbHXgfJFKyEFWW7TjkZeGjJiTayJ75y"}}}}}}, "description": "Response for GET /private/set_custody_withdrawal_address"}, "get_private_cancel_custody_withdrawal_address_change_200": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/ErrorResponse"}, {"properties": {"result": {"$ref": "#/components/schemas/custody_account"}}}]}, "examples": {"jsonObject": {"value": {"jsonrpc": "2.0", "id": 6931, "result": {"name": "cobo", "currency": "BTC", "withdrawals_require_security_key": false, "pending_withdrawal_balance": 0, "withdrawal_address": "2NBqqD5GRJ8wHy1PYyCXTe9ke5226FhavBz"}}}}}}, "description": "Response for GET /private/cancel_custody_withdrawal_address_change"}, "get_private_custody_deposit_funds_200": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/OkResponse"}]}, "examples": {"jsonObject": {"value": {"jsonrpc": "2.0", "id": 5612, "result": "ok"}}}}}, "description": "Response for GET /private/custody/deposit_funds"}, "get_private_custody_withdraw_funds_200": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/OkResponse"}]}, "examples": {"jsonObject": {"value": {"jsonrpc": "2.0", "id": 5613, "result": "ok"}}}}}, "description": "Response for GET /private/custody/withdraw_funds"}, "get_private_custody_bind_corporate_account_200": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/OkResponse"}]}, "examples": {"jsonObject": {"value": {"jsonrpc": "2.0", "id": 5614, "result": "ok"}}}}}, "description": "Response for GET /private/custody/bind_corporate_account"}, "get_private_custody_unbind_account_200": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/OkResponse"}]}, "examples": {"jsonObject": {"value": {"jsonrpc": "2.0", "id": 5614, "result": "ok"}}}}}, "description": "Response for GET /private/custody/unbind_account"}, "BookSummaryResponse": {"description": "Book summary data", "content": {"application/json": {"schema": {"type": "object", "properties": {"result": {"type": "array", "items": {"$ref": "#/components/schemas/book_summary"}}}, "required": ["result"]}}}}}}}