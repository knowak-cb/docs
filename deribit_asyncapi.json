{
  "asyncapi": "3.0.0",
  "id": "https://deribit.com/api/v2/subscriptions",
  "info": {
    "title": "Deribit Subscription Channels",
    "version": "1.0.0",
    "description": "AsyncAPI specification for Deribit subscription channels",
    "contact": {
      "name": "Deribit API Support",
      "url": "https://docs.deribit.com"
    }
  },
  "servers": {
    "production": {
      "host": "wss://www.deribit.com/ws/api/v2",
      "protocol": "wss",
      "description": "Deribit WebSocket API"
    },
    "testnet": {
      "host": "wss://test.deribit.com/ws/api/v2",
      "protocol": "wss",
      "description": "Deribit Testnet WebSocket API"
    }
  },
  "defaultContentType": "application/json",
  "channels": {
    "platform_state": {
      "address": "platform_state",
      "title": "platform_state",
      "summary": "Information about platform state.",
      "description": "",
      "parameters": {},
      "messages": {
        "platform_state_message": {
          "name": "platform_state_message",
          "title": "platform_state",
          "summary": "Information about platform state.",
          "description": "Message schema for platform_state",
          "payload": {
            "type": "object",
            "properties": {
              "method": {
                "type": "string",
                "description": "The method name",
                "example": "platform_state"
              },
              "params": {
                "type": "object",
                "description": "Message parameters"
              }
            }
          }
        }
      },
      "tags": [
        {
          "name": "platform"
        }
      ]
    },
    "platform_state.public_methods_state": {
      "address": "platform_state.public_methods_state",
      "title": "platform_state.public_methods_state",
      "summary": "Information whether unauthorized public requests are allowed",
      "description": "",
      "parameters": {},
      "messages": {
        "platform_state.public_methods_state_message": {
          "name": "platform_state.public_methods_state_message",
          "title": "platform_state.public_methods_state",
          "summary": "Information whether unauthorized public requests are allowed",
          "description": "Message schema for platform_state.public_methods_state",
          "payload": {
            "type": "object",
            "properties": {
              "method": {
                "type": "string",
                "description": "The method name",
                "example": "platform_state.public_methods_state"
              },
              "params": {
                "type": "object",
                "description": "Message parameters"
              }
            }
          }
        }
      },
      "tags": [
        {
          "name": "platform"
        }
      ]
    },
    "announcements": {
      "address": "announcements",
      "title": "announcements",
      "summary": "General announcements concerning the Deribit platform.",
      "description": "",
      "parameters": {},
      "messages": {
        "announcements_message": {
          "name": "announcements_message",
          "title": "announcements",
          "summary": "General announcements concerning the Deribit platform.",
          "description": "Message schema for announcements",
          "payload": {
            "type": "object",
            "properties": {
              "method": {
                "type": "string",
                "description": "The method name",
                "example": "announcements"
              },
              "params": {
                "type": "object",
                "description": "Message parameters"
              }
            }
          }
        }
      },
      "tags": [
        {
          "name": "announcements"
        }
      ]
    },
    "book.{instrument_name}.{interval}": {
      "address": "book.{instrument_name}.{interval}",
      "title": "book.{instrument_name}.{interval}",
      "summary": "Notifies about changes to the order book for a certain instrument.",
      "description": "<p>Notifies about changes to the order book for a certain instrument.</p>\n<p>The first notification will contain the whole book (bid and ask amounts for all prices). After that there will only be information about changes to individual price levels.</p>\n<p>The first notification will contain the amounts for all price levels (list of <code>['new', price, amount]</code> tuples). All following notifications will contain a list of tuples with action, price level and new amount (<code>[action, price, amount]</code>). Action can be either <code>new</code>, <code>change</code> or <code>delete</code>.\n<p>Each notification will contain a <code>change_id</code> field, and each message except for the first one will contain a field <code>prev_change_id</code>. If <code>prev_change_id</code> is equal to the <code>change_id</code> of the previous message, this means that no messages have been missed.</p>\n<p>The amount for perpetual and futures is in USD units, for options it is in corresponding cryptocurrency contracts, e.g., BTC or ETH.</p>",
      "parameters": {
        "instrument_name": {
          "description": "The name of the instrument"
        },
        "interval": {
          "description": "Frequency of notifications",
          "enum": [
            "raw",
            "100ms",
            "agg2"
          ]
        }
      },
      "messages": {
        "book.{instrument_name}.{interval}_message": {
          "name": "book.{instrument_name}.{interval}_message",
          "title": "book.{instrument_name}.{interval}",
          "summary": "Notifies about changes to the order book for a certain instrument.",
          "description": "Message schema for book.{instrument_name}.{interval}",
          "payload": {
            "type": "object",
            "properties": {
              "method": {
                "type": "string",
                "description": "The method name",
                "example": "book.{instrument_name}.{interval}"
              },
              "params": {
                "type": "object",
                "description": "Message parameters"
              }
            }
          }
        }
      },
      "tags": [
        {
          "name": "orderbook"
        }
      ]
    },
    "book.{instrument_name}.{group}.{depth}.{interval}": {
      "address": "book.{instrument_name}.{group}.{depth}.{interval}",
      "title": "book.{instrument_name}.{group}.{depth}.{interval}",
      "summary": "Aggregated notifications about changes to the order book for a certain instrument.",
      "description": "<p>Notifies about changes to the order book for a certain instrument.</p>\nNotifications are sent once per specified interval, with prices grouped by (rounded to) the specified group, showing the complete order book to the specified depth (number of price levels).</p>\n<p>The 'asks' and the 'bids' elements in the response are both a 'list of lists'. Each element in the outer list is a list of exactly two elements: price and amount.</p>\n<p>*price* is a price level (USD per BTC, rounded as specified by the 'group' parameter for the subscription).</p>\n<p>*amount* indicates the amount of all orders at price level. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.</p>",
      "parameters": {
        "instrument_name": {
          "description": "The name of the instrument"
        },
        "group": {
          "description": "Group prices (by rounding)",
          "enum": [
            "none",
            "1",
            "2",
            "5",
            "10",
            "25",
            "100",
            "250"
          ]
        },
        "depth": {
          "description": "Number of price levels",
          "enum": [
            "1",
            "10",
            "20"
          ]
        },
        "interval": {
          "description": "Frequency of notifications",
          "enum": [
            "raw",
            "100ms",
            "agg2"
          ]
        }
      },
      "messages": {
        "book.{instrument_name}.{group}.{depth}.{interval}_message": {
          "name": "book.{instrument_name}.{group}.{depth}.{interval}_message",
          "title": "book.{instrument_name}.{group}.{depth}.{interval}",
          "summary": "Aggregated notifications about changes to the order book for a certain instrument.",
          "description": "Message schema for book.{instrument_name}.{group}.{depth}.{interval}",
          "payload": {
            "type": "object",
            "properties": {
              "method": {
                "type": "string",
                "description": "The method name",
                "example": "book.{instrument_name}.{group}.{depth}.{interval}"
              },
              "params": {
                "type": "object",
                "description": "Message parameters"
              }
            }
          }
        }
      },
      "tags": [
        {
          "name": "orderbook"
        }
      ]
    },
    "ticker.{instrument_name}.{interval}": {
      "address": "ticker.{instrument_name}.{interval}",
      "title": "ticker.{instrument_name}.{interval}",
      "summary": "Key information about the instrument",
      "description": "",
      "parameters": {
        "instrument_name": {
          "description": "The name of the instrument"
        },
        "interval": {
          "description": "Frequency of notifications",
          "enum": [
            "raw",
            "100ms",
            "agg2"
          ]
        }
      },
      "messages": {
        "ticker.{instrument_name}.{interval}_message": {
          "name": "ticker.{instrument_name}.{interval}_message",
          "title": "ticker.{instrument_name}.{interval}",
          "summary": "Key information about the instrument",
          "description": "Message schema for ticker.{instrument_name}.{interval}",
          "payload": {
            "type": "object",
            "properties": {
              "method": {
                "type": "string",
                "description": "The method name",
                "example": "ticker.{instrument_name}.{interval}"
              },
              "params": {
                "type": "object",
                "description": "Message parameters"
              }
            }
          }
        }
      },
      "tags": [
        {
          "name": "market-data"
        }
      ]
    },
    "incremental_ticker.{instrument_name}": {
      "address": "incremental_ticker.{instrument_name}",
      "title": "incremental_ticker.{instrument_name}",
      "summary": "<p>Notifies about changes in instrument ticker (key information about the instrument).</p> <p>The first notification will contain the whole ticker. After that there will only be information about changes in the ticker.</p> <p>This event is sent at most once per second.</p>",
      "description": "",
      "parameters": {
        "instrument_name": {
          "description": "The name of the instrument"
        }
      },
      "messages": {
        "incremental_ticker.{instrument_name}_message": {
          "name": "incremental_ticker.{instrument_name}_message",
          "title": "incremental_ticker.{instrument_name}",
          "summary": "<p>Notifies about changes in instrument ticker (key information about the instrument).</p> <p>The first notification will contain the whole ticker. After that there will only be information about changes in the ticker.</p> <p>This event is sent at most once per second.</p>",
          "description": "Message schema for incremental_ticker.{instrument_name}",
          "payload": {
            "type": "object",
            "properties": {
              "method": {
                "type": "string",
                "description": "The method name",
                "example": "incremental_ticker.{instrument_name}"
              },
              "params": {
                "type": "object",
                "description": "Message parameters"
              }
            }
          }
        }
      },
      "tags": [
        {
          "name": "market-data"
        }
      ]
    },
    "perpetual.{instrument_name}.{interval}": {
      "address": "perpetual.{instrument_name}.{interval}",
      "title": "perpetual.{instrument_name}.{interval}",
      "summary": "Provide current interest rate - but only for **perpetual** instruments. Other types won't generate any notification.",
      "description": "",
      "parameters": {
        "instrument_name": {
          "description": "The name of the instrument"
        },
        "interval": {
          "description": "Frequency of notifications",
          "enum": [
            "raw",
            "100ms",
            "agg2"
          ]
        }
      },
      "messages": {
        "perpetual.{instrument_name}.{interval}_message": {
          "name": "perpetual.{instrument_name}.{interval}_message",
          "title": "perpetual.{instrument_name}.{interval}",
          "summary": "Provide current interest rate - but only for **perpetual** instruments. Other types won't generate any notification.",
          "description": "Message schema for perpetual.{instrument_name}.{interval}",
          "payload": {
            "type": "object",
            "properties": {
              "method": {
                "type": "string",
                "description": "The method name",
                "example": "perpetual.{instrument_name}.{interval}"
              },
              "params": {
                "type": "object",
                "description": "Message parameters"
              }
            }
          }
        }
      }
    },
    "quote.{instrument_name}": {
      "address": "quote.{instrument_name}",
      "title": "quote.{instrument_name}",
      "summary": "Best bid/ask price and size.",
      "description": "",
      "parameters": {
        "instrument_name": {
          "description": "The name of the instrument"
        }
      },
      "messages": {
        "quote.{instrument_name}_message": {
          "name": "quote.{instrument_name}_message",
          "title": "quote.{instrument_name}",
          "summary": "Best bid/ask price and size.",
          "description": "Message schema for quote.{instrument_name}",
          "payload": {
            "type": "object",
            "properties": {
              "method": {
                "type": "string",
                "description": "The method name",
                "example": "quote.{instrument_name}"
              },
              "params": {
                "type": "object",
                "description": "Message parameters"
              }
            }
          }
        }
      }
    },
    "trades.{instrument_name}.{interval}": {
      "address": "trades.{instrument_name}.{interval}",
      "title": "trades.{instrument_name}.{interval}",
      "summary": "Get notifications about trades for an instrument.",
      "description": "",
      "parameters": {
        "instrument_name": {
          "description": "The name of the instrument"
        },
        "interval": {
          "description": "Frequency of notifications",
          "enum": [
            "raw",
            "100ms",
            "agg2"
          ]
        }
      },
      "messages": {
        "trades.{instrument_name}.{interval}_message": {
          "name": "trades.{instrument_name}.{interval}_message",
          "title": "trades.{instrument_name}.{interval}",
          "summary": "Get notifications about trades for an instrument.",
          "description": "Message schema for trades.{instrument_name}.{interval}",
          "payload": {
            "type": "object",
            "properties": {
              "method": {
                "type": "string",
                "description": "The method name",
                "example": "trades.{instrument_name}.{interval}"
              },
              "params": {
                "type": "object",
                "description": "Message parameters"
              }
            }
          }
        }
      },
      "tags": [
        {
          "name": "trades"
        }
      ]
    },
    "block_trade_confirmations": {
      "address": "block_trade_confirmations",
      "title": "block_trade_confirmations",
      "summary": "Provides notifications regarding block trade approval",
      "description": "",
      "parameters": {},
      "messages": {
        "block_trade_confirmations_message": {
          "name": "block_trade_confirmations_message",
          "title": "block_trade_confirmations",
          "summary": "Provides notifications regarding block trade approval",
          "description": "Message schema for block_trade_confirmations",
          "payload": {
            "type": "object",
            "properties": {
              "method": {
                "type": "string",
                "description": "The method name",
                "example": "block_trade_confirmations"
              },
              "params": {
                "type": "object",
                "description": "Message parameters"
              }
            }
          }
        }
      }
    },
    "block_trade_confirmations.{currency}": {
      "address": "block_trade_confirmations.{currency}",
      "title": "block_trade_confirmations.{currency}",
      "summary": "Provides notifications regarding block trade approval. Supports filtering by currency.",
      "description": "",
      "parameters": {
        "currency": {
          "description": "Currency code",
          "enum": [
            "BTC",
            "ETH",
            "USDC",
            "USDT",
            "any"
          ]
        }
      },
      "messages": {
        "block_trade_confirmations.{currency}_message": {
          "name": "block_trade_confirmations.{currency}_message",
          "title": "block_trade_confirmations.{currency}",
          "summary": "Provides notifications regarding block trade approval. Supports filtering by currency.",
          "description": "Message schema for block_trade_confirmations.{currency}",
          "payload": {
            "type": "object",
            "properties": {
              "method": {
                "type": "string",
                "description": "The method name",
                "example": "block_trade_confirmations.{currency}"
              },
              "params": {
                "type": "object",
                "description": "Message parameters"
              }
            }
          }
        }
      }
    },
    "trades.{kind}.{currency}.{interval}": {
      "address": "trades.{kind}.{currency}.{interval}",
      "title": "trades.{kind}.{currency}.{interval}",
      "summary": "Get notifications about trades in any instrument of a given kind and given currency.",
      "description": "",
      "parameters": {
        "kind": {
          "description": "Instrument kind",
          "enum": [
            "future",
            "option",
            "spot",
            "combo"
          ]
        },
        "currency": {
          "description": "Currency code",
          "enum": [
            "BTC",
            "ETH",
            "USDC",
            "USDT",
            "any"
          ]
        },
        "interval": {
          "description": "Frequency of notifications",
          "enum": [
            "raw",
            "100ms",
            "agg2"
          ]
        }
      },
      "messages": {
        "trades.{kind}.{currency}.{interval}_message": {
          "name": "trades.{kind}.{currency}.{interval}_message",
          "title": "trades.{kind}.{currency}.{interval}",
          "summary": "Get notifications about trades in any instrument of a given kind and given currency.",
          "description": "Message schema for trades.{kind}.{currency}.{interval}",
          "payload": {
            "type": "object",
            "properties": {
              "method": {
                "type": "string",
                "description": "The method name",
                "example": "trades.{kind}.{currency}.{interval}"
              },
              "params": {
                "type": "array",
                "description": "Array of message parameters",
                "items": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "tags": [
        {
          "name": "trades"
        }
      ]
    },
    "deribit_price_index.{index_name}": {
      "address": "deribit_price_index.{index_name}",
      "title": "deribit_price_index.{index_name}",
      "summary": "",
      "description": "Provides information about current value (price) for Deribit Index",
      "parameters": {
        "index_name": {
          "description": "Index name"
        }
      },
      "messages": {
        "deribit_price_index.{index_name}_message": {
          "name": "deribit_price_index.{index_name}_message",
          "title": "deribit_price_index.{index_name}",
          "summary": "Message for deribit_price_index.{index_name}",
          "description": "Message schema for deribit_price_index.{index_name}",
          "payload": {
            "type": "object",
            "properties": {
              "method": {
                "type": "string",
                "description": "The method name",
                "example": "deribit_price_index.{index_name}"
              },
              "params": {
                "type": "object",
                "description": "Message parameters"
              }
            }
          }
        }
      },
      "tags": [
        {
          "name": "indices"
        }
      ]
    },
    "deribit_price_ranking.{index_name}": {
      "address": "deribit_price_ranking.{index_name}",
      "title": "deribit_price_ranking.{index_name}",
      "summary": "",
      "description": "Provides information about current value (price) for stock exchanges used to calculate Deribit Index",
      "parameters": {
        "index_name": {
          "description": "Index name"
        }
      },
      "messages": {
        "deribit_price_ranking.{index_name}_message": {
          "name": "deribit_price_ranking.{index_name}_message",
          "title": "deribit_price_ranking.{index_name}",
          "summary": "Message for deribit_price_ranking.{index_name}",
          "description": "Message schema for deribit_price_ranking.{index_name}",
          "payload": {
            "type": "object",
            "properties": {
              "method": {
                "type": "string",
                "description": "The method name",
                "example": "deribit_price_ranking.{index_name}"
              },
              "params": {
                "type": "object",
                "description": "Message parameters"
              }
            }
          }
        }
      },
      "tags": [
        {
          "name": "indices"
        }
      ]
    },
    "deribit_price_statistics.{index_name}": {
      "address": "deribit_price_statistics.{index_name}",
      "title": "deribit_price_statistics.{index_name}",
      "summary": "",
      "description": "This subscription provides basic statistics about Deribit Index",
      "parameters": {
        "index_name": {
          "description": "Index name"
        }
      },
      "messages": {
        "deribit_price_statistics.{index_name}_message": {
          "name": "deribit_price_statistics.{index_name}_message",
          "title": "deribit_price_statistics.{index_name}",
          "summary": "Message for deribit_price_statistics.{index_name}",
          "description": "Message schema for deribit_price_statistics.{index_name}",
          "payload": {
            "type": "object",
            "properties": {
              "method": {
                "type": "string",
                "description": "The method name",
                "example": "deribit_price_statistics.{index_name}"
              },
              "params": {
                "type": "object",
                "description": "Message parameters"
              }
            }
          }
        }
      },
      "tags": [
        {
          "name": "indices"
        }
      ]
    },
    "deribit_volatility_index.{index_name}": {
      "address": "deribit_volatility_index.{index_name}",
      "title": "deribit_volatility_index.{index_name}",
      "summary": "",
      "description": "Provides volatility index subscription",
      "parameters": {
        "index_name": {
          "description": "Index name"
        }
      },
      "messages": {
        "deribit_volatility_index.{index_name}_message": {
          "name": "deribit_volatility_index.{index_name}_message",
          "title": "deribit_volatility_index.{index_name}",
          "summary": "Message for deribit_volatility_index.{index_name}",
          "description": "Message schema for deribit_volatility_index.{index_name}",
          "payload": {
            "type": "object",
            "properties": {
              "method": {
                "type": "string",
                "description": "The method name",
                "example": "deribit_volatility_index.{index_name}"
              },
              "params": {
                "type": "object",
                "description": "Message parameters"
              }
            }
          }
        }
      }
    },
    "markprice.options.{index_name}": {
      "address": "markprice.options.{index_name}",
      "title": "markprice.options.{index_name}",
      "summary": "Provides information about options markprices.",
      "description": "",
      "parameters": {
        "index_name": {
          "description": "Index name"
        }
      },
      "messages": {
        "markprice.options.{index_name}_message": {
          "name": "markprice.options.{index_name}_message",
          "title": "markprice.options.{index_name}",
          "summary": "Provides information about options markprices.",
          "description": "Message schema for markprice.options.{index_name}",
          "payload": {
            "type": "object",
            "properties": {
              "method": {
                "type": "string",
                "description": "The method name",
                "example": "markprice.options.{index_name}"
              },
              "params": {
                "type": "object",
                "description": "Message parameters"
              }
            }
          }
        }
      }
    },
    "estimated_expiration_price.{index_name}": {
      "address": "estimated_expiration_price.{index_name}",
      "title": "estimated_expiration_price.{index_name}",
      "summary": "",
      "description": "Returns calculated (estimated) ending price for given index.",
      "parameters": {
        "index_name": {
          "description": "Index name"
        }
      },
      "messages": {
        "estimated_expiration_price.{index_name}_message": {
          "name": "estimated_expiration_price.{index_name}_message",
          "title": "estimated_expiration_price.{index_name}",
          "summary": "Message for estimated_expiration_price.{index_name}",
          "description": "Message schema for estimated_expiration_price.{index_name}",
          "payload": {
            "type": "object",
            "properties": {
              "method": {
                "type": "string",
                "description": "The method name",
                "example": "estimated_expiration_price.{index_name}"
              },
              "params": {
                "type": "object",
                "description": "Message parameters"
              }
            }
          }
        }
      }
    },
    "chart.trades.{instrument_name}.{resolution}": {
      "address": "chart.trades.{instrument_name}.{resolution}",
      "title": "chart.trades.{instrument_name}.{resolution}",
      "summary": "Publicly available market data used to generate a TradingView candle chart. During a single resolution period, many events can be sent, each with updated values for the recent period.<br/><br/> **NOTICE** When there is no trade during the requested resolution period (e.g. 1 minute), then a filling sample is generated which uses data from the last available trade candle (open and close values).",
      "description": "",
      "parameters": {
        "instrument_name": {
          "description": "The name of the instrument"
        },
        "resolution": {
          "description": "Chart resolution",
          "enum": [
            "1",
            "3",
            "5",
            "10",
            "15",
            "30",
            "60",
            "120",
            "180",
            "240",
            "D",
            "W",
            "M"
          ]
        }
      },
      "messages": {
        "chart.trades.{instrument_name}.{resolution}_message": {
          "name": "chart.trades.{instrument_name}.{resolution}_message",
          "title": "chart.trades.{instrument_name}.{resolution}",
          "summary": "Publicly available market data used to generate a TradingView candle chart. During a single resolution period, many events can be sent, each with updated values for the recent period.<br/><br/> **NOTICE** When there is no trade during the requested resolution period (e.g. 1 minute), then a filling sample is generated which uses data from the last available trade candle (open and close values).",
          "description": "Message schema for chart.trades.{instrument_name}.{resolution}",
          "payload": {
            "type": "object",
            "properties": {
              "method": {
                "type": "string",
                "description": "The method name",
                "example": "chart.trades.{instrument_name}.{resolution}"
              },
              "params": {
                "type": "object",
                "description": "Message parameters"
              }
            }
          }
        }
      },
      "tags": [
        {
          "name": "trades"
        }
      ]
    },
    "user.mmp_trigger.{index_name}": {
      "address": "user.mmp_trigger.{index_name}",
      "title": "user.mmp_trigger.{index_name}",
      "summary": "",
      "description": "Triggered when one of mmp limits is crossed",
      "parameters": {
        "index_name": {
          "description": "Index name"
        }
      },
      "messages": {
        "user.mmp_trigger.{index_name}_message": {
          "name": "user.mmp_trigger.{index_name}_message",
          "title": "user.mmp_trigger.{index_name}",
          "summary": "Message for user.mmp_trigger.{index_name}",
          "description": "Message schema for user.mmp_trigger.{index_name}",
          "payload": {
            "type": "object",
            "properties": {
              "method": {
                "type": "string",
                "description": "The method name",
                "example": "user.mmp_trigger.{index_name}"
              },
              "params": {
                "type": "object",
                "description": "Message parameters"
              }
            }
          }
        }
      },
      "tags": [
        {
          "name": "private"
        }
      ]
    },
    "user.portfolio.{currency}": {
      "address": "user.portfolio.{currency}",
      "title": "user.portfolio.{currency}",
      "summary": "",
      "description": "Provides information about current user portfolio",
      "parameters": {
        "currency": {
          "description": "Currency code",
          "enum": [
            "BTC",
            "ETH",
            "USDC",
            "USDT",
            "any"
          ]
        }
      },
      "messages": {
        "user.portfolio.{currency}_message": {
          "name": "user.portfolio.{currency}_message",
          "title": "user.portfolio.{currency}",
          "summary": "Message for user.portfolio.{currency}",
          "description": "Message schema for user.portfolio.{currency}",
          "payload": {
            "type": "object",
            "properties": {
              "method": {
                "type": "string",
                "description": "The method name",
                "example": "user.portfolio.{currency}"
              },
              "params": {
                "type": "object",
                "description": "Message parameters"
              }
            }
          }
        }
      },
      "tags": [
        {
          "name": "private"
        },
        {
          "name": "portfolio"
        }
      ]
    },
    "user.trades.{instrument_name}.{interval}": {
      "address": "user.trades.{instrument_name}.{interval}",
      "title": "user.trades.{instrument_name}.{interval}",
      "summary": "Get notifications about the user's trades in an instrument.",
      "description": "",
      "parameters": {
        "instrument_name": {
          "description": "The name of the instrument"
        },
        "interval": {
          "description": "Frequency of notifications",
          "enum": [
            "raw",
            "100ms",
            "agg2"
          ]
        }
      },
      "messages": {
        "user.trades.{instrument_name}.{interval}_message": {
          "name": "user.trades.{instrument_name}.{interval}_message",
          "title": "user.trades.{instrument_name}.{interval}",
          "summary": "Get notifications about the user's trades in an instrument.",
          "description": "Message schema for user.trades.{instrument_name}.{interval}",
          "payload": {
            "type": "object",
            "properties": {
              "method": {
                "type": "string",
                "description": "The method name",
                "example": "user.trades.{instrument_name}.{interval}"
              },
              "params": {
                "type": "array",
                "description": "Array of message parameters",
                "items": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "tags": [
        {
          "name": "private"
        },
        {
          "name": "trades"
        }
      ]
    },
    "user.trades.{kind}.{currency}.{interval}": {
      "address": "user.trades.{kind}.{currency}.{interval}",
      "title": "user.trades.{kind}.{currency}.{interval}",
      "summary": "Get notifications about the user's trades in any instrument of a given kind and given currency.",
      "description": "",
      "parameters": {
        "kind": {
          "description": "Instrument kind",
          "enum": [
            "future",
            "option",
            "spot",
            "combo"
          ]
        },
        "currency": {
          "description": "Currency code",
          "enum": [
            "BTC",
            "ETH",
            "USDC",
            "USDT",
            "any"
          ]
        },
        "interval": {
          "description": "Frequency of notifications",
          "enum": [
            "raw",
            "100ms",
            "agg2"
          ]
        }
      },
      "messages": {
        "user.trades.{kind}.{currency}.{interval}_message": {
          "name": "user.trades.{kind}.{currency}.{interval}_message",
          "title": "user.trades.{kind}.{currency}.{interval}",
          "summary": "Get notifications about the user's trades in any instrument of a given kind and given currency.",
          "description": "Message schema for user.trades.{kind}.{currency}.{interval}",
          "payload": {
            "type": "object",
            "properties": {
              "method": {
                "type": "string",
                "description": "The method name",
                "example": "user.trades.{kind}.{currency}.{interval}"
              },
              "params": {
                "type": "array",
                "description": "Array of message parameters",
                "items": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "tags": [
        {
          "name": "private"
        },
        {
          "name": "trades"
        }
      ]
    },
    "user.combo_trades.{instrument_name}.{interval}": {
      "address": "user.combo_trades.{instrument_name}.{interval}",
      "title": "user.combo_trades.{instrument_name}.{interval}",
      "summary": "Get notifications about the user's trades in an instrument (trades contain `legs` field).",
      "description": "",
      "parameters": {
        "instrument_name": {
          "description": "The name of the instrument"
        },
        "interval": {
          "description": "Frequency of notifications",
          "enum": [
            "raw",
            "100ms",
            "agg2"
          ]
        }
      },
      "messages": {
        "user.combo_trades.{instrument_name}.{interval}_message": {
          "name": "user.combo_trades.{instrument_name}.{interval}_message",
          "title": "user.combo_trades.{instrument_name}.{interval}",
          "summary": "Get notifications about the user's trades in an instrument (trades contain `legs` field).",
          "description": "Message schema for user.combo_trades.{instrument_name}.{interval}",
          "payload": {
            "type": "object",
            "properties": {
              "method": {
                "type": "string",
                "description": "The method name",
                "example": "user.combo_trades.{instrument_name}.{interval}"
              },
              "params": {
                "type": "array",
                "description": "Array of message parameters",
                "items": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "tags": [
        {
          "name": "private"
        },
        {
          "name": "trades"
        }
      ]
    },
    "user.combo_trades.{kind}.{currency}.{interval}": {
      "address": "user.combo_trades.{kind}.{currency}.{interval}",
      "title": "user.combo_trades.{kind}.{currency}.{interval}",
      "summary": "Get notifications about the user's trades in any instrument of a given kind and given currency (trades contain `legs` field).",
      "description": "",
      "parameters": {
        "kind": {
          "description": "Instrument kind",
          "enum": [
            "future",
            "option",
            "spot",
            "combo"
          ]
        },
        "currency": {
          "description": "Currency code",
          "enum": [
            "BTC",
            "ETH",
            "USDC",
            "USDT",
            "any"
          ]
        },
        "interval": {
          "description": "Frequency of notifications",
          "enum": [
            "raw",
            "100ms",
            "agg2"
          ]
        }
      },
      "messages": {
        "user.combo_trades.{kind}.{currency}.{interval}_message": {
          "name": "user.combo_trades.{kind}.{currency}.{interval}_message",
          "title": "user.combo_trades.{kind}.{currency}.{interval}",
          "summary": "Get notifications about the user's trades in any instrument of a given kind and given currency (trades contain `legs` field).",
          "description": "Message schema for user.combo_trades.{kind}.{currency}.{interval}",
          "payload": {
            "type": "object",
            "properties": {
              "method": {
                "type": "string",
                "description": "The method name",
                "example": "user.combo_trades.{kind}.{currency}.{interval}"
              },
              "params": {
                "type": "array",
                "description": "Array of message parameters",
                "items": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "tags": [
        {
          "name": "private"
        },
        {
          "name": "trades"
        }
      ]
    },
    "instrument.state.{kind}.{currency}": {
      "address": "instrument.state.{kind}.{currency}",
      "title": "instrument.state.{kind}.{currency}",
      "summary": "Get notifications about new or terminated instruments of given kind in given currency. **(Please note that our system does not send notifications when currencies are locked. Users are advised to subscribe to the [platform_state](https://docs.deribit.com/#platform_state) channel to monitor the state of currencies actively.)**",
      "description": "",
      "parameters": {
        "kind": {
          "description": "Instrument kind",
          "enum": [
            "future",
            "option",
            "spot",
            "combo"
          ]
        },
        "currency": {
          "description": "Currency code",
          "enum": [
            "BTC",
            "ETH",
            "USDC",
            "USDT",
            "any"
          ]
        }
      },
      "messages": {
        "instrument.state.{kind}.{currency}_message": {
          "name": "instrument.state.{kind}.{currency}_message",
          "title": "instrument.state.{kind}.{currency}",
          "summary": "Get notifications about new or terminated instruments of given kind in given currency. **(Please note that our system does not send notifications when currencies are locked. Users are advised to subscribe to the [platform_state](https://docs.deribit.com/#platform_state) channel to monitor the state of currencies actively.)**",
          "description": "Message schema for instrument.state.{kind}.{currency}",
          "payload": {
            "type": "object",
            "properties": {
              "method": {
                "type": "string",
                "description": "The method name",
                "example": "instrument.state.{kind}.{currency}"
              },
              "params": {
                "type": "object",
                "description": "Message parameters"
              }
            }
          }
        }
      },
      "tags": [
        {
          "name": "internal"
        }
      ]
    },
    "user.orders.{instrument_name}.raw": {
      "address": "user.orders.{instrument_name}.raw",
      "title": "user.orders.{instrument_name}.raw",
      "summary": "Get notifications about changes in user's orders for given instrument.",
      "description": "",
      "parameters": {
        "instrument_name": {
          "description": "The name of the instrument"
        }
      },
      "messages": {
        "user.orders.{instrument_name}.raw_message": {
          "name": "user.orders.{instrument_name}.raw_message",
          "title": "user.orders.{instrument_name}.raw",
          "summary": "Get notifications about changes in user's orders for given instrument.",
          "description": "Message schema for user.orders.{instrument_name}.raw",
          "payload": {
            "type": "object",
            "properties": {
              "method": {
                "type": "string",
                "description": "The method name",
                "example": "user.orders.{instrument_name}.raw"
              },
              "params": {
                "type": "object",
                "description": "Message parameters"
              }
            }
          }
        }
      },
      "tags": [
        {
          "name": "private"
        },
        {
          "name": "orders"
        }
      ]
    },
    "user.orders.{instrument_name}.{interval}": {
      "address": "user.orders.{instrument_name}.{interval}",
      "title": "user.orders.{instrument_name}.{interval}",
      "summary": "Get notifications about changes in user's orders for given instrument.",
      "description": "",
      "parameters": {
        "instrument_name": {
          "description": "The name of the instrument"
        },
        "interval": {
          "description": "Frequency of notifications",
          "enum": [
            "raw",
            "100ms",
            "agg2"
          ]
        }
      },
      "messages": {
        "user.orders.{instrument_name}.{interval}_message": {
          "name": "user.orders.{instrument_name}.{interval}_message",
          "title": "user.orders.{instrument_name}.{interval}",
          "summary": "Get notifications about changes in user's orders for given instrument.",
          "description": "Message schema for user.orders.{instrument_name}.{interval}",
          "payload": {
            "type": "object",
            "properties": {
              "method": {
                "type": "string",
                "description": "The method name",
                "example": "user.orders.{instrument_name}.{interval}"
              },
              "params": {
                "type": "array",
                "description": "Array of message parameters",
                "items": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "tags": [
        {
          "name": "private"
        },
        {
          "name": "orders"
        }
      ]
    },
    "user.orders.{kind}.{currency}.raw": {
      "address": "user.orders.{kind}.{currency}.raw",
      "title": "user.orders.{kind}.{currency}.raw",
      "summary": "Get notifications about changes in user's orders in instruments of a given kind and currency.",
      "description": "",
      "parameters": {
        "kind": {
          "description": "Instrument kind",
          "enum": [
            "future",
            "option",
            "spot",
            "combo"
          ]
        },
        "currency": {
          "description": "Currency code",
          "enum": [
            "BTC",
            "ETH",
            "USDC",
            "USDT",
            "any"
          ]
        }
      },
      "messages": {
        "user.orders.{kind}.{currency}.raw_message": {
          "name": "user.orders.{kind}.{currency}.raw_message",
          "title": "user.orders.{kind}.{currency}.raw",
          "summary": "Get notifications about changes in user's orders in instruments of a given kind and currency.",
          "description": "Message schema for user.orders.{kind}.{currency}.raw",
          "payload": {
            "type": "object",
            "properties": {
              "method": {
                "type": "string",
                "description": "The method name",
                "example": "user.orders.{kind}.{currency}.raw"
              },
              "params": {
                "type": "object",
                "description": "Message parameters"
              }
            }
          }
        }
      },
      "tags": [
        {
          "name": "private"
        },
        {
          "name": "orders"
        }
      ]
    },
    "user.orders.{kind}.{currency}.{interval}": {
      "address": "user.orders.{kind}.{currency}.{interval}",
      "title": "user.orders.{kind}.{currency}.{interval}",
      "summary": "Get notifications about changes in user's orders in instruments of a given kind and currency.",
      "description": "",
      "parameters": {
        "kind": {
          "description": "Instrument kind",
          "enum": [
            "future",
            "option",
            "spot",
            "combo"
          ]
        },
        "currency": {
          "description": "Currency code",
          "enum": [
            "BTC",
            "ETH",
            "USDC",
            "USDT",
            "any"
          ]
        },
        "interval": {
          "description": "Frequency of notifications",
          "enum": [
            "raw",
            "100ms",
            "agg2"
          ]
        }
      },
      "messages": {
        "user.orders.{kind}.{currency}.{interval}_message": {
          "name": "user.orders.{kind}.{currency}.{interval}_message",
          "title": "user.orders.{kind}.{currency}.{interval}",
          "summary": "Get notifications about changes in user's orders in instruments of a given kind and currency.",
          "description": "Message schema for user.orders.{kind}.{currency}.{interval}",
          "payload": {
            "type": "object",
            "properties": {
              "method": {
                "type": "string",
                "description": "The method name",
                "example": "user.orders.{kind}.{currency}.{interval}"
              },
              "params": {
                "type": "array",
                "description": "Array of message parameters",
                "items": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "tags": [
        {
          "name": "private"
        },
        {
          "name": "orders"
        }
      ]
    },
    "user.changes.{instrument_name}.{interval}": {
      "address": "user.changes.{instrument_name}.{interval}",
      "title": "user.changes.{instrument_name}.{interval}",
      "summary": "Get notifications about the user's updates related to order, trades, etc. in an instrument.",
      "description": "",
      "parameters": {
        "instrument_name": {
          "description": "The name of the instrument"
        },
        "interval": {
          "description": "Frequency of notifications",
          "enum": [
            "raw",
            "100ms",
            "agg2"
          ]
        }
      },
      "messages": {
        "user.changes.{instrument_name}.{interval}_message": {
          "name": "user.changes.{instrument_name}.{interval}_message",
          "title": "user.changes.{instrument_name}.{interval}",
          "summary": "Get notifications about the user's updates related to order, trades, etc. in an instrument.",
          "description": "Message schema for user.changes.{instrument_name}.{interval}",
          "payload": {
            "type": "object",
            "properties": {
              "method": {
                "type": "string",
                "description": "The method name",
                "example": "user.changes.{instrument_name}.{interval}"
              },
              "params": {
                "type": "array",
                "description": "Array of message parameters",
                "items": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "tags": [
        {
          "name": "private"
        }
      ]
    },
    "user.changes.{kind}.{currency}.{interval}": {
      "address": "user.changes.{kind}.{currency}.{interval}",
      "title": "user.changes.{kind}.{currency}.{interval}",
      "summary": "Get notifications about changes in user's updates related to order, trades, etc. in instruments of a given kind and currency.",
      "description": "",
      "parameters": {
        "kind": {
          "description": "Instrument kind",
          "enum": [
            "future",
            "option",
            "spot",
            "combo"
          ]
        },
        "currency": {
          "description": "Currency code",
          "enum": [
            "BTC",
            "ETH",
            "USDC",
            "USDT",
            "any"
          ]
        },
        "interval": {
          "description": "Frequency of notifications",
          "enum": [
            "raw",
            "100ms",
            "agg2"
          ]
        }
      },
      "messages": {
        "user.changes.{kind}.{currency}.{interval}_message": {
          "name": "user.changes.{kind}.{currency}.{interval}_message",
          "title": "user.changes.{kind}.{currency}.{interval}",
          "summary": "Get notifications about changes in user's updates related to order, trades, etc. in instruments of a given kind and currency.",
          "description": "Message schema for user.changes.{kind}.{currency}.{interval}",
          "payload": {
            "type": "object",
            "properties": {
              "method": {
                "type": "string",
                "description": "The method name",
                "example": "user.changes.{kind}.{currency}.{interval}"
              },
              "params": {
                "type": "array",
                "description": "Array of message parameters",
                "items": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "tags": [
        {
          "name": "private"
        }
      ]
    },
    "user.access_log": {
      "address": "user.access_log",
      "title": "user.access_log",
      "summary": "Get notifications about security events related to the account",
      "description": "",
      "parameters": {},
      "messages": {
        "user.access_log_message": {
          "name": "user.access_log_message",
          "title": "user.access_log",
          "summary": "Get notifications about security events related to the account",
          "description": "Message schema for user.access_log",
          "payload": {
            "type": "object",
            "properties": {
              "method": {
                "type": "string",
                "description": "The method name",
                "example": "user.access_log"
              },
              "params": {
                "type": "object",
                "description": "Message parameters"
              }
            }
          }
        }
      },
      "tags": [
        {
          "name": "private"
        }
      ]
    },
    "user.lock": {
      "address": "user.lock",
      "title": "user.lock",
      "summary": "Get notification when account is locked/unlocked",
      "description": "",
      "parameters": {},
      "messages": {
        "user.lock_message": {
          "name": "user.lock_message",
          "title": "user.lock",
          "summary": "Get notification when account is locked/unlocked",
          "description": "Message schema for user.lock",
          "payload": {
            "type": "object",
            "properties": {
              "method": {
                "type": "string",
                "description": "The method name",
                "example": "user.lock"
              },
              "params": {
                "type": "object",
                "description": "Message parameters"
              }
            }
          }
        }
      },
      "tags": [
        {
          "name": "private"
        }
      ]
    },
    "block_rfq.maker.{currency}": {
      "address": "block_rfq.maker.{currency}",
      "title": "block_rfq.maker.{currency}",
      "summary": "Get notification when new Block RFQ is created",
      "description": "",
      "parameters": {
        "currency": {
          "description": "Currency code",
          "enum": [
            "BTC",
            "ETH",
            "USDC",
            "USDT",
            "any"
          ]
        }
      },
      "messages": {
        "block_rfq.maker.{currency}_message": {
          "name": "block_rfq.maker.{currency}_message",
          "title": "block_rfq.maker.{currency}",
          "summary": "Get notification when new Block RFQ is created",
          "description": "Message schema for block_rfq.maker.{currency}",
          "payload": {
            "type": "object",
            "properties": {
              "method": {
                "type": "string",
                "description": "The method name",
                "example": "block_rfq.maker.{currency}"
              },
              "params": {
                "type": "object",
                "description": "Message parameters"
              }
            }
          }
        }
      },
      "tags": [
        {
          "name": "private"
        },
        {
          "name": "block-trading"
        }
      ]
    },
    "block_rfq.taker.{currency}": {
      "address": "block_rfq.taker.{currency}",
      "title": "block_rfq.taker.{currency}",
      "summary": "Get notification about state of your Block RFQ. `trades` are only visible if the Block RFQ was filled. Please note that after Block RFQ creation, a grace period of 5 seconds begins, during which the taker cannot see quotes or trade the Block RFQ.",
      "description": "",
      "parameters": {
        "currency": {
          "description": "Currency code",
          "enum": [
            "BTC",
            "ETH",
            "USDC",
            "USDT",
            "any"
          ]
        }
      },
      "messages": {
        "block_rfq.taker.{currency}_message": {
          "name": "block_rfq.taker.{currency}_message",
          "title": "block_rfq.taker.{currency}",
          "summary": "Get notification about state of your Block RFQ. `trades` are only visible if the Block RFQ was filled. Please note that after Block RFQ creation, a grace period of 5 seconds begins, during which the taker cannot see quotes or trade the Block RFQ.",
          "description": "Message schema for block_rfq.taker.{currency}",
          "payload": {
            "type": "object",
            "properties": {
              "method": {
                "type": "string",
                "description": "The method name",
                "example": "block_rfq.taker.{currency}"
              },
              "params": {
                "type": "object",
                "description": "Message parameters"
              }
            }
          }
        }
      },
      "tags": [
        {
          "name": "private"
        },
        {
          "name": "block-trading"
        }
      ]
    },
    "block_rfq.maker.quotes.{currency}": {
      "address": "block_rfq.maker.quotes.{currency}",
      "title": "block_rfq.maker.quotes.{currency}",
      "summary": "Get notification about state of your Block RFQ quotes",
      "description": "",
      "parameters": {
        "currency": {
          "description": "Currency code",
          "enum": [
            "BTC",
            "ETH",
            "USDC",
            "USDT",
            "any"
          ]
        }
      },
      "messages": {
        "block_rfq.maker.quotes.{currency}_message": {
          "name": "block_rfq.maker.quotes.{currency}_message",
          "title": "block_rfq.maker.quotes.{currency}",
          "summary": "Get notification about state of your Block RFQ quotes",
          "description": "Message schema for block_rfq.maker.quotes.{currency}",
          "payload": {
            "type": "object",
            "properties": {
              "method": {
                "type": "string",
                "description": "The method name",
                "example": "block_rfq.maker.quotes.{currency}"
              },
              "params": {
                "type": "object",
                "description": "Message parameters"
              }
            }
          }
        }
      },
      "tags": [
        {
          "name": "private"
        },
        {
          "name": "block-trading"
        }
      ]
    },
    "block_rfq.trades.{currency}": {
      "address": "block_rfq.trades.{currency}",
      "title": "block_rfq.trades.{currency}",
      "summary": "Get notification about recent Block RFQ trades",
      "description": "",
      "parameters": {
        "currency": {
          "description": "Currency code",
          "enum": [
            "BTC",
            "ETH",
            "USDC",
            "USDT",
            "any"
          ]
        }
      },
      "messages": {
        "block_rfq.trades.{currency}_message": {
          "name": "block_rfq.trades.{currency}_message",
          "title": "block_rfq.trades.{currency}",
          "summary": "Get notification about recent Block RFQ trades",
          "description": "Message schema for block_rfq.trades.{currency}",
          "payload": {
            "type": "object",
            "properties": {
              "method": {
                "type": "string",
                "description": "The method name",
                "example": "block_rfq.trades.{currency}"
              },
              "params": {
                "type": "object",
                "description": "Message parameters"
              }
            }
          }
        }
      },
      "tags": [
        {
          "name": "trades"
        }
      ]
    }
  },
  "operations": {
    "subscribe_platform_state": {
      "title": "Subscribe to platform_state",
      "summary": "Information about platform state.",
      "description": "",
      "action": "receive",
      "channel": {
        "$ref": "#/channels/platform_state"
      },
      "messages": [
        {
          "$ref": "#/channels/platform_state/messages/platform_state_message"
        }
      ],
      "tags": [
        {
          "name": "platform"
        }
      ]
    },
    "subscribe_platform_state.public_methods_state": {
      "title": "Subscribe to platform_state.public_methods_state",
      "summary": "Information whether unauthorized public requests are allowed",
      "description": "",
      "action": "receive",
      "channel": {
        "$ref": "#/channels/platform_state.public_methods_state"
      },
      "messages": [
        {
          "$ref": "#/channels/platform_state.public_methods_state/messages/platform_state.public_methods_state_message"
        }
      ],
      "tags": [
        {
          "name": "platform"
        }
      ]
    },
    "subscribe_announcements": {
      "title": "Subscribe to announcements",
      "summary": "General announcements concerning the Deribit platform.",
      "description": "",
      "action": "receive",
      "channel": {
        "$ref": "#/channels/announcements"
      },
      "messages": [
        {
          "$ref": "#/channels/announcements/messages/announcements_message"
        }
      ],
      "tags": [
        {
          "name": "announcements"
        }
      ]
    },
    "subscribe_book.{instrument_name}.{interval}": {
      "title": "Subscribe to book.{instrument_name}.{interval}",
      "summary": "Notifies about changes to the order book for a certain instrument.",
      "description": "<p>Notifies about changes to the order book for a certain instrument.</p>\n<p>The first notification will contain the whole book (bid and ask amounts for all prices). After that there will only be information about changes to individual price levels.</p>\n<p>The first notification will contain the amounts for all price levels (list of <code>['new', price, amount]</code> tuples). All following notifications will contain a list of tuples with action, price level and new amount (<code>[action, price, amount]</code>). Action can be either <code>new</code>, <code>change</code> or <code>delete</code>.\n<p>Each notification will contain a <code>change_id</code> field, and each message except for the first one will contain a field <code>prev_change_id</code>. If <code>prev_change_id</code> is equal to the <code>change_id</code> of the previous message, this means that no messages have been missed.</p>\n<p>The amount for perpetual and futures is in USD units, for options it is in corresponding cryptocurrency contracts, e.g., BTC or ETH.</p>",
      "action": "receive",
      "channel": {
        "$ref": "#/channels/book.{instrument_name}.{interval}"
      },
      "messages": [
        {
          "$ref": "#/channels/book.{instrument_name}.{interval}/messages/book.{instrument_name}.{interval}_message"
        }
      ],
      "tags": [
        {
          "name": "orderbook"
        }
      ]
    },
    "subscribe_book.{instrument_name}.{group}.{depth}.{interval}": {
      "title": "Subscribe to book.{instrument_name}.{group}.{depth}.{interval}",
      "summary": "Aggregated notifications about changes to the order book for a certain instrument.",
      "description": "<p>Notifies about changes to the order book for a certain instrument.</p>\nNotifications are sent once per specified interval, with prices grouped by (rounded to) the specified group, showing the complete order book to the specified depth (number of price levels).</p>\n<p>The 'asks' and the 'bids' elements in the response are both a 'list of lists'. Each element in the outer list is a list of exactly two elements: price and amount.</p>\n<p>*price* is a price level (USD per BTC, rounded as specified by the 'group' parameter for the subscription).</p>\n<p>*amount* indicates the amount of all orders at price level. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.</p>",
      "action": "receive",
      "channel": {
        "$ref": "#/channels/book.{instrument_name}.{group}.{depth}.{interval}"
      },
      "messages": [
        {
          "$ref": "#/channels/book.{instrument_name}.{group}.{depth}.{interval}/messages/book.{instrument_name}.{group}.{depth}.{interval}_message"
        }
      ],
      "tags": [
        {
          "name": "orderbook"
        }
      ]
    },
    "subscribe_ticker.{instrument_name}.{interval}": {
      "title": "Subscribe to ticker.{instrument_name}.{interval}",
      "summary": "Key information about the instrument",
      "description": "",
      "action": "receive",
      "channel": {
        "$ref": "#/channels/ticker.{instrument_name}.{interval}"
      },
      "messages": [
        {
          "$ref": "#/channels/ticker.{instrument_name}.{interval}/messages/ticker.{instrument_name}.{interval}_message"
        }
      ],
      "tags": [
        {
          "name": "market-data"
        }
      ]
    },
    "subscribe_incremental_ticker.{instrument_name}": {
      "title": "Subscribe to incremental_ticker.{instrument_name}",
      "summary": "<p>Notifies about changes in instrument ticker (key information about the instrument).</p> <p>The first notification will contain the whole ticker. After that there will only be information about changes in the ticker.</p> <p>This event is sent at most once per second.</p>",
      "description": "",
      "action": "receive",
      "channel": {
        "$ref": "#/channels/incremental_ticker.{instrument_name}"
      },
      "messages": [
        {
          "$ref": "#/channels/incremental_ticker.{instrument_name}/messages/incremental_ticker.{instrument_name}_message"
        }
      ],
      "tags": [
        {
          "name": "market-data"
        }
      ]
    },
    "subscribe_perpetual.{instrument_name}.{interval}": {
      "title": "Subscribe to perpetual.{instrument_name}.{interval}",
      "summary": "Provide current interest rate - but only for **perpetual** instruments. Other types won't generate any notification.",
      "description": "",
      "action": "receive",
      "channel": {
        "$ref": "#/channels/perpetual.{instrument_name}.{interval}"
      },
      "messages": [
        {
          "$ref": "#/channels/perpetual.{instrument_name}.{interval}/messages/perpetual.{instrument_name}.{interval}_message"
        }
      ]
    },
    "subscribe_quote.{instrument_name}": {
      "title": "Subscribe to quote.{instrument_name}",
      "summary": "Best bid/ask price and size.",
      "description": "",
      "action": "receive",
      "channel": {
        "$ref": "#/channels/quote.{instrument_name}"
      },
      "messages": [
        {
          "$ref": "#/channels/quote.{instrument_name}/messages/quote.{instrument_name}_message"
        }
      ]
    },
    "subscribe_trades.{instrument_name}.{interval}": {
      "title": "Subscribe to trades.{instrument_name}.{interval}",
      "summary": "Get notifications about trades for an instrument.",
      "description": "",
      "action": "receive",
      "channel": {
        "$ref": "#/channels/trades.{instrument_name}.{interval}"
      },
      "messages": [
        {
          "$ref": "#/channels/trades.{instrument_name}.{interval}/messages/trades.{instrument_name}.{interval}_message"
        }
      ],
      "tags": [
        {
          "name": "trades"
        }
      ]
    },
    "subscribe_block_trade_confirmations": {
      "title": "Subscribe to block_trade_confirmations",
      "summary": "Provides notifications regarding block trade approval",
      "description": "",
      "action": "receive",
      "channel": {
        "$ref": "#/channels/block_trade_confirmations"
      },
      "messages": [
        {
          "$ref": "#/channels/block_trade_confirmations/messages/block_trade_confirmations_message"
        }
      ]
    },
    "subscribe_block_trade_confirmations.{currency}": {
      "title": "Subscribe to block_trade_confirmations.{currency}",
      "summary": "Provides notifications regarding block trade approval. Supports filtering by currency.",
      "description": "",
      "action": "receive",
      "channel": {
        "$ref": "#/channels/block_trade_confirmations.{currency}"
      },
      "messages": [
        {
          "$ref": "#/channels/block_trade_confirmations.{currency}/messages/block_trade_confirmations.{currency}_message"
        }
      ]
    },
    "subscribe_trades.{kind}.{currency}.{interval}": {
      "title": "Subscribe to trades.{kind}.{currency}.{interval}",
      "summary": "Get notifications about trades in any instrument of a given kind and given currency.",
      "description": "",
      "action": "receive",
      "channel": {
        "$ref": "#/channels/trades.{kind}.{currency}.{interval}"
      },
      "messages": [
        {
          "$ref": "#/channels/trades.{kind}.{currency}.{interval}/messages/trades.{kind}.{currency}.{interval}_message"
        }
      ],
      "tags": [
        {
          "name": "trades"
        }
      ]
    },
    "subscribe_deribit_price_index.{index_name}": {
      "title": "Subscribe to deribit_price_index.{index_name}",
      "summary": "Subscribe to deribit_price_index.{index_name}",
      "description": "Provides information about current value (price) for Deribit Index",
      "action": "receive",
      "channel": {
        "$ref": "#/channels/deribit_price_index.{index_name}"
      },
      "messages": [
        {
          "$ref": "#/channels/deribit_price_index.{index_name}/messages/deribit_price_index.{index_name}_message"
        }
      ],
      "tags": [
        {
          "name": "indices"
        }
      ]
    },
    "subscribe_deribit_price_ranking.{index_name}": {
      "title": "Subscribe to deribit_price_ranking.{index_name}",
      "summary": "Subscribe to deribit_price_ranking.{index_name}",
      "description": "Provides information about current value (price) for stock exchanges used to calculate Deribit Index",
      "action": "receive",
      "channel": {
        "$ref": "#/channels/deribit_price_ranking.{index_name}"
      },
      "messages": [
        {
          "$ref": "#/channels/deribit_price_ranking.{index_name}/messages/deribit_price_ranking.{index_name}_message"
        }
      ],
      "tags": [
        {
          "name": "indices"
        }
      ]
    },
    "subscribe_deribit_price_statistics.{index_name}": {
      "title": "Subscribe to deribit_price_statistics.{index_name}",
      "summary": "Subscribe to deribit_price_statistics.{index_name}",
      "description": "This subscription provides basic statistics about Deribit Index",
      "action": "receive",
      "channel": {
        "$ref": "#/channels/deribit_price_statistics.{index_name}"
      },
      "messages": [
        {
          "$ref": "#/channels/deribit_price_statistics.{index_name}/messages/deribit_price_statistics.{index_name}_message"
        }
      ],
      "tags": [
        {
          "name": "indices"
        }
      ]
    },
    "subscribe_deribit_volatility_index.{index_name}": {
      "title": "Subscribe to deribit_volatility_index.{index_name}",
      "summary": "Subscribe to deribit_volatility_index.{index_name}",
      "description": "Provides volatility index subscription",
      "action": "receive",
      "channel": {
        "$ref": "#/channels/deribit_volatility_index.{index_name}"
      },
      "messages": [
        {
          "$ref": "#/channels/deribit_volatility_index.{index_name}/messages/deribit_volatility_index.{index_name}_message"
        }
      ]
    },
    "subscribe_markprice.options.{index_name}": {
      "title": "Subscribe to markprice.options.{index_name}",
      "summary": "Provides information about options markprices.",
      "description": "",
      "action": "receive",
      "channel": {
        "$ref": "#/channels/markprice.options.{index_name}"
      },
      "messages": [
        {
          "$ref": "#/channels/markprice.options.{index_name}/messages/markprice.options.{index_name}_message"
        }
      ]
    },
    "subscribe_estimated_expiration_price.{index_name}": {
      "title": "Subscribe to estimated_expiration_price.{index_name}",
      "summary": "Subscribe to estimated_expiration_price.{index_name}",
      "description": "Returns calculated (estimated) ending price for given index.",
      "action": "receive",
      "channel": {
        "$ref": "#/channels/estimated_expiration_price.{index_name}"
      },
      "messages": [
        {
          "$ref": "#/channels/estimated_expiration_price.{index_name}/messages/estimated_expiration_price.{index_name}_message"
        }
      ]
    },
    "subscribe_chart.trades.{instrument_name}.{resolution}": {
      "title": "Subscribe to chart.trades.{instrument_name}.{resolution}",
      "summary": "Publicly available market data used to generate a TradingView candle chart. During a single resolution period, many events can be sent, each with updated values for the recent period.<br/><br/> **NOTICE** When there is no trade during the requested resolution period (e.g. 1 minute), then a filling sample is generated which uses data from the last available trade candle (open and close values).",
      "description": "",
      "action": "receive",
      "channel": {
        "$ref": "#/channels/chart.trades.{instrument_name}.{resolution}"
      },
      "messages": [
        {
          "$ref": "#/channels/chart.trades.{instrument_name}.{resolution}/messages/chart.trades.{instrument_name}.{resolution}_message"
        }
      ],
      "tags": [
        {
          "name": "trades"
        }
      ]
    },
    "subscribe_user.mmp_trigger.{index_name}": {
      "title": "Subscribe to user.mmp_trigger.{index_name}",
      "summary": "Subscribe to user.mmp_trigger.{index_name}",
      "description": "Triggered when one of mmp limits is crossed",
      "action": "receive",
      "channel": {
        "$ref": "#/channels/user.mmp_trigger.{index_name}"
      },
      "messages": [
        {
          "$ref": "#/channels/user.mmp_trigger.{index_name}/messages/user.mmp_trigger.{index_name}_message"
        }
      ],
      "tags": [
        {
          "name": "private"
        }
      ]
    },
    "subscribe_user.portfolio.{currency}": {
      "title": "Subscribe to user.portfolio.{currency}",
      "summary": "Subscribe to user.portfolio.{currency}",
      "description": "Provides information about current user portfolio",
      "action": "receive",
      "channel": {
        "$ref": "#/channels/user.portfolio.{currency}"
      },
      "messages": [
        {
          "$ref": "#/channels/user.portfolio.{currency}/messages/user.portfolio.{currency}_message"
        }
      ],
      "tags": [
        {
          "name": "private"
        },
        {
          "name": "portfolio"
        }
      ]
    },
    "subscribe_user.trades.{instrument_name}.{interval}": {
      "title": "Subscribe to user.trades.{instrument_name}.{interval}",
      "summary": "Get notifications about the user's trades in an instrument.",
      "description": "",
      "action": "receive",
      "channel": {
        "$ref": "#/channels/user.trades.{instrument_name}.{interval}"
      },
      "messages": [
        {
          "$ref": "#/channels/user.trades.{instrument_name}.{interval}/messages/user.trades.{instrument_name}.{interval}_message"
        }
      ],
      "tags": [
        {
          "name": "private"
        },
        {
          "name": "trades"
        }
      ]
    },
    "subscribe_user.trades.{kind}.{currency}.{interval}": {
      "title": "Subscribe to user.trades.{kind}.{currency}.{interval}",
      "summary": "Get notifications about the user's trades in any instrument of a given kind and given currency.",
      "description": "",
      "action": "receive",
      "channel": {
        "$ref": "#/channels/user.trades.{kind}.{currency}.{interval}"
      },
      "messages": [
        {
          "$ref": "#/channels/user.trades.{kind}.{currency}.{interval}/messages/user.trades.{kind}.{currency}.{interval}_message"
        }
      ],
      "tags": [
        {
          "name": "private"
        },
        {
          "name": "trades"
        }
      ]
    },
    "subscribe_user.combo_trades.{instrument_name}.{interval}": {
      "title": "Subscribe to user.combo_trades.{instrument_name}.{interval}",
      "summary": "Get notifications about the user's trades in an instrument (trades contain `legs` field).",
      "description": "",
      "action": "receive",
      "channel": {
        "$ref": "#/channels/user.combo_trades.{instrument_name}.{interval}"
      },
      "messages": [
        {
          "$ref": "#/channels/user.combo_trades.{instrument_name}.{interval}/messages/user.combo_trades.{instrument_name}.{interval}_message"
        }
      ],
      "tags": [
        {
          "name": "private"
        },
        {
          "name": "trades"
        }
      ]
    },
    "subscribe_user.combo_trades.{kind}.{currency}.{interval}": {
      "title": "Subscribe to user.combo_trades.{kind}.{currency}.{interval}",
      "summary": "Get notifications about the user's trades in any instrument of a given kind and given currency (trades contain `legs` field).",
      "description": "",
      "action": "receive",
      "channel": {
        "$ref": "#/channels/user.combo_trades.{kind}.{currency}.{interval}"
      },
      "messages": [
        {
          "$ref": "#/channels/user.combo_trades.{kind}.{currency}.{interval}/messages/user.combo_trades.{kind}.{currency}.{interval}_message"
        }
      ],
      "tags": [
        {
          "name": "private"
        },
        {
          "name": "trades"
        }
      ]
    },
    "subscribe_instrument.state.{kind}.{currency}": {
      "title": "Subscribe to instrument.state.{kind}.{currency}",
      "summary": "Get notifications about new or terminated instruments of given kind in given currency. **(Please note that our system does not send notifications when currencies are locked. Users are advised to subscribe to the [platform_state](https://docs.deribit.com/#platform_state) channel to monitor the state of currencies actively.)**",
      "description": "",
      "action": "receive",
      "channel": {
        "$ref": "#/channels/instrument.state.{kind}.{currency}"
      },
      "messages": [
        {
          "$ref": "#/channels/instrument.state.{kind}.{currency}/messages/instrument.state.{kind}.{currency}_message"
        }
      ],
      "tags": [
        {
          "name": "internal"
        }
      ]
    },
    "subscribe_user.orders.{instrument_name}.raw": {
      "title": "Subscribe to user.orders.{instrument_name}.raw",
      "summary": "Get notifications about changes in user's orders for given instrument.",
      "description": "",
      "action": "receive",
      "channel": {
        "$ref": "#/channels/user.orders.{instrument_name}.raw"
      },
      "messages": [
        {
          "$ref": "#/channels/user.orders.{instrument_name}.raw/messages/user.orders.{instrument_name}.raw_message"
        }
      ],
      "tags": [
        {
          "name": "private"
        },
        {
          "name": "orders"
        }
      ]
    },
    "subscribe_user.orders.{instrument_name}.{interval}": {
      "title": "Subscribe to user.orders.{instrument_name}.{interval}",
      "summary": "Get notifications about changes in user's orders for given instrument.",
      "description": "",
      "action": "receive",
      "channel": {
        "$ref": "#/channels/user.orders.{instrument_name}.{interval}"
      },
      "messages": [
        {
          "$ref": "#/channels/user.orders.{instrument_name}.{interval}/messages/user.orders.{instrument_name}.{interval}_message"
        }
      ],
      "tags": [
        {
          "name": "private"
        },
        {
          "name": "orders"
        }
      ]
    },
    "subscribe_user.orders.{kind}.{currency}.raw": {
      "title": "Subscribe to user.orders.{kind}.{currency}.raw",
      "summary": "Get notifications about changes in user's orders in instruments of a given kind and currency.",
      "description": "",
      "action": "receive",
      "channel": {
        "$ref": "#/channels/user.orders.{kind}.{currency}.raw"
      },
      "messages": [
        {
          "$ref": "#/channels/user.orders.{kind}.{currency}.raw/messages/user.orders.{kind}.{currency}.raw_message"
        }
      ],
      "tags": [
        {
          "name": "private"
        },
        {
          "name": "orders"
        }
      ]
    },
    "subscribe_user.orders.{kind}.{currency}.{interval}": {
      "title": "Subscribe to user.orders.{kind}.{currency}.{interval}",
      "summary": "Get notifications about changes in user's orders in instruments of a given kind and currency.",
      "description": "",
      "action": "receive",
      "channel": {
        "$ref": "#/channels/user.orders.{kind}.{currency}.{interval}"
      },
      "messages": [
        {
          "$ref": "#/channels/user.orders.{kind}.{currency}.{interval}/messages/user.orders.{kind}.{currency}.{interval}_message"
        }
      ],
      "tags": [
        {
          "name": "private"
        },
        {
          "name": "orders"
        }
      ]
    },
    "subscribe_user.changes.{instrument_name}.{interval}": {
      "title": "Subscribe to user.changes.{instrument_name}.{interval}",
      "summary": "Get notifications about the user's updates related to order, trades, etc. in an instrument.",
      "description": "",
      "action": "receive",
      "channel": {
        "$ref": "#/channels/user.changes.{instrument_name}.{interval}"
      },
      "messages": [
        {
          "$ref": "#/channels/user.changes.{instrument_name}.{interval}/messages/user.changes.{instrument_name}.{interval}_message"
        }
      ],
      "tags": [
        {
          "name": "private"
        }
      ]
    },
    "subscribe_user.changes.{kind}.{currency}.{interval}": {
      "title": "Subscribe to user.changes.{kind}.{currency}.{interval}",
      "summary": "Get notifications about changes in user's updates related to order, trades, etc. in instruments of a given kind and currency.",
      "description": "",
      "action": "receive",
      "channel": {
        "$ref": "#/channels/user.changes.{kind}.{currency}.{interval}"
      },
      "messages": [
        {
          "$ref": "#/channels/user.changes.{kind}.{currency}.{interval}/messages/user.changes.{kind}.{currency}.{interval}_message"
        }
      ],
      "tags": [
        {
          "name": "private"
        }
      ]
    },
    "subscribe_user.access_log": {
      "title": "Subscribe to user.access_log",
      "summary": "Get notifications about security events related to the account",
      "description": "",
      "action": "receive",
      "channel": {
        "$ref": "#/channels/user.access_log"
      },
      "messages": [
        {
          "$ref": "#/channels/user.access_log/messages/user.access_log_message"
        }
      ],
      "tags": [
        {
          "name": "private"
        }
      ]
    },
    "subscribe_user.lock": {
      "title": "Subscribe to user.lock",
      "summary": "Get notification when account is locked/unlocked",
      "description": "",
      "action": "receive",
      "channel": {
        "$ref": "#/channels/user.lock"
      },
      "messages": [
        {
          "$ref": "#/channels/user.lock/messages/user.lock_message"
        }
      ],
      "tags": [
        {
          "name": "private"
        }
      ]
    },
    "subscribe_block_rfq.maker.{currency}": {
      "title": "Subscribe to block_rfq.maker.{currency}",
      "summary": "Get notification when new Block RFQ is created",
      "description": "",
      "action": "receive",
      "channel": {
        "$ref": "#/channels/block_rfq.maker.{currency}"
      },
      "messages": [
        {
          "$ref": "#/channels/block_rfq.maker.{currency}/messages/block_rfq.maker.{currency}_message"
        }
      ],
      "tags": [
        {
          "name": "private"
        },
        {
          "name": "block-trading"
        }
      ]
    },
    "subscribe_block_rfq.taker.{currency}": {
      "title": "Subscribe to block_rfq.taker.{currency}",
      "summary": "Get notification about state of your Block RFQ. `trades` are only visible if the Block RFQ was filled. Please note that after Block RFQ creation, a grace period of 5 seconds begins, during which the taker cannot see quotes or trade the Block RFQ.",
      "description": "",
      "action": "receive",
      "channel": {
        "$ref": "#/channels/block_rfq.taker.{currency}"
      },
      "messages": [
        {
          "$ref": "#/channels/block_rfq.taker.{currency}/messages/block_rfq.taker.{currency}_message"
        }
      ],
      "tags": [
        {
          "name": "private"
        },
        {
          "name": "block-trading"
        }
      ]
    },
    "subscribe_block_rfq.maker.quotes.{currency}": {
      "title": "Subscribe to block_rfq.maker.quotes.{currency}",
      "summary": "Get notification about state of your Block RFQ quotes",
      "description": "",
      "action": "receive",
      "channel": {
        "$ref": "#/channels/block_rfq.maker.quotes.{currency}"
      },
      "messages": [
        {
          "$ref": "#/channels/block_rfq.maker.quotes.{currency}/messages/block_rfq.maker.quotes.{currency}_message"
        }
      ],
      "tags": [
        {
          "name": "private"
        },
        {
          "name": "block-trading"
        }
      ]
    },
    "subscribe_block_rfq.trades.{currency}": {
      "title": "Subscribe to block_rfq.trades.{currency}",
      "summary": "Get notification about recent Block RFQ trades",
      "description": "",
      "action": "receive",
      "channel": {
        "$ref": "#/channels/block_rfq.trades.{currency}"
      },
      "messages": [
        {
          "$ref": "#/channels/block_rfq.trades.{currency}/messages/block_rfq.trades.{currency}_message"
        }
      ],
      "tags": [
        {
          "name": "trades"
        }
      ]
    }
  },
  "components": {
    "schemas": {
      "DeribitMessage": {
        "type": "object",
        "description": "Base message structure for Deribit WebSocket messages",
        "properties": {
          "jsonrpc": {
            "type": "string",
            "const": "2.0"
          },
          "method": {
            "type": "string",
            "description": "The subscription method"
          },
          "params": {
            "type": "object",
            "description": "Method parameters"
          }
        },
        "required": [
          "jsonrpc",
          "method"
        ]
      }
    }
  }
}